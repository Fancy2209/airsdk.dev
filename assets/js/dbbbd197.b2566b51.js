"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[53001],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>u});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=l(t),m=i,u=d["".concat(s,".").concat(m)]||d[m]||g[m]||a;return t?r.createElement(u,p(p({ref:n},c),{},{components:t})):r.createElement(u,p({ref:n},c))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,p=new Array(a);p[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[d]="string"==typeof e?e:i,p[1]=o;for(var l=2;l<a;l++)p[l]=t[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},54379:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>g,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var r=t(87462),i=(t(67294),t(3905));const a={sidebar_position:7},p="Printing example: Scaling, cropping, and responding",o={unversionedId:"development/client-system-interaction/printing/printing-example-scaling-cropping-and-responding",id:"development/client-system-interaction/printing/printing-example-scaling-cropping-and-responding",title:"Printing example: Scaling, cropping, and responding",description:"In some cases, you want to adjust the size (or other properties) of a display",source:"@site/docs/development/client-system-interaction/printing/printing-example-scaling-cropping-and-responding.md",sourceDirName:"development/client-system-interaction/printing",slug:"/development/client-system-interaction/printing/printing-example-scaling-cropping-and-responding",permalink:"/docs/development/client-system-interaction/printing/printing-example-scaling-cropping-and-responding",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/client-system-interaction/printing/printing-example-scaling-cropping-and-responding.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"mainSidebar",previous:{title:"Printing example: Multiple-page printing",permalink:"/docs/development/client-system-interaction/printing/printing-example-multiple-page-printing"},next:{title:"Printing example: Page setup and print options",permalink:"/docs/development/client-system-interaction/printing/printing-example-page-setup-and-print-options"}},s={},l=[],c={toc:l},d="wrapper";function g(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"printing-example-scaling-cropping-and-responding"},"Printing example: Scaling, cropping, and responding"),(0,i.kt)("p",null,"In some cases, you want to adjust the size (or other properties) of a display\nobject when printing it to accommodate differences between the way it appears on\nscreen and the way it appears printed on paper. When you adjust the properties\nof a display object before printing (for example, by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"scaleX")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"scaleY")," properties), be aware that if the object scales larger than the defined\nrectangle for the print area, the object is cropped. You will also probably want\nto reset the properties after the pages have been printed."),(0,i.kt)("p",null,"The following code scales the dimensions of the ",(0,i.kt)("inlineCode",{parentName:"p"},"txt")," display object (but not\nthe green box background), and the text field ends up cropped by the dimensions\nof the specified rectangle. After printing, the text field is returned to its\noriginal size for display on screen. If the user cancels the print job from the\noperating system's Print dialog box, the content in the Flash runtime changes to\nalert the user that the job has been canceled."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'package\n{\n    import flash.printing.PrintJob;\n    import flash.display.Sprite;\n    import flash.text.TextField;\n    import flash.display.Stage;\n    import flash.geom.Rectangle;\n\n    public class PrintScaleExample extends Sprite\n    {\n        private var bg:Sprite;\n        private var txt:TextField;\n\n        public function PrintScaleExample():void\n        {\n            init();\n            draw();\n            printPage();\n        }\n\n        private function printPage():void\n        {\n            var pj:PrintJob = new PrintJob();\n            txt.scaleX = 3;\n            txt.scaleY = 2;\n            if (pj.start())\n            {\n                trace(">> pj.orientation: " + pj.orientation);\n                trace(">> pj.pageWidth: " + pj.pageWidth);\n                trace(">> pj.pageHeight: " + pj.pageHeight);\n                trace(">> pj.paperWidth: " + pj.paperWidth);\n                trace(">> pj.paperHeight: " + pj.paperHeight);\n\n                try\n                {\n                    pj.addPage(this, new Rectangle(0, 0, 100, 100));\n                }\n                catch (error:Error)\n                {\n                    // Do nothing.\n                }\n                pj.send();\n            }\n            else\n            {\n                txt.text = "Print job canceled";\n            }\n            // Reset the txt scale properties.\n            txt.scaleX = 1;\n            txt.scaleY = 1;\n        }\n\n        private function init():void\n        {\n            bg = new Sprite();\n            bg.graphics.beginFill(0x00FF00);\n            bg.graphics.drawRect(0, 0, 100, 200);\n            bg.graphics.endFill();\n\n            txt = new TextField();\n            txt.border = true;\n            txt.text = "Hello World";\n        }\n\n        private function draw():void\n        {\n            addChild(bg);\n            addChild(txt);\n            txt.x = 50;\n            txt.y = 50;\n        }\n    }\n}\n')))}g.isMDXComponent=!0}}]);