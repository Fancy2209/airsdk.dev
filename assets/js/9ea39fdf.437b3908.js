"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[72393],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),u=i,m=p["".concat(s,".").concat(u)]||p[u]||h[u]||o;return t?a.createElement(m,r(r({ref:n},d),{},{components:t})):a.createElement(m,r({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:i,r[1]=l;for(var c=2;c<o;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},83554:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=t(87462),i=(t(67294),t(3905));const o={sidebar_position:4},r="Handling HTML-related events in AIR",l={unversionedId:"development/html-content-in-air/handling-html-related-events-in-air",id:"development/html-content-in-air/handling-html-related-events-in-air",title:"Handling HTML-related events in AIR",description:"An event-handling system allows programmers to respond to user input and system",source:"@site/docs/development/html-content-in-air/handling-html-related-events-in-air.md",sourceDirName:"development/html-content-in-air",slug:"/development/html-content-in-air/handling-html-related-events-in-air",permalink:"/docs/development/html-content-in-air/handling-html-related-events-in-air",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/html-content-in-air/handling-html-related-events-in-air.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"mainSidebar",previous:{title:"Setting the user agent used when loading HTML content",permalink:"/docs/development/html-content-in-air/scripting-the-air-html-container/setting-the-user-agent-when-loading-html-content"},next:{title:"Displaying HTML content in mobile apps",permalink:"/docs/development/html-content-in-air/displaying-html-content-in-mobile-apps"}},s={},c=[{value:"HTMLLoader events",id:"htmlloader-events",level:2},{value:"Handling DOM events with ActionScript",id:"handling-dom-events-with-actionscript",level:2},{value:"Responding to uncaught JavaScript exceptions",id:"responding-to-uncaught-javascript-exceptions",level:2},{value:"Handling runtime events with JavaScript",id:"handling-runtime-events-with-javascript",level:2},{value:"Creating an event handler function",id:"creating-an-event-handler-function",level:3},{value:"Removing event listeners",id:"removing-event-listeners",level:4},{value:"Removing event listeners in HTML pages that navigate",id:"removing-event-listeners-in-html-pages-that-navigate",level:4},{value:"Checking for existing event listeners",id:"checking-for-existing-event-listeners",level:4}],d={toc:c},p="wrapper";function h(e){let{components:n,...t}=e;return(0,i.kt)(p,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"handling-html-related-events-in-air"},"Handling HTML-related events in AIR"),(0,i.kt)("p",null,"An event-handling system allows programmers to respond to user input and system\nevents in a convenient way. The Adobe\xae AIR\xae event model is not only convenient,\nbut also standards-compliant. Based on the Document Object Model (DOM) Level 3\nEvents Specification, an industry-standard event-handling architecture, the\nevent model provides a powerful, yet intuitive, event-handling tool for\nprogrammers."),(0,i.kt)("h2",{id:"htmlloader-events"},"HTMLLoader events"),(0,i.kt)("p",null,"An HTMLLoader object dispatches the following Adobe\xae ActionScript\xae 3.0 events:"),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,(0,i.kt)("p",null,"Event")),(0,i.kt)("th",null,(0,i.kt)("p",null,"Description")))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("p",null,(0,i.kt)("samp",null,"htmlDOMInitialize"))),(0,i.kt)("td",null,(0,i.kt)("p",null,"Dispatched when the HTML document is created, but before any scripts are parsed or DOM nodes are added to the page."))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("p",null,(0,i.kt)("samp",null,"complete"))),(0,i.kt)("td",null,(0,i.kt)("p",null,"Dispatched when the HTML DOM has been created in response to a load operation, immediately after the ",(0,i.kt)("samp",null,"onload")," event in the HTML page."))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("p",null,(0,i.kt)("samp",null,"htmlBoundsChanged"))),(0,i.kt)("td",null,(0,i.kt)("p",null,"Dispatched when one or both of the ",(0,i.kt)("samp",null,"contentWidth")," and",(0,i.kt)("samp",null,"contentHeight")," properties have changed."))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("p",null,(0,i.kt)("samp",null,"locationChange"))),(0,i.kt)("td",null,(0,i.kt)("p",null,"Dispatched when the location property of the HTMLLoader has changed."))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("p",null,(0,i.kt)("samp",null,"locationChanging"))),(0,i.kt)("td",null,(0,i.kt)("p",null,"Dispatched before the location of the HTMLLoader changes because of user navigation, a JavaScript call, or a redirect. The",(0,i.kt)("samp",null,"locationChanging")," event is not dispatched when you call the",(0,i.kt)("samp",null,"load()"),", ",(0,i.kt)("samp",null,"loadString()"),", ",(0,i.kt)("samp",null,"reload()"),",",(0,i.kt)("samp",null,"historyGo()"),", ",(0,i.kt)("samp",null,"historyForward()"),", or",(0,i.kt)("samp",null,"historyBack()")," methods."),(0,i.kt)("p",null,"Calling the ",(0,i.kt)("samp",null,"preventDefault()")," method of the dispatched event object cancels navigation."),(0,i.kt)("p",null,"If a link is opened in the system browser, a locationChanging event is not dispatched since the HTMLLoader does not change location."))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("p",null,(0,i.kt)("samp",null,"scroll"))),(0,i.kt)("td",null,(0,i.kt)("p",null,"Dispatched anytime the HTML engine changes the scroll position. Scroll events can be because of navigation to anchor links (",(0,i.kt)("samp",null,"#")," links) in the page or because of calls to the",(0,i.kt)("samp",null,"window.scrollTo()")," method. Entering text in a text input or text area can also cause a scroll event."))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("p",null,(0,i.kt)("samp",null,"uncaughtScriptException"))),(0,i.kt)("td",null,(0,i.kt)("p",null,"Dispatched when a JavaScript exception occurs in the HTMLLoader and the exception is not caught in JavaScript code."))))),(0,i.kt)("p",null,"You can also register an ActionScript function for a JavaScript event (such as\n",(0,i.kt)("inlineCode",{parentName:"p"},"onClick"),"). For details, see\n",(0,i.kt)("a",{parentName:"p",href:"/docs/development/html-content-in-air/handling-html-related-events-in-air#handling-dom-events-with-actionscript"},"Handling DOM events with ActionScript"),"."),(0,i.kt)("h2",{id:"handling-dom-events-with-actionscript"},"Handling DOM events with ActionScript"),(0,i.kt)("p",null,"You can register ActionScript functions to respond to JavaScript events. For\nexample, consider the following HTML content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'<html>\n<body>\n    <a href="#" id="testLink">Click me.</a>\n</html>\n')),(0,i.kt)("p",null,"You can register an ActionScript function as a handler for any event in the\npage. For example, the following code adds the ",(0,i.kt)("inlineCode",{parentName:"p"},"clickHandler()")," function as the\nlistener for the ",(0,i.kt)("inlineCode",{parentName:"p"},"onclick")," event of the ",(0,i.kt)("inlineCode",{parentName:"p"},"testLink")," element in the HTML page:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'var html:HTMLLoader = new HTMLLoader( );\nvar urlReq:URLRequest = new URLRequest("test.html");\nhtml.load(urlReq);\nhtml.addEventListener(Event.COMPLETE, completeHandler);\n\nfunction completeHandler(event:Event):void {\n    html.window.document.getElementById("testLink").onclick = clickHandler;\n}\n\nfunction clickHandler( event:Object ):void {\n    trace("Event of type: " + event.type );\n}\n')),(0,i.kt)("p",null,"The event object dispatched is not of type flash.events.Event or one of the\nEvent subclasses. Use the Object class to declare a type for the event handler\nfunction argument."),(0,i.kt)("p",null,"You can also use the ",(0,i.kt)("inlineCode",{parentName:"p"},"addEventListener()")," method to register for these events.\nFor example, you could replace the ",(0,i.kt)("inlineCode",{parentName:"p"},"completeHandler()")," method in the previous\nexample with the following code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'function completeHandler(event:Event):void {\n    var testLink:Object = html.window.document.getElementById("testLink");\n    testLink.addEventListener("click", clickHandler);\n}\n')),(0,i.kt)("p",null,"When a listener refers to a specific DOM element, it is good practice to wait\nfor the parent HTMLLoader to dispatch the ",(0,i.kt)("inlineCode",{parentName:"p"},"complete")," event before adding the\nevent listeners. HTML pages often load multiple files and the HTML DOM is not\nfully built until all the files are loaded and parsed. The HTMLLoader dispatches\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"complete")," event when all elements have been created."),(0,i.kt)("h2",{id:"responding-to-uncaught-javascript-exceptions"},"Responding to uncaught JavaScript exceptions"),(0,i.kt)("p",null,"Consider the following HTML:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'<html>\n<head>\n    <script>\n        function throwError() {\n            var x = 400 * melbaToast;\n        }\n    <\/script>\n</head>\n<body>\n    <a href="#" onclick="throwError()">Click me.</a>\n</html>\n')),(0,i.kt)("p",null,"It contains a JavaScript function, ",(0,i.kt)("inlineCode",{parentName:"p"},"throwError()"),", that references an unknown\nvariable, ",(0,i.kt)("inlineCode",{parentName:"p"},"melbaToast"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"var x = 400 * melbaToast;\n")),(0,i.kt)("p",null,"When a JavaScript operation encounters an illegal operation that is not caught\nin the JavaScript code with a ",(0,i.kt)("inlineCode",{parentName:"p"},"try")," / ",(0,i.kt)("inlineCode",{parentName:"p"},"catch")," structure, the HTMLLoader object\ncontaining the page dispatches an HTMLUncaughtScriptExceptionEvent event. You\ncan register a handler for this event, as in the following code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'var html:HTMLLoader = new HTMLLoader();\nvar urlReq:URLRequest = new URLRequest("test.html");\nhtml.load(urlReq);\nhtml.width = container.width;\nhtml.height = container.height;\ncontainer.addChild(html);\nhtml.addEventListener(HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION,\n                       htmlErrorHandler);\nfunction htmlErrorHandler(event:HTMLUncaughtJavaScriptExceptionEvent):void\n{\n    event.preventDefault();\n    trace("exceptionValue:", event.exceptionValue)\n    for (var i:int = 0; i < event.stackTrace.length; i++)\n    {\n        trace("sourceURL:", event.stackTrace[i].sourceURL);\n        trace("line:", event.stackTrace[i].line);\n        trace("function:", event.stackTrace[i].functionName);\n    }\n}\n')),(0,i.kt)("p",null,"Within JavaScript, you can handle the same event using the window.htmlLoader\nproperty:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'<html>\n<head>\n    <script language="javascript" type="text/javascript" src="AIRAliases.js"><\/script>\n    <script>\n        function throwError() {\n            var x = 400 * melbaToast;\n        }\n\n        function htmlErrorHandler(event) {\n            event.preventDefault();\n            var message = "exceptionValue:" + event.exceptionValue + "\\n";\n            for (var i = 0; i < event.stackTrace.length; i++){\n                message += "sourceURL:" + event.stackTrace[i].sourceURL +"\\n";\n                message += "line:" + event.stackTrace[i].line +"\\n";\n                message += "function:" + event.stackTrace[i].functionName + "\\n";\n            }\n            alert(message);\n        }\n\n        window.htmlLoader.addEventListener("uncaughtScriptException", htmlErrorHandler);\n    <\/script>\n</head>\n<body>\n    <a href="#" onclick="throwError()">Click me.</a>\n</html>\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"htmlErrorHandler()")," event handler cancels the default behavior of the event\n(which is to send the JavaScript error message to the AIR trace output), and\ngenerates its own output message. It outputs the value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"exceptionValue"),"\nof the HTMLUncaughtScriptExceptionEvent object. It outputs the properties of\neach object in the ",(0,i.kt)("inlineCode",{parentName:"p"},"stackTrace")," array:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"exceptionValue: ReferenceError: Can't find variable: melbaToast\nsourceURL: app:/test.html\nline: 5\nfunction: throwError\nsourceURL: app:/test.html\nline: 10\nfunction: onclick\n")),(0,i.kt)("h2",{id:"handling-runtime-events-with-javascript"},"Handling runtime events with JavaScript"),(0,i.kt)("p",null,"The runtime classes support adding event handlers with the ",(0,i.kt)("inlineCode",{parentName:"p"},"addEventListener()"),"\nmethod. To add a handler function for an event, call the ",(0,i.kt)("inlineCode",{parentName:"p"},"addEventListener()"),"\nmethod of the object that dispatches the event, providing the event type and the\nhandling function. For example, to listen for the ",(0,i.kt)("inlineCode",{parentName:"p"},"closing")," event dispatched\nwhen a user clicks the window close button on the title bar, use the following\nstatement:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"window.nativeWindow.addEventListener(air.NativeWindow.CLOSING, handleWindowClosing);\n")),(0,i.kt)("h3",{id:"creating-an-event-handler-function"},"Creating an event handler function"),(0,i.kt)("p",null,"The following code creates a simple HTML file that displays information about\nthe position of the main window. A handler function named ",(0,i.kt)("inlineCode",{parentName:"p"},"moveHandler()"),",\nlistens for a move event (defined by the NativeWindowBoundsEvent class) of the\nmain window."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'<html>\n<script src="AIRAliases.js" />\n<script>\n    function init() {\n        writeValues();\n        window.nativeWindow.addEventListener(air.NativeWindowBoundsEvent.MOVE,\n                                                 moveHandler);\n    }\n    function writeValues() {\n        document.getElementById("xText").value = window.nativeWindow.x;\n        document.getElementById("yText").value = window.nativeWindow.y;\n    }\n    function moveHandler(event) {\n        air.trace(event.type); // move\n        writeValues();\n    }\n<\/script>\n<body onload="init()" />\n    <table>\n        <tr>\n            <td>Window X:</td>\n            <td><textarea id="xText"></textarea></td>\n        </tr>\n        <tr>\n            <td>Window Y:</td>\n            <td><textarea id="yText"></textarea></td>\n        </tr>\n    </table>\n</body>\n</html>\n')),(0,i.kt)("p",null,"When a user moves the window, the textarea elements display the updated X and Y\npositions of the window:"),(0,i.kt)("p",null,"Notice that the event object is passed as an argument to the ",(0,i.kt)("inlineCode",{parentName:"p"},"moveHandler()"),"\nmethod. The event parameter allows your handler function to examine the event\nobject. In this example, you use the event object's ",(0,i.kt)("inlineCode",{parentName:"p"},"type")," property to report\nthat the event is a ",(0,i.kt)("inlineCode",{parentName:"p"},"move")," event."),(0,i.kt)("h4",{id:"removing-event-listeners"},"Removing event listeners"),(0,i.kt)("p",null,"You can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"removeEventListener()")," method to remove an event listener that\nyou no longer need. It is a good idea to remove any listeners that will no\nlonger be used. Required parameters include the ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"\nparameters, which are the same as the required parameters for the\n",(0,i.kt)("inlineCode",{parentName:"p"},"addEventListener()")," method."),(0,i.kt)("h4",{id:"removing-event-listeners-in-html-pages-that-navigate"},"Removing event listeners in HTML pages that navigate"),(0,i.kt)("p",null,'When HTML content navigates, or when HTML content is discarded because a window\nthat contains it is closed, the event listeners that reference objects on the\nunloaded page are not automatically removed. When an object dispatches an event\nto a handler that has already been unloaded, you see the following error\nmessage: "The application attempted to reference a JavaScript object in an HTML\npage that is no longer loaded."'),(0,i.kt)("p",null,"To avoid this error, remove JavaScript event listeners in an HTML page before it\ngoes away. In the case of page navigation (within an HTMLLoader object), remove\nthe event listener during the ",(0,i.kt)("inlineCode",{parentName:"p"},"unload")," event of the ",(0,i.kt)("inlineCode",{parentName:"p"},"window")," object."),(0,i.kt)("p",null,"For example, the following JavaScript code removes an event listener for an\n",(0,i.kt)("inlineCode",{parentName:"p"},"uncaughtScriptException")," event:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"window.onunload = cleanup;\nwindow.htmlLoader.addEventListener('uncaughtScriptException', uncaughtScriptException);\nfunction cleanup()\n{\n    window.htmlLoader.removeEventListener('uncaughtScriptException',\n                            uncaughtScriptExceptionHandler);\n}\n")),(0,i.kt)("p",null,"To prevent the error from occurring when closing windows that contain HTML\ncontent, call a cleanup function in response to the ",(0,i.kt)("inlineCode",{parentName:"p"},"closing")," event of the\nNativeWindow object ( ",(0,i.kt)("inlineCode",{parentName:"p"},"window.nativeWindow"),"). For example, the following\nJavaScript code removes an event listener for an ",(0,i.kt)("inlineCode",{parentName:"p"},"uncaughtScriptException"),"\nevent:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"window.nativeWindow.addEventListener(air.Event.CLOSING, cleanup);\nfunction cleanup()\n{\n    window.htmlLoader.removeEventListener('uncaughtScriptException',\n                            uncaughtScriptExceptionHandler);\n}\n")),(0,i.kt)("p",null,"You can also prevent this error from occurring by removing an event listener as\nsoon as it runs (if the event only needs to be handled once). For example, the\nfollowing JavaScript code creates an html window by calling the\n",(0,i.kt)("inlineCode",{parentName:"p"},"createRootWindow()")," method of the HTMLLoader class and adds an event listener\nfor the ",(0,i.kt)("inlineCode",{parentName:"p"},"complete")," event. When the ",(0,i.kt)("inlineCode",{parentName:"p"},"complete")," event handler is called, it\nremoves its own event listener using the ",(0,i.kt)("inlineCode",{parentName:"p"},"removeEventListener()")," function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"var html = runtime.flash.html.HTMLLoader.createRootWindow(true);\nhtml.addEventListener('complete', htmlCompleteListener);\nfunction htmlCompleteListener()\n{\n    html.removeEventListener(complete, arguments.callee);\n    // handler code..\n}\nhtml.load(new runtime.flash.net.URLRequest(\"second.html\"));\n")),(0,i.kt)("p",null,"Removing unneeded event listeners also allows the system garbage collector to\nreclaim any memory associated with those listeners."),(0,i.kt)("h4",{id:"checking-for-existing-event-listeners"},"Checking for existing event listeners"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"hasEventListener()")," method lets you check for the existence of an event\nlistener on an object."))}h.isMDXComponent=!0}}]);