"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[38343],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,h=c["".concat(l,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(h,s(s({ref:t},d),{},{components:n})):a.createElement(h,s({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},46728:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:8},s="Updating Flash Player to support Adobe Access",i={unversionedId:"development/rich-media-content/using-digital-rights-management/updating-flash-player-to-support-adobe-access",id:"development/rich-media-content/using-digital-rights-management/updating-flash-player-to-support-adobe-access",title:"Updating Flash Player to support Adobe Access",description:"_Important_ : Flash Player 11.5 and above integrates the Adobe Access",source:"@site/docs/development/rich-media-content/using-digital-rights-management/updating-flash-player-to-support-adobe-access.md",sourceDirName:"development/rich-media-content/using-digital-rights-management",slug:"/development/rich-media-content/using-digital-rights-management/updating-flash-player-to-support-adobe-access",permalink:"/docs/development/rich-media-content/using-digital-rights-management/updating-flash-player-to-support-adobe-access",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/rich-media-content/using-digital-rights-management/updating-flash-player-to-support-adobe-access.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"mainSidebar",previous:{title:"Using the DRMContentData class",permalink:"/docs/development/rich-media-content/using-digital-rights-management/using-the-drmcontentdata-class"},next:{title:"Out-of-band Licenses",permalink:"/docs/development/rich-media-content/using-digital-rights-management/out-of-band-licenses"}},l={},p=[{value:"Listening for an update event",id:"listening-for-an-update-event",level:2}],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"updating-flash-player-to-support-adobe-access"},"Updating Flash Player to support Adobe Access"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Important"))," : Flash Player 11.5 and above integrates the Adobe Access\nmodule, so the update step (calling\n",(0,r.kt)("inlineCode",{parentName:"p"},"SystemUpdater.update(SystemUpdaterType.DRM)"),") is unnecessary. This includes the\nfollowing browsers and platforms:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Flash Player 11.5 ActiveX control, for all platforms except Internet Explorer\non Windows 8")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Flash Player 11.5 plugin, for all browsers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Adobe AIR (desktop and mobile)"))),(0,r.kt)("p",null,"This means that the update step is ",(0,r.kt)("em",{parentName:"p"},"still required")," in the following cases:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Internet Explorer on Windows 8")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Flash Player 11.4 and below, except on Google Chrome 22 and above (all\nplatforms) or 21 and above (Windows)"))),(0,r.kt)("p",null,"Note: You can still safely call ",(0,r.kt)("inlineCode",{parentName:"p"},"SystemUpdater.update(SystemUpdaterType.DRM)")," on\na system with Flash Player 11.5 or higher, but nothing is downloaded."),(0,r.kt)("p",null,"To support Adobe Access, Flash Player requires the Adobe Access module. When\nFlash Player tries to play protected content, the runtime indicates if the\nmodule or a new version of Flash Player must be downloaded. In this way, Flash\nPlayer allows SWF developers the option of not updating if desired."),(0,r.kt)("p",null,"In most cases, to play protected content, SWF developers update to the required\nAdobe Access module or player. To update, you can use the SystemUpdater API to\nget the latest version of the Adobe Access module or of Flash Player."),(0,r.kt)("p",null,"The SystemUpdater API permits only one update at a time. The error code 2202\nindicates that an update is already occurring in the current runtime instance or\nanother instance. For example, if an update is occurring in a Flash Player\ninstance in Internet Explorer, an update cannot proceed in a Flash Player\ninstance running in Firefox."),(0,r.kt)("p",null,"The SystemUpdater API is supported for desktop platforms only."),(0,r.kt)("p",null,"Note: For versions of Flash Player earlier than 10.1, use the update mechanism\nsupported in earlier player versions (manual download and install from\n",(0,r.kt)("a",{parentName:"p",href:"http://www.adobe.com"},"www.adobe.com")," or ExpressInstall). Also, the AIR installer handles necessary\nupdates for Adobe Access and does not support the SystemUpdater API."),(0,r.kt)("h2",{id:"listening-for-an-update-event"},"Listening for an update event"),(0,r.kt)("p",null,"When an update of the Adobe Access module is required, the NetStream object\ndispatches a NetStatusEvent with a code value of ",(0,r.kt)("inlineCode",{parentName:"p"},"DRM.UpdateNeeded"),". This value\nindicates that the NetStream object cannot play back the protected stream with\nany of the currently installed Adobe Access modules. Listen for this event and\ncall the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"SystemUpdater.update(flash.system.SystemUpdaterType.DRM)\n")),(0,r.kt)("p",null,"This code updates the Adobe Access module installed in the player. User consent\nfor this module update is not required."),(0,r.kt)("p",null,"If the Adobe Access module is not found, an error is thrown. See step 3 of the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/development/rich-media-content/using-digital-rights-management/understanding-the-protected-content-workflow#detailed-api-workflow"},"Detailed API workflow"),"."),(0,r.kt)("p",null,"Note: If play() is called on an encrypted stream in players earlier than 10.1, a\nNetStatusEvent with code value of NetStream.Play.StreamNotFound is dispatched.\nFor earlier players, use the update mechanism supported for those players\n(manual download and install from ",(0,r.kt)("a",{parentName:"p",href:"http://www.adobe.com"},"www.adobe.com")," or ExpressInstall)."),(0,r.kt)("p",null,"When an update of the player itself is required, the SystemUpdater object\ndispatches a StatusEvent with a code value of ",(0,r.kt)("inlineCode",{parentName:"p"},"DRM.UpdateNeededButIncompatible"),"\nis dispatched. For an update of the player, user consent is required. In your\napplication, provide an interface for the user to agree to and initiate the\nupdate of the player. Listen for the StatusEvent event and call the following\ncode:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"SystemUpdater.update(flash.system.SystemUpdaterType.SYSTEM);\n")),(0,r.kt)("p",null,"This code initiates the update of the player."),(0,r.kt)("p",null,"Additional\n",(0,r.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/system/SystemUpdater.html#eventSummary"},"events for the SystemUpdater class"),"\nare documented in the\n",(0,r.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/index.html"},"ActionScript 3.0 Reference for the Adobe Flash Platform"),"."),(0,r.kt)("p",null,"After the player update completes, the user is redirected to the page where the\nupdate began. The Adobe Access module is downloaded, and the stream can begin\nplaying."))}u.isMDXComponent=!0}}]);