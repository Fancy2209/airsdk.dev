"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[19397],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>u});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},l=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=o,u=p["".concat(d,".").concat(m)]||p[m]||h[m]||i;return t?a.createElement(u,r(r({ref:n},l),{},{components:t})):a.createElement(u,r({ref:n},l))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=m;var c={};for(var d in n)hasOwnProperty.call(n,d)&&(c[d]=n[d]);c.originalType=e,c[p]="string"==typeof e?e:o,r[1]=c;for(var s=2;s<i;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},82885:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var a=t(87462),o=(t(67294),t(3905));const i={},r="Cross-scripting content in different security sandboxes",c={unversionedId:"development/html-content-in-air/programming-html-and-javascript-in-air/cross-scripting-content-in-different-security-sandboxes",id:"development/html-content-in-air/programming-html-and-javascript-in-air/cross-scripting-content-in-different-security-sandboxes",title:"Cross-scripting content in different security sandboxes",description:"The runtime security model isolates code from different origins. By",source:"@site/docs/development/html-content-in-air/programming-html-and-javascript-in-air/cross-scripting-content-in-different-security-sandboxes.md",sourceDirName:"development/html-content-in-air/programming-html-and-javascript-in-air",slug:"/development/html-content-in-air/programming-html-and-javascript-in-air/cross-scripting-content-in-different-security-sandboxes",permalink:"/docs/development/html-content-in-air/programming-html-and-javascript-in-air/cross-scripting-content-in-different-security-sandboxes",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/html-content-in-air/programming-html-and-javascript-in-air/cross-scripting-content-in-different-security-sandboxes.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Converting Date and RegExp objects",permalink:"/docs/development/html-content-in-air/programming-html-and-javascript-in-air/converting-date-and-regexp-objects"},next:{title:"Embedding SWF content in HTML",permalink:"/docs/development/html-content-in-air/programming-html-and-javascript-in-air/embedding-swf-content-in-html"}},d={},s=[{value:"AIR security sandboxes and JavaScript code",id:"air-security-sandboxes-and-javascript-code",level:2},{value:"Loading application content into a non-application sandbox",id:"loading-application-content-into-a-non-application-sandbox",level:2},{value:"Setting up a sandbox bridge interface",id:"setting-up-a-sandbox-bridge-interface",level:2},{value:"Establishing a child sandbox bridge",id:"establishing-a-child-sandbox-bridge",level:2},{value:"Establishing a parent sandbox bridge",id:"establishing-a-parent-sandbox-bridge",level:2},{value:"Accessing a parent sandbox bridge during page loading",id:"accessing-a-parent-sandbox-bridge-during-page-loading",level:2}],l={toc:s},p="wrapper";function h(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cross-scripting-content-in-different-security-sandboxes"},"Cross-scripting content in different security sandboxes"),(0,o.kt)("p",null,"The runtime security model isolates code from different origins. By\ncross-scripting content in different security sandboxes, you can allow content\nin one security sandbox to access selected properties and methods in another\nsandbox."),(0,o.kt)("h2",{id:"air-security-sandboxes-and-javascript-code"},"AIR security sandboxes and JavaScript code"),(0,o.kt)("p",null,"AIR enforces a same-origin policy that prevents code in one domain from\ninteracting with content in another. All files are placed in a sandbox based on\ntheir origin. Ordinarily, content in the application sandbox cannot violate the\nsame-origin principle and cross-script content loaded from outside the\napplication install directory. However, AIR provides a few techniques that let\nyou cross-script non-application content."),(0,o.kt)("p",null,"One technique uses frames or iframes to map application content into a different\nsecurity sandbox. Any pages loaded from the sandboxed area of the application\nbehave as if they were loaded from the remote domain. For example, by mapping\napplication content to the ",(0,o.kt)("em",{parentName:"p"},"example.com")," domain, that content could cross-script\npages loaded from example.com."),(0,o.kt)("p",null,"Since this technique places the application content into a different sandbox,\ncode within that content is also no longer subject to the restrictions on the\nexecution of code in evaluated strings. You can use this sandbox mapping\ntechnique to ease these restrictions even when you don't need to cross-script\nremote content. Mapping content in this way can be especially useful when\nworking with one of the many JavaScript frameworks or with existing code that\nrelies on evaluating strings. However, you should consider and guard against the\nadditional risk that untrusted content could be injected and executed when\ncontent is run outside the application sandbox."),(0,o.kt)("p",null,"At the same time, application content mapped to another sandbox loses its access\nto the AIR APIs, so the sandbox mapping technique cannot be used to expose AIR\nfunctionality to code executed outside the application sandbox."),(0,o.kt)("p",null,"Another cross-scripting technique lets you create an interface called a ",(0,o.kt)("em",{parentName:"p"},"sandbox\nbridge")," between content in a non-application sandbox and its parent document in\nthe application sandbox. The bridge allows the child content to access\nproperties and methods defined by the parent, the parent to access properties\nand methods defined by the child, or both."),(0,o.kt)("p",null,"Finally, you can also perform cross-domain XMLHttpRequests from the application\nsandbox and, optionally, from other sandboxes."),(0,o.kt)("p",null,"For more information, see\n",(0,o.kt)("a",{parentName:"p",href:"/docs/development/html-content-in-air/about-the-html-environment/html-in-air#html-frame-and-iframe-elements"},"HTML frame and iframe elements"),",\n",(0,o.kt)("a",{parentName:"p",href:"/docs/development/security/air-security/html-security-in-adobe-air"},"HTML security in Adobe AIR"),",\nand\n",(0,o.kt)("a",{parentName:"p",href:"/docs/development/html-content-in-air/about-the-html-environment/javascript-in-air#the-xmlhttprequest-object"},"The XMLHttpRequest object"),"."),(0,o.kt)("h2",{id:"loading-application-content-into-a-non-application-sandbox"},"Loading application content into a non-application sandbox"),(0,o.kt)("p",null,"To allow application content to safely cross-script content loaded from outside\nthe application install directory, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"frame")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"iframe")," elements to\nload application content into the same security sandbox as the external content.\nIf you do not need to cross-script remote content, but still wish to load a page\nof your application outside the application sandbox, you can use the same\ntechnique, specifying ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost/")," or some other innocuous value, as the\ndomain of origin."),(0,o.kt)("p",null,"AIR adds the new attributes, ",(0,o.kt)("inlineCode",{parentName:"p"},"sandboxRoot")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"documentRoot"),", to the frame\nelement that allow you to specify whether an application file loaded into the\nframe should be mapped to a non-application sandbox. Files resolving to a path\nunderneath the ",(0,o.kt)("inlineCode",{parentName:"p"},"sandboxRoot")," URL are loaded instead from the ",(0,o.kt)("inlineCode",{parentName:"p"},"documentRoot"),"\ndirectory. For security purposes, the application content loaded in this way is\ntreated as if it was actually loaded from the ",(0,o.kt)("inlineCode",{parentName:"p"},"sandboxRoot")," URL."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"sandboxRoot")," property specifies the URL to use for determining the sandbox\nand domain in which to place the frame content. The ",(0,o.kt)("inlineCode",{parentName:"p"},"file:"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"http:"),", or\n",(0,o.kt)("inlineCode",{parentName:"p"},"https:")," URL schemes must be used. If you specify a relative URL, the content\nremains in the application sandbox."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"documentRoot")," property specifies the directory from which to load the frame\ncontent. The ",(0,o.kt)("inlineCode",{parentName:"p"},"file:"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"app:"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"app-storage:")," URL schemes must be used."),(0,o.kt)("p",null,"The following example maps content installed in the ",(0,o.kt)("inlineCode",{parentName:"p"},"sandbox")," subdirectory of\nthe application to run in the remote sandbox and the ",(0,o.kt)("inlineCode",{parentName:"p"},"www.example.com")," domain:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'<iframe\n    src="http://www.example.com/local/ui.html"\n    sandboxRoot="http://www.example.com/local/"\n    documentRoot="app:/sandbox/">\n</iframe>\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"ui.html")," page could load a javascript file from the local, ",(0,o.kt)("inlineCode",{parentName:"p"},"sandbox")," folder\nusing the following script tag:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'<script src="http://www.example.com/local/ui.js"><\/script>\n')),(0,o.kt)("p",null,"It could also load content from a directory on the remote server using a script\ntag such as the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'<script src="http://www.example.com/remote/remote.js"><\/script>\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"sandboxRoot")," URL will mask any content at the same URL on the remote\nserver. In the above example, you would not be able to access any remote content\nat ",(0,o.kt)("inlineCode",{parentName:"p"},"www.example.com/local/")," (or any of its subdirectories) because AIR remaps\nthe request to the local application directory. Requests are remapped whether\nthey derive from page navigation, from an XMLHttpRequest, or from any other\nmeans of loading content."),(0,o.kt)("h2",{id:"setting-up-a-sandbox-bridge-interface"},"Setting up a sandbox bridge interface"),(0,o.kt)("p",null,"You can use a sandbox bridge when content in the application sandbox must access\nproperties or methods defined by content in a non-application sandbox, or when\nnon-application content must access properties and methods defined by content in\nthe application sandbox. Create a bridge with the ",(0,o.kt)("inlineCode",{parentName:"p"},"childSandboxBridge")," and\n",(0,o.kt)("inlineCode",{parentName:"p"},"parentSandboxBridge")," properties of the ",(0,o.kt)("inlineCode",{parentName:"p"},"window")," object of any child document."),(0,o.kt)("h2",{id:"establishing-a-child-sandbox-bridge"},"Establishing a child sandbox bridge"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"childSandboxBridge")," property allows the child document to expose an\ninterface to content in the parent document. To expose an interface, you set the\n",(0,o.kt)("inlineCode",{parentName:"p"},"childSandbox")," property to a function or object in the child document. You can\nthen access the object or function from content in the parent document. The\nfollowing example shows how a script running in a child document can expose an\nobject containing a function and a property to its parent:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'var interface = {};\ninterface.calculatePrice = function(){\n    return ".45 cents";\n}\ninterface.storeID = "abc"\nwindow.childSandboxBridge = interface;\n')),(0,o.kt)("p",null,'If this child content was loaded into an iframe assigned an id of "child", you\ncould access the interface from parent content by reading the\n',(0,o.kt)("inlineCode",{parentName:"p"},"childSandboxBridge")," property of the frame:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'var childInterface = document.getElementById("child").contentWindow.childSandboxBridge;\nair.trace(childInterface.calculatePrice()); //traces ".45 cents"\nair.trace(childInterface.storeID)); //traces "abc"\n')),(0,o.kt)("h2",{id:"establishing-a-parent-sandbox-bridge"},"Establishing a parent sandbox bridge"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"parentSandboxBridge")," property allows the parent document to expose an\ninterface to content in a child document. To expose an interface, the parent\ndocument sets the ",(0,o.kt)("inlineCode",{parentName:"p"},"parentSandbox")," property of the child document to a function\nor object defined in the parent document. You can then access the object or\nfunction from content in the child. The following example shows how a script\nrunning in a parent frame can expose an object containing a function to a child\ndocument:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'var interface = {};\ninterface.save = function(text){\n    var saveFile = air.File("app-storage:/save.txt");\n    //write text to file\n}\ndocument.getElementById("child").contentWindow.parentSandboxBridge = interface;\n')),(0,o.kt)("p",null,"Using this interface, content in the child frame could save text to a file named\n",(0,o.kt)("inlineCode",{parentName:"p"},"save.txt"),", but would not have any other access to the file system. The child\ncontent could call the save function as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'var textToSave = "A string.";\nwindow.parentSandboxBridge.save(textToSave);\n')),(0,o.kt)("p",null,"Application content should expose the narrowest interface possible to other\nsandboxes. Non-application content should be considered inherently untrustworthy\nsince it may be subject to accidental or malicious code injection. You must put\nappropriate safeguards in place to prevent misuse of the interface you expose\nthrough the parent sandbox bridge."),(0,o.kt)("h2",{id:"accessing-a-parent-sandbox-bridge-during-page-loading"},"Accessing a parent sandbox bridge during page loading"),(0,o.kt)("p",null,"In order for a script in a child document to access a parent sandbox bridge, the\nbridge must be set up before the script is run. Window, frame and iframe objects\ndispatch a ",(0,o.kt)("inlineCode",{parentName:"p"},"dominitialize")," event when a new page DOM has been created, but\nbefore any scripts have been parsed, or DOM elements added. You can use the\n",(0,o.kt)("inlineCode",{parentName:"p"},"dominitialize")," event to establish the bridge early enough in the page\nconstruction sequence that all scripts in the child document can access it."),(0,o.kt)("p",null,"The following example illustrates how to create a parent sandbox bridge in\nresponse to the ",(0,o.kt)("inlineCode",{parentName:"p"},"dominitialize")," event dispatched from the child frame:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'<html>\n<head>\n    <script>\n        var bridgeInterface = {};\n        bridgeInterface.testProperty = "Bridge engaged";\n        function engageBridge(){\n            document.getElementById("sandbox").contentWindow.parentSandboxBridge = bridgeInterface;\n        }\n    <\/script>\n</head>\n<body>\n    <iframe id="sandbox"\n            src="http://www.example.com/air/child.html"\n            documentRoot="app:/"\n            sandboxRoot="http://www.example.com/air/"\n            ondominitialize="engageBridge()"/>\n</body>\n</html>\n')),(0,o.kt)("p",null,"The following ",(0,o.kt)("inlineCode",{parentName:"p"},"child.html")," document illustrates how child content can access the\nparent sandbox bridge:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"<html>\n<head>\n    <script>\n        document.write(window.parentSandboxBridge.testProperty);\n    <\/script>\n</head>\n<body></body>\n</html>\n")),(0,o.kt)("p",null,"To listen for the ",(0,o.kt)("inlineCode",{parentName:"p"},"dominitialize")," event on a child window, rather than a frame,\nyou must add the listener to the new child window object created by the\n",(0,o.kt)("inlineCode",{parentName:"p"},"window.open()")," function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'var childWindow = window.open();\nchildWindow.addEventListener("dominitialize", engageBridge());\nchildWindow.document.location = "http://www.example.com/air/child.html";\n')),(0,o.kt)("p",null,"In this case, there is no way to map application content into a non-application\nsandbox. This technique is only useful when ",(0,o.kt)("inlineCode",{parentName:"p"},"child.html")," is loaded from outside\nthe application directory. You can still map application content in the window\nto a non-application sandbox, but you must first load an intermediate page that\nitself uses frames to load the child document and map it to the desired sandbox."),(0,o.kt)("p",null,"If you use the HTMLLoader class ",(0,o.kt)("inlineCode",{parentName:"p"},"createRootWindow()")," function to create a\nwindow, the new window is not a child of the document from which\n",(0,o.kt)("inlineCode",{parentName:"p"},"createRootWindow()")," is called. Thus, you cannot create a sandbox bridge from\nthe calling window to non-application content loaded into the new window.\nInstead, you must use load an intermediate page in the new window that itself\nuses frames to load the child document. You can then establish the bridge from\nthe parent document of the new window to the child document loaded into the\nframe."))}h.isMDXComponent=!0}}]);