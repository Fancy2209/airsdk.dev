"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[45042],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var d=n.createContext({}),l=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=l(e.components);return n.createElement(d.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(a),h=o,u=p["".concat(d,".").concat(h)]||p[h]||m[h]||i;return a?n.createElement(u,r(r({ref:t},c),{},{components:a})):n.createElement(u,r({ref:t},c))}));function u(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=h;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[p]="string"==typeof e?e:o,r[1]=s;for(var l=2;l<i;l++)r[l]=a[l];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},17446:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=a(87462),o=(a(67294),a(3905));const i={sidebar_position:9},r="Accessing loaded media as data",s={unversionedId:"development/security/accessing-loaded-media-as-data",id:"development/security/accessing-loaded-media-as-data",title:"Accessing loaded media as data",description:"To access load data use the BitmapData.draw(), BitmapData.drawWithQuality(),",source:"@site/docs/development/security/accessing-loaded-media-as-data.md",sourceDirName:"development/security",slug:"/development/security/accessing-loaded-media-as-data",permalink:"/docs/development/security/accessing-loaded-media-as-data",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/security/accessing-loaded-media-as-data.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"mainSidebar",previous:{title:"Cross-scripting",permalink:"/docs/development/security/cross-scripting"},next:{title:"Loading data",permalink:"/docs/development/security/loading-data"}},d={},l=[{value:"Accessing bitmap data",id:"accessing-bitmap-data",level:2},{value:"Accessing sound data",id:"accessing-sound-data",level:2},{value:"Accessing video data",id:"accessing-video-data",level:2}],c={toc:l},p="wrapper";function m(e){let{components:t,...a}=e;return(0,o.kt)(p,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"accessing-loaded-media-as-data"},"Accessing loaded media as data"),(0,o.kt)("p",null,"To access load data use the ",(0,o.kt)("inlineCode",{parentName:"p"},"BitmapData.draw()"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"BitmapData.drawWithQuality()"),",\nand ",(0,o.kt)("inlineCode",{parentName:"p"},"SoundMixer.computeSpectrum()")," methods. By default, you cannot obtain pixel\ndata or audio data from graphic or audio objects rendered or played by media\nloaded in a different sandbox. However, you can use the following methods to\ngrant permission to access such data across sandbox boundaries:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In the content rendering or playing the data to be accessed, call the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method to grant data access to content in other\ndomains.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"For a loaded image, sound, or video, add a URL policy file on the server of\nthe loaded file. This policy file must grant access to the domain of the SWF\nfile that is attempting to call the ",(0,o.kt)("inlineCode",{parentName:"p"},"BitmapData.draw()"),",\n",(0,o.kt)("inlineCode",{parentName:"p"},"BitmapData.drawWithQuality()"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"SoundMixer.computeSpectrum()")," methods to\nextract data from the file. The ",(0,o.kt)("inlineCode",{parentName:"p"},"drawWithQuality")," method is available in Flash\nPlayer 11.3 and higher; AIR 3.3 and higher."))),(0,o.kt)("p",null,"The following sections provide details on accessing bitmap, sound, and video\ndata."),(0,o.kt)("h2",{id:"accessing-bitmap-data"},"Accessing bitmap data"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"draw()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"drawWithQuality()")," (Flash Player 11.3; AIR 3.3) methods of a\nBitmapData object lets you draw the currently displayed pixels of any display\nobject to the BitmapData object. This could include the pixels of a MovieClip\nobject, a Bitmap object, or any display object. The following conditions must be\nmet for these methods to draw pixels to the BitmapData object:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In the case of a source object other than a loaded bitmap, the source object\nand (in the case of a Sprite or MovieClip object) all of its child objects\nmust come from the same domain as the object calling the draw method, or they\nmust be in a SWF file that is accessible to the caller by having called the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In the case of a Loaded bitmap source object, the source object must come from\nthe same domain as the object calling the draw method, or its source server\nmust include a URL policy file that grants permission to the calling domain."))),(0,o.kt)("p",null,"If these conditions are not met, a SecurityError exception is thrown."),(0,o.kt)("p",null,"When you load the image using the ",(0,o.kt)("inlineCode",{parentName:"p"},"load()")," method of the Loader class, you can\nspecify a ",(0,o.kt)("inlineCode",{parentName:"p"},"context")," parameter, which is a LoaderContext object. If you set the\n",(0,o.kt)("inlineCode",{parentName:"p"},"checkPolicyFile")," property of the LoaderContext object to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", Flash Player\nchecks for a URL policy file on the server from which the image is loaded. If\nthere is a policy file, and the file permits the domain of the loading SWF file,\nthe file is allowed to access data in the Bitmap object; otherwise, access is\ndenied."),(0,o.kt)("p",null,"You can also specify a ",(0,o.kt)("inlineCode",{parentName:"p"},"checkPolicyFile")," property in an image loaded via an\n",(0,o.kt)("inlineCode",{parentName:"p"},"<img>")," tag in a text field. For details, see\n",(0,o.kt)("a",{parentName:"p",href:"/docs/development/security/loading-content#loading-swf-files-and-images-using-the-img-tag-in-a-text-field"},"Loading SWF files and images using the \\<img",">"," tag in a text field"),"."),(0,o.kt)("h2",{id:"accessing-sound-data"},"Accessing sound data"),(0,o.kt)("p",null,"The following sound-related ActionScript 3.0 APIs have security restrictions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"SoundMixer.computeSpectrum()")," method\u2014Always permitted for code running in\nthe same security sandbox as the sound file. For code running in other\nsandboxes, there are security checks.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"SoundMixer.stopAll()")," method\u2014Always permitted for code running in the\nsame security sandbox as the sound file. For files in other sandboxes, there\nare security checks.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"id3")," property of the Sound class\u2014Always permitted for SWF files that are\nin the same security sandbox as the sound file. For code running in other\nsandboxes, there are security checks."))),(0,o.kt)("p",null,"Every sound has two kinds of sandboxes associated with it\u2014a content sandbox and\nan owner sandbox:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The origin domain for the sound determines the content sandbox, and this\ndetermines whether data can be extracted from the sound via the ",(0,o.kt)("inlineCode",{parentName:"p"},"id3")," property\nof the sound and the ",(0,o.kt)("inlineCode",{parentName:"p"},"SoundMixer.computeSpectrum()")," method.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The object that started the sound playing determines the owner sandbox, and\nthis determines whether the sound can be stopped using the\n",(0,o.kt)("inlineCode",{parentName:"p"},"SoundMixer.stopAll()")," method."))),(0,o.kt)("p",null,"When you load the sound using the ",(0,o.kt)("inlineCode",{parentName:"p"},"load()")," method of the Sound class, you can\nspecify a ",(0,o.kt)("inlineCode",{parentName:"p"},"context")," parameter, which is a SoundLoaderContext object. If you set\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"checkPolicyFile")," property of the SoundLoaderContext object to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", the\nruntime checks for a URL policy file on the server from which the sound is\nloaded. If there is a policy file, and the file permits the domain of the\nloading code, the code is allowed to access the ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," property of the Sound\nobject; otherwise, it will not. Also, setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"checkPolicyFile")," property can\nenable the ",(0,o.kt)("inlineCode",{parentName:"p"},"SoundMixer.computeSpectrum()")," method for loaded sounds."),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"SoundMixer.areSoundsInaccessible()")," method to find out whether\na call to the ",(0,o.kt)("inlineCode",{parentName:"p"},"SoundMixer.stopAll()")," method would not stop all sounds because\nthe sandbox of one or more sound owners is inaccessible to the caller."),(0,o.kt)("p",null,"Calling the ",(0,o.kt)("inlineCode",{parentName:"p"},"SoundMixer.stopAll()")," method stops those sounds whose owner sandbox\nis the same as that of the caller of ",(0,o.kt)("inlineCode",{parentName:"p"},"stopAll()"),". It also stops those sounds\nwhose playback was started by SWF files that have called the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method to permit access by the domain of the SWF file\ncalling the ",(0,o.kt)("inlineCode",{parentName:"p"},"stopAll()")," method. Any other sounds are not stopped, and the\npresence of such sounds can be revealed by calling the\n",(0,o.kt)("inlineCode",{parentName:"p"},"SoundMixer.areSoundsInaccessible()")," method."),(0,o.kt)("p",null,"Calling the ",(0,o.kt)("inlineCode",{parentName:"p"},"computeSpectrum()")," method requires that every sound that is playing\nbe either from the same sandbox as the object calling the method or from a\nsource that has granted permission to the caller's sandbox; otherwise, a\nSecurityError exception is thrown. For sounds that were loaded from embedded\nsounds in a library in a SWF file, permission is granted with a call to the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method in the loaded SWF file. For sounds loaded from\nsources other than SWF files (originating from loaded mp3 files or from video\nfiles), a URL policy file on the source server grants access to data in loaded\nmedia."),(0,o.kt)("p",null,"For more information, see\n",(0,o.kt)("a",{parentName:"p",href:"/docs/development/security/permission-controls#author-developer-controls"},"Author (developer) controls"),"\nand\n",(0,o.kt)("a",{parentName:"p",href:"/docs/development/security/permission-controls#website-controls-policy-files"},"Website controls (policy files)"),"."),(0,o.kt)("p",null,"To access sound data from RTMP streams, you must allow access on the server. Use\nthe Server-Side ActionScript ",(0,o.kt)("inlineCode",{parentName:"p"},"Client.audioSampleAccess")," property to allow access\nto specific directories on Flash Media Server. For more information, see the\n",(0,o.kt)("a",{parentName:"p",href:"https://web.archive.org/web/20150702070954/http://www.adobe.com/support/documentation/en/flashmediaserver/"},"Server-Side ActionScript Language Reference"),"."),(0,o.kt)("h2",{id:"accessing-video-data"},"Accessing video data"),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"BitmapData.draw()")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"BitmapData.drawWithQuality()")," method to\ncapture the pixel data of the current frame of a video. (The ",(0,o.kt)("inlineCode",{parentName:"p"},"drawWithQuality"),"\nmethod is available in Flash Player 11.3 and higher; AIR 3.3 and higher.)"),(0,o.kt)("p",null,"There are two different kinds of video:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Video streamed over RTMP from Flash Media Server")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Progressive video, which is loaded from an FLV or F4V file"))),(0,o.kt)("p",null,"To use the draw methods to extract run-time graphics from RTMP streams, you must\nallow access on the server. Use the Server-Side ActionScript\n",(0,o.kt)("inlineCode",{parentName:"p"},"Client.videoSampleAccess")," property to allow access to specific directories on\nFlash Media Server. For more information, see the\n",(0,o.kt)("a",{parentName:"p",href:"https://web.archive.org/web/20150702070954/http://www.adobe.com/support/documentation/en/flashmediaserver/"},"Server-Side ActionScript Language Reference"),"."),(0,o.kt)("p",null,"When you call a draw method with progressive video as the ",(0,o.kt)("inlineCode",{parentName:"p"},"source")," parameter,\nthe caller of the method must either be from the same sandbox as the FLV file,\nor the server of the FLV file must have a policy file that grants permission to\nthe domain of the calling SWF file. You can request that the policy file be\ndownloaded by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"checkPolicyFile")," property of the NetStream object to\n",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."))}m.isMDXComponent=!0}}]);