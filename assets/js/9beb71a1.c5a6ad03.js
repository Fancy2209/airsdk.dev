"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[29195],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>u});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=l(n),h=a,u=m["".concat(p,".").concat(h)]||m[h]||d[h]||o;return n?r.createElement(u,i(i({ref:t},s),{},{components:n})):r.createElement(u,i({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[m]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},79749:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={},i="Accessing HTML DOM and JavaScript objects from ActionScript",c={unversionedId:"development/html-content-in-air/programming-html-and-javascript-in-air/accessing-html-dom-and-javascript-objects-from-actionscript",id:"development/html-content-in-air/programming-html-and-javascript-in-air/accessing-html-dom-and-javascript-objects-from-actionscript",title:"Accessing HTML DOM and JavaScript objects from ActionScript",description:"Once the HTMLLoader object dispatches the complete event, you can access all",source:"@site/docs/development/html-content-in-air/programming-html-and-javascript-in-air/accessing-html-dom-and-javascript-objects-from-actionscript.md",sourceDirName:"development/html-content-in-air/programming-html-and-javascript-in-air",slug:"/development/html-content-in-air/programming-html-and-javascript-in-air/accessing-html-dom-and-javascript-objects-from-actionscript",permalink:"/docs/development/html-content-in-air/programming-html-and-javascript-in-air/accessing-html-dom-and-javascript-objects-from-actionscript",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/html-content-in-air/programming-html-and-javascript-in-air/accessing-html-dom-and-javascript-objects-from-actionscript.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Accessing AIR API classes from JavaScript",permalink:"/docs/development/html-content-in-air/programming-html-and-javascript-in-air/accessing-air-api-classes-from-javascript"},next:{title:"Avoiding security-related JavaScript errors",permalink:"/docs/development/html-content-in-air/programming-html-and-javascript-in-air/avoiding-security-related-javascript-errors"}},p={},l=[],s={toc:l},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"accessing-html-dom-and-javascript-objects-from-actionscript"},"Accessing HTML DOM and JavaScript objects from ActionScript"),(0,a.kt)("p",null,"Once the HTMLLoader object dispatches the ",(0,a.kt)("inlineCode",{parentName:"p"},"complete")," event, you can access all\nthe objects in the HTML DOM (document object model) for the page. Accessible\nobjects include display elements (such as ",(0,a.kt)("inlineCode",{parentName:"p"},"div")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"p")," objects in the page) as\nwell as JavaScript variables and functions. The ",(0,a.kt)("inlineCode",{parentName:"p"},"complete")," event corresponds to\nthe JavaScript page ",(0,a.kt)("inlineCode",{parentName:"p"},"load")," event. Before ",(0,a.kt)("inlineCode",{parentName:"p"},"complete")," is dispatched, DOM elements,\nvariables, and functions may not have been parsed or created. If possible, wait\nfor the ",(0,a.kt)("inlineCode",{parentName:"p"},"complete")," event before accessing the HTML DOM."),(0,a.kt)("p",null,"For example, consider the following HTML page:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'<html>\n    <script>\n        foo = 333;\n        function test() {\n            return "OK.";\n        }\n    <\/script>\n    <body>\n        <p id="p1">Hi.</p>\n    </body>\n</html>\n')),(0,a.kt)("p",null,"This simple HTML page defines a JavaScript variable named ",(0,a.kt)("em",{parentName:"p"},"foo")," and a JavaScript\nfunction named ",(0,a.kt)("em",{parentName:"p"},"test()"),". Both of these are properties of the global ",(0,a.kt)("inlineCode",{parentName:"p"},"window"),"\nobject of the page. Also, the ",(0,a.kt)("inlineCode",{parentName:"p"},"window.document")," object includes a named P\nelement (with the ID ",(0,a.kt)("em",{parentName:"p"},"p1")," ), which you can access using the ",(0,a.kt)("inlineCode",{parentName:"p"},"getElementById()"),"\nmethod. Once the page is loaded (when the HTMLLoader object dispatches the\n",(0,a.kt)("inlineCode",{parentName:"p"},"complete")," event), you can access each of these objects from ActionScript, as\nshown in the following ActionScript code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var html:HTMLLoader = new HTMLLoader();\nhtml.width = 300;\nhtml.height = 300;\nhtml.addEventListener(Event.COMPLETE, completeHandler);\nvar xhtml:XML =\n    <html>\n        <script>\n            foo = 333;\n            function test() {\n                return "OK.";\n            }\n        <\/script>\n        <body>\n            <p id="p1">Hi.</p>\n        </body>\n    </html>;\nhtml.loadString(xhtml.toString());\n\nfunction completeHandler(e:Event):void {\n    trace(html.window.foo); // 333\n    trace(html.window.document.getElementById("p1").innerHTML); // Hi.\n    trace(html.window.test()); // OK.\n}\n')),(0,a.kt)("p",null,"To access the content of an HTML element, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"innerHTML")," property. For\nexample, the previous code uses\n",(0,a.kt)("inlineCode",{parentName:"p"},'html.window.document.getElementById("p1").innerHTML')," to get the contents of the\nHTML element named ",(0,a.kt)("em",{parentName:"p"},"p1"),"."),(0,a.kt)("p",null,"You can also set properties of the HTML page from ActionScript. For example, the\nfollowing example sets the contents of the ",(0,a.kt)("inlineCode",{parentName:"p"},"p1")," element and the value of the\n",(0,a.kt)("inlineCode",{parentName:"p"},"foo")," JavaScript variable on the page using a reference to the containing\nHTMLLoader object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'html.window.document.getElementById("p1").innerHTML = "Goodbye";\nhtml.window.foo = 66;\n')))}d.isMDXComponent=!0}}]);