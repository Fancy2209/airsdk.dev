"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[66883],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>u});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=t.createContext({}),d=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=d(e.components);return t.createElement(p.Provider,{value:n},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},h=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=d(a),h=r,u=l["".concat(p,".").concat(h)]||l[h]||m[h]||o;return a?t.createElement(u,i(i({ref:n},c),{},{components:a})):t.createElement(u,i({ref:n},c))}));function u(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=h;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[l]="string"==typeof e?e:r,i[1]=s;for(var d=2;d<o;d++)i[d]=a[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}h.displayName="MDXCreateElement"},46799:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var t=a(87462),r=(a(67294),a(3905));const o={},i="Drawing Paths",s={unversionedId:"development/display/using-the-drawing-api/drawing-paths",id:"development/display/using-the-drawing-api/drawing-paths",title:"Drawing Paths",description:"The section on drawing lines and curves (see",source:"@site/docs/development/display/using-the-drawing-api/drawing-paths.md",sourceDirName:"development/display/using-the-drawing-api",slug:"/development/display/using-the-drawing-api/drawing-paths",permalink:"/docs/development/display/using-the-drawing-api/drawing-paths",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/display/using-the-drawing-api/drawing-paths.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Drawing API example: Algorithmic Visual Generator",permalink:"/docs/development/display/using-the-drawing-api/drawing-api-example-algorithmic-visual-generator"},next:{title:"Using graphics data classes",permalink:"/docs/development/display/using-the-drawing-api/using-graphics-data-classes"}},p={},d=[],c={toc:d},l="wrapper";function m(e){let{components:n,...a}=e;return(0,r.kt)(l,(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"drawing-paths"},"Drawing Paths"),(0,r.kt)("p",null,"The section on drawing lines and curves (see\n",(0,r.kt)("a",{parentName:"p",href:"/docs/development/display/using-the-drawing-api/drawing-lines-and-curves"},"Drawing lines and curves"),") introduced the\ncommands for drawing a single line (",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics.lineTo()"),") or curve\n(",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics.curveTo()"),") and then moving the line to another point\n(",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics.moveTo()"),") to form a shape. The ",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics.drawPath()")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics.drawTriangles()")," methods accept a set of objects representing those\nsame drawing commands as a parameter. With these methods, you can provide a\nseries of ",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics.lineTo()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics.curveTo()"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics.moveTo()"),"\ncommands for the Flash runtime to execute in a single statement."),(0,r.kt)("p",null,"The\n",(0,r.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/display/GraphicsPathCommand.html"},"GraphicsPathCommand"),"\nenumeration class defines a set of constants that correspond to drawing\ncommands. You pass a series of these constants (wrapped in a Vector instance) as\na parameter for the ",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics.drawPath()")," method. Then with a single command you\ncan render an entire shape, or several shapes. You can also alter the values\npassed to these methods to change an existing shape."),(0,r.kt)("p",null,"In addition to the Vector of drawing commands, the ",(0,r.kt)("inlineCode",{parentName:"p"},"drawPath()")," method needs a\nset of coordinates that correspond to the coordinates for each drawing command.\nCreate a Vector instance containing coordinates (Number instances) and pass it\nto the ",(0,r.kt)("inlineCode",{parentName:"p"},"drawPath()")," method as the second (",(0,r.kt)("inlineCode",{parentName:"p"},"data"),") argument."),(0,r.kt)("p",null,"Note: The values in the vector are not Point objects; the vector is a series of\nnumbers where each group of two numbers represents an x/y coordinate pair."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Graphics.drawPath()")," method matches each command with its respective point\nvalues (a collection of two or four numbers) to generate a path in the Graphics\nobject:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"package\n{\n    import flash.display.*;\n\n    public class DrawPathExample extends Sprite\n    {\n        public function DrawPathExample(){\n\n            var squareCommands:Vector.<int> = new Vector.<int>(5, true);\n            squareCommands[0] = GraphicsPathCommand.MOVE_TO;\n            squareCommands[1] = GraphicsPathCommand.LINE_TO;\n            squareCommands[2] = GraphicsPathCommand.LINE_TO;\n            squareCommands[3] = GraphicsPathCommand.LINE_TO;\n            squareCommands[4] = GraphicsPathCommand.LINE_TO;\n\n            var squareCoord:Vector.<Number> = new Vector.<Number>(10, true);\n            squareCoord[0] = 20; //x\n            squareCoord[1] = 10; //y\n            squareCoord[2] = 50;\n            squareCoord[3] = 10;\n            squareCoord[4] = 50;\n            squareCoord[5] = 40;\n            squareCoord[6] = 20;\n            squareCoord[7] = 40;\n            squareCoord[8] = 20;\n            squareCoord[9] = 10;\n\n            graphics.beginFill(0x442266);//set the color\n            graphics.drawPath(squareCommands, squareCoord);\n        }\n    }\n}\n")))}m.isMDXComponent=!0}}]);