"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[90862],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),h=r,u=c["".concat(s,".").concat(h)]||c[h]||m[h]||i;return n?a.createElement(u,o(o({ref:t},p),{},{components:n})):a.createElement(u,o({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},41193:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_position:8},o="Cross-scripting",l={unversionedId:"development/security/cross-scripting",id:"development/security/cross-scripting",title:"Cross-scripting",description:"If two SWF files written with ActionScript 3.0, or two HTML files running in AIR",source:"@site/docs/development/security/cross-scripting.md",sourceDirName:"development/security",slug:"/development/security/cross-scripting",permalink:"/docs/development/security/cross-scripting",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/security/cross-scripting.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"mainSidebar",previous:{title:"Loading content",permalink:"/docs/development/security/loading-content"},next:{title:"Accessing loaded media as data",permalink:"/docs/development/security/accessing-loaded-media-as-data"}},s={},d=[{value:"Stage security",id:"stage-security",level:2},{value:"Traversing the display list",id:"traversing-the-display-list",level:2},{value:"Event security",id:"event-security",level:2}],p={toc:d},c="wrapper";function m(e){let{components:t,...i}=e;return(0,r.kt)(c,(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cross-scripting"},"Cross-scripting"),(0,r.kt)("p",null,"If two SWF files written with ActionScript 3.0, or two HTML files running in AIR\nare served from the same domain\u2014for example, the URL for one SWF file is\n",(0,r.kt)("inlineCode",{parentName:"p"},"http://www.example.com/swfA.swf")," and the URL for the other is\n",(0,r.kt)("inlineCode",{parentName:"p"},"http://www.example.com/swfB.swf"),"  - then code defined in one file can examine and\nmodify variables, objects, properties, methods, and so on in the other, and vice\nversa. This is called ",(0,r.kt)("em",{parentName:"p"},"cross-scripting"),"."),(0,r.kt)("p",null,"If the two files are served from different domains\u2014for example,\n",(0,r.kt)("inlineCode",{parentName:"p"},"http://siteA.com/swfA.swf")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"http://siteB.com/swfB.swf")," - then, by default, Flash\nPlayer and AIR do not allow swfA.swf to script swfB.swf, nor swfB.swf to script\nswfA.swf. A SWF file gives permission to SWF files from other domains by calling\n",(0,r.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()"),". By calling ",(0,r.kt)("inlineCode",{parentName:"p"},'Security.allowDomain("siteA.com")'),",\nswfB.swf gives SWF files from siteA.com permission to script it."),(0,r.kt)("p",null,"Cross-scripting is not supported between AVM1 SWF files and AVM2 SWF files. An\nAVM1 SWF file is one created by using ActionScript 1.0 or ActionScript 2.0.\n(AVM1 and AVM2 refer to the ActionScript Virtual Machine.) You can, however, use\nthe LocalConnection class to send data between AVM1 and AVM2."),(0,r.kt)("p",null,"In any cross-domain situation, it is important to be clear about the two parties\ninvolved. For the purposes of this discussion, the side that is performing the\ncross-scripting is called the ",(0,r.kt)("em",{parentName:"p"},"accessing party")," (usually the accessing SWF), and\nthe other side is called the ",(0,r.kt)("em",{parentName:"p"},"party being accessed")," (usually the SWF being\naccessed). When siteA.swf scripts siteB.swf, siteA.swf is the accessing party,\nand siteB.swf is the party being accessed, as the following illustration shows:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(23716).Z,width:"498",height:"476"})),(0,r.kt)("p",null,"Cross-domain permissions that are established with the ",(0,r.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()"),"\nmethod are asymmetrical. In the previous example, siteA.swf can script\nsiteB.swf, but siteB.swf cannot script siteA.swf, because siteA.swf has not\ncalled the ",(0,r.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method to give SWF files at siteB.com\npermission to script it. You can set up symmetrical permissions by having both\nSWF files call the ",(0,r.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method."),(0,r.kt)("p",null,"In addition to protecting SWF files from cross-domain scripting originated by\nother SWF files, Flash Player protects SWF files from cross-domain scripting\noriginated by HTML files. HTML-to-SWF scripting can occur with callbacks\nestablished through the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalInterface.addCallback()")," method. When\nHTML-to-SWF scripting crosses domains, the SWF file being accessed must call the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method, just as when the accessing party is a SWF file,\nor the operation will fail. For more information, see\n",(0,r.kt)("a",{parentName:"p",href:"/docs/development/security/permission-controls#author-developer-controls"},"Author (developer) controls"),"."),(0,r.kt)("p",null,"Also, Flash Player provides security controls for SWF-to-HTML scripting. For\nmore information, see\n",(0,r.kt)("a",{parentName:"p",href:"/docs/development/security/controlling-outbound-url-access"},"Controlling outbound URL access"),"."),(0,r.kt)("h2",{id:"stage-security"},"Stage security"),(0,r.kt)("p",null,"Some properties and methods of the Stage object are available to any sprite or\nmovie clip on the display list."),(0,r.kt)("p",null,"However, the Stage object is said to have an owner: the first SWF file loaded.\nBy default, the following properties and methods of the Stage object are\navailable only to SWF files in the same security sandbox as the Stage owner:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Properties"),(0,r.kt)("td",{parentName:"tr",align:null},"Methods")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"align")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"addChild()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"displayState"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"addChildAt()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"frameRate"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"addEventListener()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"height")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dispatchEvent()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mouseChildren")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"hasEventListener()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"numChildren")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"setChildIndex()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"quality")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"willTrigger()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"scaleMode")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"showDefaultContextMenu")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"stageFocusRect")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"stageHeight")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"stageWidth")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tabChildren")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"textSnapshot")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"width")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,"In order for a SWF file in a sandbox other than that of the Stage owner to\naccess these properties and methods, the Stage owner SWF file must call the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method to permit the domain of the external sandbox.\nFor more information, see\n",(0,r.kt)("a",{parentName:"p",href:"/docs/development/security/permission-controls#author-developer-controls"},"Author (developer) controls"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"frameRate")," property is a special case\u2014any SWF file can read the ",(0,r.kt)("inlineCode",{parentName:"p"},"frameRate"),"\nproperty. However, only those in the Stage owner's security sandbox (or those\ngranted permission by a call to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method) can change\nthe property."),(0,r.kt)("p",null,"There are also restrictions on the ",(0,r.kt)("inlineCode",{parentName:"p"},"removeChildAt()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"swapChildrenAt()"),"\nmethods of the Stage object, but these are different from the other\nrestrictions. Rather than needing to be in the same domain as the Stage owner,\nto call these methods code must be in the same domain as the owner of the\naffected child object(s), or the child object(s) can call the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method."),(0,r.kt)("h2",{id:"traversing-the-display-list"},"Traversing the display list"),(0,r.kt)("p",null,"The ability of one SWF file to access display objects loaded from other\nsandboxes is restricted. In order for a SWF file to access a display object\ncreated by another SWF file in a different sandbox, the SWF file being accessed\nmust call the ",(0,r.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method to permit access by the domain of\nthe accessing SWF file. For more information, see\n",(0,r.kt)("a",{parentName:"p",href:"/docs/development/security/permission-controls#author-developer-controls"},"Author (developer) controls"),"."),(0,r.kt)("p",null,"To access a Bitmap object that was loaded by a Loader object, a URL policy file\nmust exist on the origin server of the image file, and that policy file must\ngrant permission to the domain of the SWF file trying to access the Bitmap\nobject (see\n",(0,r.kt)("a",{parentName:"p",href:"/docs/development/security/permission-controls#website-controls-policy-files"},"Website controls (policy files)"),")."),(0,r.kt)("p",null,"The LoaderInfo object that corresponds to a loaded file (and to the Loader\nobject) includes the following three properties, which define the relationship\nbetween the loaded object and the Loader object: ",(0,r.kt)("inlineCode",{parentName:"p"},"childAllowsParent"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"parentAllowsChild"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"sameDomain"),"."),(0,r.kt)("h2",{id:"event-security"},"Event security"),(0,r.kt)("p",null,"Events related to the display list have security access limitations, based on\nthe sandbox of the display object that is dispatching the event. An event in the\ndisplay list has bubbling and capture phases (described in\n",(0,r.kt)("a",{parentName:"p",href:"/docs/development/core-actionscript-classes/handling-events/"},"Handling events"),").\nDuring the bubbling and capture phases, an event migrates from the source\ndisplay object through parent display objects in the display list. If a parent\nobject is in a different security sandbox than the source display object, the\ncapture and bubble phase stops below that parent object, unless there is mutual\ntrust between the owner of the parent object and the owner of the source object.\nThis mutual trust can be achieved by the following:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The SWF file that owns the parent object must call the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method to trust the domain of the SWF file that\nowns the source object.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The SWF file that owns the source object must call the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()")," method to trust the domain of the SWF file that\nowns the parent object."))),(0,r.kt)("p",null,"The LoaderInfo object that corresponds to a loaded file (and to the Loader\nobject) includes the following two properties, which define the relationship\nbetween the loaded object and the Loader object: ",(0,r.kt)("inlineCode",{parentName:"p"},"childAllowsParent")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"parentAllowsChild"),"."),(0,r.kt)("p",null,"For events that are dispatched from objects other than display objects, there\nare no security checks or security-related implications."))}m.isMDXComponent=!0},23716:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/sc_crossScript_load_popup-582c1ab58e51fe0a8225d3a69781c9c9.png"}}]);