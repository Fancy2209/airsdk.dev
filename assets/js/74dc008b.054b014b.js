"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[50538],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>g});var n=i(67294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=d(i),c=a,g=m["".concat(l,".").concat(c)]||m[c]||f[c]||r;return i?n.createElement(g,o(o({ref:t},p),{},{components:i})):n.createElement(g,o({ref:t},p))}));function g(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,o=new Array(r);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var d=2;d<r;d++)o[d]=i[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}c.displayName="MDXCreateElement"},11306:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var n=i(87462),a=(i(67294),i(3905));const r={sidebar_position:2},o="Initializing a FileStream object, and opening and closing files",s={unversionedId:"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/initializing-a-filestream-object-and-opening-and-closing-files",id:"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/initializing-a-filestream-object-and-opening-and-closing-files",title:"Initializing a FileStream object, and opening and closing files",description:"When you open a FileStream object, you make it available to read and write data",source:"@site/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/initializing-a-filestream-object-and-opening-and-closing-files.md",sourceDirName:"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects",slug:"/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/initializing-a-filestream-object-and-opening-and-closing-files",permalink:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/initializing-a-filestream-object-and-opening-and-closing-files",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/initializing-a-filestream-object-and-opening-and-closing-files.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"mainSidebar",previous:{title:"FileStream open modes",permalink:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/filestream-open-modes"},next:{title:"The position property of a FileStream object",permalink:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/the-position-property-of-a-filestream-object"}},l={},d=[],p={toc:d},m="wrapper";function f(e){let{components:t,...i}=e;return(0,a.kt)(m,(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"initializing-a-filestream-object-and-opening-and-closing-files"},"Initializing a FileStream object, and opening and closing files"),(0,a.kt)("p",null,"When you open a FileStream object, you make it available to read and write data\nto a file. You open a FileStream object by passing a File object to the ",(0,a.kt)("inlineCode",{parentName:"p"},"open()"),"\nor ",(0,a.kt)("inlineCode",{parentName:"p"},"openAsync()")," method of the FileStream object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var myFile:File = File.documentsDirectory.resolvePath("AIR Test/test.txt");\nvar myFileStream:FileStream = new FileStream();\nmyFileStream.open(myFile, FileMode.READ);\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"fileMode")," parameter (the second parameter of the ",(0,a.kt)("inlineCode",{parentName:"p"},"open()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"openAsync()"),"\nmethods), specifies the mode in which to open the file: for read, write, append,\nor update. For details, see the previous section,\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/filestream-open-modes"},"FileStream open modes"),"."),(0,a.kt)("p",null,"If you use the ",(0,a.kt)("inlineCode",{parentName:"p"},"openAsync()")," method to open the file for asynchronous file\noperations, set up event listeners to handle the asynchronous events:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var myFile:File = File.documentsDirectory.resolvePath("AIR Test/test.txt");\nvar myFileStream:FileStream = new FileStream();\nmyFileStream.addEventListener(Event.COMPLETE, completeHandler);\nmyFileStream.addEventListener(ProgressEvent.PROGRESS, progressHandler);\nmyFileStream.addEventListener(IOErrorEvent.IO_Error, errorHandler);\nmyFileStream.openAsync(myFile, FileMode.READ);\n\nfunction completeHandler(event:Event):void {\n    // ...\n}\n\nfunction progressHandler(event:ProgressEvent):void {\n    // ...\n}\n\nfunction errorHandler(event:IOErrorEvent):void {\n    // ...\n}\n')),(0,a.kt)("p",null,"The file is opened for synchronous or asynchronous operations, depending upon\nwhether you use the ",(0,a.kt)("inlineCode",{parentName:"p"},"open()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"openAsync()")," method. For details, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/air-file-basics"},"AIR file basics"),"."),(0,a.kt)("p",null,"If you set the ",(0,a.kt)("inlineCode",{parentName:"p"},"fileMode")," parameter to ",(0,a.kt)("inlineCode",{parentName:"p"},"FileMode.READ")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"FileMode.UPDATE")," in\nthe open method of the FileStream object, data is read into the read buffer as\nsoon as you open the FileStream object. For details, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/the-read-buffer-and-the-bytesavailable-property-of-a-filestream-object"},"The read buffer and the bytesAvailable property of a FileStream object"),"."),(0,a.kt)("p",null,"You can call the ",(0,a.kt)("inlineCode",{parentName:"p"},"close()")," method of a FileStream object to close the associated\nfile, making it available for use by other applications."))}f.isMDXComponent=!0}}]);