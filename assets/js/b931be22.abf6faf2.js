"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[68383],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,m=d["".concat(s,".").concat(u)]||d[u]||h[u]||l;return n?i.createElement(m,o(o({ref:t},c),{},{components:n})):i.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=u;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[d]="string"==typeof e?e:a,o[1]=r;for(var p=2;p<l;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},72542:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>p});var i=n(87462),a=(n(67294),n(3905));const l={sidebar_position:2},o="Working with File objects in AIR",r={unversionedId:"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-file-objects-in-air",id:"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-file-objects-in-air",title:"Working with File objects in AIR",description:"A File object is a pointer to a file or directory in the file system.",source:"@site/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-file-objects-in-air.md",sourceDirName:"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api",slug:"/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-file-objects-in-air",permalink:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-file-objects-in-air",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-file-objects-in-air.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"mainSidebar",previous:{title:"AIR file basics",permalink:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/air-file-basics"},next:{title:"Getting file system information",permalink:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/getting-file-system-information"}},s={},p=[{value:"About the File class",id:"about-the-file-class",level:2},{value:"Paths of File objects",id:"paths-of-file-objects",level:2},{value:"Pointing a File object to a directory",id:"pointing-a-file-object-to-a-directory",level:2},{value:"Pointing to the user&#39;s home directory",id:"pointing-to-the-users-home-directory",level:3},{value:"Pointing to the user&#39;s documents directory",id:"pointing-to-the-users-documents-directory",level:3},{value:"Pointing to the desktop directory",id:"pointing-to-the-desktop-directory",level:3},{value:"Pointing to the application storage directory",id:"pointing-to-the-application-storage-directory",level:3},{value:"Pointing to the application directory",id:"pointing-to-the-application-directory",level:3},{value:"Pointing to the cache directory",id:"pointing-to-the-cache-directory",level:3},{value:"Pointing to the file system root",id:"pointing-to-the-file-system-root",level:3},{value:"Pointing to an explicit directory",id:"pointing-to-an-explicit-directory",level:3},{value:"Navigating to relative paths",id:"navigating-to-relative-paths",level:3},{value:"Letting the user browse to select a directory",id:"letting-the-user-browse-to-select-a-directory",level:3},{value:"Pointing to the directory from which the application was invoked",id:"pointing-to-the-directory-from-which-the-application-was-invoked",level:3},{value:"Pointing a File object to a file",id:"pointing-a-file-object-to-a-file",level:2},{value:"Pointing to an explicit file path",id:"pointing-to-an-explicit-file-path",level:3},{value:"Enumerating files in a directory",id:"enumerating-files-in-a-directory",level:3},{value:"Letting the user browse to select a file",id:"letting-the-user-browse-to-select-a-file",level:3},{value:"Modifying File paths",id:"modifying-file-paths",level:2},{value:"Supported AIR URL schemes",id:"supported-air-url-schemes",level:2},{value:"Controlling file backup and caching",id:"controlling-file-backup-and-caching",level:2},{value:"Specifying files for backup",id:"specifying-files-for-backup",level:4},{value:"Controlling file caching and deletion",id:"controlling-file-caching-and-deletion",level:4},{value:"Finding the relative path between two files",id:"finding-the-relative-path-between-two-files",level:2},{value:"Obtaining canonical versions of file names",id:"obtaining-canonical-versions-of-file-names",level:2},{value:"Working with packages and symbolic links",id:"working-with-packages-and-symbolic-links",level:2},{value:"Determining space available on a volume",id:"determining-space-available-on-a-volume",level:2},{value:"Opening files with the default system application",id:"opening-files-with-the-default-system-application",level:2}],c={toc:p},d="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"working-with-file-objects-in-air"},"Working with File objects in AIR"),(0,a.kt)("p",null,"A File object is a pointer to a file or directory in the file system."),(0,a.kt)("p",null,"The File class extends the FileReference class. The FileReference class, which\nis available in Adobe\xae Flash\xae Player as well as AIR, represents a pointer to a\nfile. The File class adds properties and methods that are not exposed in Flash\nPlayer (in a SWF file running in a browser), due to security considerations."),(0,a.kt)("h2",{id:"about-the-file-class"},"About the File class"),(0,a.kt)("p",null,"You can use the File class for the following:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Getting the path to special directories, including the user directory, the\nuser's documents directory, the directory from which the application was\nlaunched, and the application directory")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Coping files and directories")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Moving files and directories")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Deleting files and directories (or moving them to the trash)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Listing files and directories contained in a directory")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Creating temporary files and folders"))),(0,a.kt)("p",null,"Once a File object points to a file path, you can use it to read and write file\ndata, using the FileStream class."),(0,a.kt)("p",null,"A File object can point to the path of a file or directory that does not yet\nexist. You can use such a File object in creating a file or directory."),(0,a.kt)("h2",{id:"paths-of-file-objects"},"Paths of File objects"),(0,a.kt)("p",null,"Each File object has two properties that each define its path:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"nativePath")),(0,a.kt)("td",{parentName:"tr",align:null},'Specifies the platform-specific path to a file. For example, on Windows a path might be "c:\\Sample directory\\test.txt" whereas on Mac OS it could be "/Sample directory/test.txt". A ',(0,a.kt)("inlineCode",{parentName:"td"},"nativePath")," property uses the backslash (","\\"," character as the directory separator character on Windows, and it uses the forward slash (/) character on Mac OS and Linux.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"url")),(0,a.kt)("td",{parentName:"tr",align:null},'This may use the file URL scheme to point to a file. For example, on Windows a path might be "file:///c:/Sample%20directory/test.txt" whereas on Mac OS it could be "file:///Sample%20directory/test.txt". The runtime includes other special URL schemes besides ',(0,a.kt)("inlineCode",{parentName:"td"},"file")," and are described in ",(0,a.kt)("a",{parentName:"td",href:"#supported-air-url-schemes"},"Supported AIR URL schemes"))))),(0,a.kt)("p",null,"The File class includes static properties for pointing to standard directories\non Mac OS, Windows, and Linux. These properties include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"File.applicationStorageDirectory")," \u2014a storage directory unique to each\ninstalled AIR application. This directory is an appropriate place to store\ndynamic application assets and user preferences. Consider storing large\namounts of data elsewhere."),(0,a.kt)("p",{parentName:"li"},"On Android and iOS, the application storage directory is removed when the\napplication is uninstalled or the user chooses to clear application data, but\nthis is not the case on other platforms.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"File.applicationDirectory")," \u2014the directory where the application is installed\n(along with any installed assets). On some operating systems, the application\nis stored in a single package file rather than a physical directory. In this\ncase, the contents may not be accessible using the native path. The\napplication directory is read-only.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"File.desktopDirectory")," \u2014the user's desktop directory. If a platform does not\ndefine a desktop directory, another location on the file system is used.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"File.documentsDirectory")," \u2014the user's documents directory. If a platform does\nnot define a documents directory, another location on the file system is used.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"File.userDirectory")," \u2014the user directory. If a platform does not define a user\ndirectory, another location on the file system is used."))),(0,a.kt)("p",null,"Note: When a platform does not define standard locations for desktop, documents,\nor user directories, ",(0,a.kt)("inlineCode",{parentName:"p"},"File.documentsDirectory"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"File.desktopDirectory"),", and\n",(0,a.kt)("inlineCode",{parentName:"p"},"File.userDirectory")," can reference the same directory."),(0,a.kt)("p",null,"These properties have different values on different operating systems. For\nexample, Mac and Windows each have a different native path to the user's desktop\ndirectory. However, the ",(0,a.kt)("inlineCode",{parentName:"p"},"File.desktopDirectory")," property points to an\nappropriate directory path on every platform. To write applications that work\nwell across platforms, use these properties as the basis for referencing other\ndirectories and files used by the application. Then use the ",(0,a.kt)("inlineCode",{parentName:"p"},"resolvePath()"),"\nmethod to refine the path. For example, this code points to the preferences.xml\nfile in the application storage directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var prefsFile:File = File.applicationStorageDirectory;\nprefsFile = prefsFile.resolvePath("preferences.xml");\n')),(0,a.kt)("p",null,"Although the File class lets you point to a specific file path, doing so can\nlead to applications that do not work across platforms. For example, the path\nC:\\Documents and Settings\\joe","\\"," only works on Windows. For these reasons, it is\nbest to use the static properties of the File class, such as\n",(0,a.kt)("inlineCode",{parentName:"p"},"File.documentsDirectory"),"."),(0,a.kt)("table",null,(0,a.kt)("caption",null,"Common directory locations"),(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,(0,a.kt)("p",null,"Platform")),(0,a.kt)("th",null,(0,a.kt)("p",null,"Directory type")),(0,a.kt)("th",null,(0,a.kt)("p",null,"Typical file system location")))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",{rowspan:"7"},(0,a.kt)("p",null,"Android")),(0,a.kt)("td",null,(0,a.kt)("p",null,"Application")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/data/data/")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Application-storage")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/data/data/air.applicationID/filename/Local Store")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Cache")),(0,a.kt)("td",null,(0,a.kt)("p",null,"/data/data/applicationID/cache"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Desktop")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/mnt/sdcard")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Documents")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/mnt/sdcard")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Temporary")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/data/data/applicationID/cache/FlashTmp.randomString")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"User")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/mnt/sdcard")))),(0,a.kt)("tr",null,(0,a.kt)("td",{rowspan:"7"},(0,a.kt)("p",null,"iOS")),(0,a.kt)("td",null,(0,a.kt)("p",null,"Application")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/var/mobile/Applications/uid/filename.app")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Application-storage")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/var/mobile/Applications/uid/Library/Application Support/applicationID/Local Store")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Cache")),(0,a.kt)("td",null,(0,a.kt)("p",null,"/var/mobile/Applications/uid/Library/Caches"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Desktop")),(0,a.kt)("td",null,(0,a.kt)("p",null,"not accessible"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Documents")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/var/mobile/Applications/uid/Documents")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Temporary")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/private/var/mobile/Applications/uid/tmp/FlashTmpNNN")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"User")),(0,a.kt)("td",null,(0,a.kt)("p",null,"not accessible"))),(0,a.kt)("tr",null,(0,a.kt)("td",{rowspan:"6"},(0,a.kt)("p",null,"Linux")),(0,a.kt)("td",null,(0,a.kt)("p",null,"Application")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/opt/filename/share")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Application-storage")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/home/userName/.appdata/applicationID/Local Store")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Desktop")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/home/userName/Desktop")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Documents")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/home/userName/Documents")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Temporary")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/tmp/FlashTmp.randomString")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"User")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/home/userName")))),(0,a.kt)("tr",null,(0,a.kt)("td",{rowspan:"7"},(0,a.kt)("p",null,"Mac")),(0,a.kt)("td",null,(0,a.kt)("p",null,"Application")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/Applications/filename.app/Contents/Resources")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Application-storage")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/Users/ "),(0,a.kt)("em",null,(0,a.kt)("samp",null,"userName")),(0,a.kt)("samp",null,"/Library/Preferences/ "),(0,a.kt)("em",null,(0,a.kt)("samp",null,"applicationid")),(0,a.kt)("samp",null,"/Local Store")," (AIR 3.2 and earlier)"),(0,a.kt)("p",null,(0,a.kt)("samp",null," "),(0,a.kt)("em",null,(0,a.kt)("samp",null,"path")),(0,a.kt)("samp",null," /Library/Application Support/ "),(0,a.kt)("em",null,(0,a.kt)("samp",null,"applicationid")),(0,a.kt)("samp",null," /Local Store")," (AIR 3.3 and later), where path is is either ",(0,a.kt)("samp",null,"/Users/"),(0,a.kt)("em",null,(0,a.kt)("samp",null,"userName")),(0,a.kt)("samp",null," /Library/Containers/"),(0,a.kt)("em",null,(0,a.kt)("samp",null,"bundle-id")),(0,a.kt)("samp",null," /Data")," (sandboxed environment) or ",(0,a.kt)("samp",null,"/Users/userName")," (when running outside a sandboxed environment)"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Cache")),(0,a.kt)("td",null,(0,a.kt)("p",null,"/Users/userName/Library/Caches"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Desktop")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/Users/ "),(0,a.kt)("em",null,(0,a.kt)("samp",null,"userName")),(0,a.kt)("samp",null,"/Desktop")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Documents")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/Users/ "),(0,a.kt)("em",null,(0,a.kt)("samp",null,"userName")),(0,a.kt)("samp",null,"/Documents")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Temporary")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/private/var/folders/JY/randomString/TemporaryItems/FlashTmp")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"User")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"/Users/ "),(0,a.kt)("em",null,(0,a.kt)("samp",null,"userName")),(0,a.kt)("samp",null)))),(0,a.kt)("tr",null,(0,a.kt)("td",{rowspan:"7"},(0,a.kt)("p",null,"Windows")),(0,a.kt)("td",null,(0,a.kt)("p",null,"Application")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"C:\\Program Files\\filename")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Application-storage")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"C:\\Documents and settings\\userName\\ApplicationData\\applicationID\\Local Store")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Cache")),(0,a.kt)("td",null,(0,a.kt)("p",null,"C:\\Documents and settings\\userName\\Local Settings\\Temp"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Desktop")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"C:\\Documents and settings\\userName\\Desktop")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Documents")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"C:\\Documents and settings\\userName\\My Documents")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"Temporary")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"C:\\Documents and settings\\userName\\Local Settings\\Temp\\randomString.tmp")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"User")),(0,a.kt)("td",null,(0,a.kt)("p",null,(0,a.kt)("samp",null,"C:\\Documents and settings\\userName")))))),(0,a.kt)("p",null,"Common directory locations"),(0,a.kt)("p",null,"The actual native paths for these directories vary based on the operating system\nand computer configuration. The paths shown in this table are typical examples.\nYou should always use the appropriate static File class properties to refer to\nthese directories so that your application works correctly on any platform. In\nan actual AIR application, the values for ",(0,a.kt)("inlineCode",{parentName:"p"},"applicationID")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"filename")," shown\nin the table are taken from the application descriptor. If you specify a\npublisher ID in the application descriptor, then the publisher ID is appended to\nthe application ID in these paths. The value for ",(0,a.kt)("inlineCode",{parentName:"p"},"userName")," is the account name\nof the installing user."),(0,a.kt)("h2",{id:"pointing-a-file-object-to-a-directory"},"Pointing a File object to a directory"),(0,a.kt)("p",null,"There are different ways to set a File object to point to a directory."),(0,a.kt)("h3",{id:"pointing-to-the-users-home-directory"},"Pointing to the user's home directory"),(0,a.kt)("p",null,"You can point a File object to the user's home directory. The following code\nsets a File object to point to an AIR Test subdirectory of the home directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = File.userDirectory.resolvePath("AIR Test");\n')),(0,a.kt)("h3",{id:"pointing-to-the-users-documents-directory"},"Pointing to the user's documents directory"),(0,a.kt)("p",null,"You can point a File object to the user's documents directory. The following\ncode sets a File object to point to an AIR Test subdirectory of the documents\ndirectory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = File.documentsDirectory.resolvePath("AIR Test");\n')),(0,a.kt)("h3",{id:"pointing-to-the-desktop-directory"},"Pointing to the desktop directory"),(0,a.kt)("p",null,"You can point a File object to the desktop. The following code sets a File\nobject to point to an AIR Test subdirectory of the desktop:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = File.desktopDirectory.resolvePath("AIR Test");\n')),(0,a.kt)("h3",{id:"pointing-to-the-application-storage-directory"},"Pointing to the application storage directory"),(0,a.kt)("p",null,"You can point a File object to the application storage directory. For every AIR\napplication, there is a unique associated path that defines the application\nstorage directory. This directory is unique to each application and user. You\ncan use this directory to store user-specific, application-specific data (such\nas user data or preferences files). For example, the following code points a\nFile object to a preferences file, prefs.xml, contained in the application\nstorage directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = File.applicationStorageDirectory;\nfile = file.resolvePath("prefs.xml");\n')),(0,a.kt)("p",null,"The application storage directory location is typically based on the user name\nand the application ID. The following file system locations are given here to\nhelp you debug your application. You should always use the\n",(0,a.kt)("inlineCode",{parentName:"p"},"File.applicationStorage")," property or ",(0,a.kt)("inlineCode",{parentName:"p"},"app-storage:")," URI scheme to resolve files\nin this directory:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"On Mac OS \u2014 varies by AIR version:"),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"AIR 3.2 and earlier")," :\n",(0,a.kt)("inlineCode",{parentName:"p"},"/Users/user name/Library/Preferences/ "),(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"applicationID")),(0,a.kt)("inlineCode",{parentName:"p"}," /Local Store/")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"AIR 3.3 and later")," :\n",(0,a.kt)("inlineCode",{parentName:"p"}," "),(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"path")),(0,a.kt)("inlineCode",{parentName:"p"},"/Library/Application Support/"),(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"applicationID")),(0,a.kt)("inlineCode",{parentName:"p"}," /Local Store"),",\nwhere ",(0,a.kt)("inlineCode",{parentName:"p"}," "),(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"path")),(0,a.kt)("inlineCode",{parentName:"p"}," ")," is either\n",(0,a.kt)("inlineCode",{parentName:"p"},"/Users/ "),(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"username")),(0,a.kt)("inlineCode",{parentName:"p"},"/Library/Containers/"),(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"bundle-id")),(0,a.kt)("inlineCode",{parentName:"p"}," /Data")," (sandboxed\nenvironment) or ",(0,a.kt)("inlineCode",{parentName:"p"},"/Users/ "),(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"username")),(0,a.kt)("inlineCode",{parentName:"p"}," ")," (when running outside a sandboxed\nenvironment)"),(0,a.kt)("p",{parentName:"li"},"For example (AIR 3.2):"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"/Users/babbage/Library/Preferences/com.example.TestApp/Local Store\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"On Windows\u2014In the documents and Settings directory, in:"),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("em",{parentName:"p"},"C:\\Documents and Settings\\user name")," ",(0,a.kt)("inlineCode",{parentName:"p"},"\\Application Data\\")," ",(0,a.kt)("em",{parentName:"p"},"applicationID"),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"\\Local Store\\")),(0,a.kt)("p",{parentName:"li"},"For example:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"C:\\Documents and Settings\\babbage\\Application Data\\com.example.TestApp\\Local Store\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"On Linux\u2014In:"),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"/home/")," ",(0,a.kt)("em",{parentName:"p"},"user name")," ",(0,a.kt)("inlineCode",{parentName:"p"},"/.appdata/")," ",(0,a.kt)("em",{parentName:"p"},"applicationID")," ",(0,a.kt)("inlineCode",{parentName:"p"},"/Local Store/")),(0,a.kt)("p",{parentName:"li"},"For example:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"/home/babbage/.appdata/com.example.TestApp/Local Store\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"On Android\u2014In:"),(0,a.kt)("p",{parentName:"li"},"/data/data/ ",(0,a.kt)("inlineCode",{parentName:"p"},"androidPackageID")," / ",(0,a.kt)("inlineCode",{parentName:"p"},"applicationID/Local Store")),(0,a.kt)("p",{parentName:"li"},"For example:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"/data/data/air.com.example.TestApp/com.example.TestApp/Local Store\n")))),(0,a.kt)("p",null,"Note: If an application has a publisher ID, then the publisher ID is also used\nas part of the path to the application storage directory."),(0,a.kt)("p",null,"The URL (and ",(0,a.kt)("inlineCode",{parentName:"p"},"url")," property) for a File object created with\n",(0,a.kt)("inlineCode",{parentName:"p"},"File.applicationStorageDirectory")," uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"app-storage")," URL scheme (see\n",(0,a.kt)("a",{parentName:"p",href:"#supported-air-url-schemes"},"Supported AIR URL schemes"),"), as in the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var dir:File = File.applicationStorageDirectory;\ndir = dir.resolvePath("preferences");\ntrace(dir.url); // app-storage:/preferences\n')),(0,a.kt)("h3",{id:"pointing-to-the-application-directory"},"Pointing to the application directory"),(0,a.kt)("p",null,"You can point a File object to the directory in which the application was\ninstalled, known as the application directory. You can reference this directory\nusing the ",(0,a.kt)("inlineCode",{parentName:"p"},"File.applicationDirectory")," property. You can use this directory to\nexamine the application descriptor file or other resources installed with the\napplication. For example, the following code points a File object to a directory\nnamed ",(0,a.kt)("em",{parentName:"p"},"images")," in the application directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var dir:File = File.applicationDirectory;\ndir = dir.resolvePath("images");\n')),(0,a.kt)("p",null,"The URL (and ",(0,a.kt)("inlineCode",{parentName:"p"},"url")," property) for a File object created with\n",(0,a.kt)("inlineCode",{parentName:"p"},"File.applicationDirectory")," uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"app")," URL scheme (see\n",(0,a.kt)("a",{parentName:"p",href:"#supported-air-url-schemes"},"Supported AIR URL schemes"),"), as in the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var dir:File = File.applicationDirectory;\ndir = dir.resolvePath("images");\ntrace(dir.url); // app:/images\n')),(0,a.kt)("p",null,"Note: On Android, the files in the application package are not accessible via\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"nativePath"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"nativePath")," property is an empty string. Always use the\nURL to access files in the application directory rather than a native path."),(0,a.kt)("h3",{id:"pointing-to-the-cache-directory"},"Pointing to the cache directory"),(0,a.kt)("p",null,"You can point a File object to the operating system's temporary or cache\ndirectory using the ",(0,a.kt)("inlineCode",{parentName:"p"},"File.cacheDirectory")," property. This directory contains\ntemporary files that are not required for the application to run and will not\ncause problems or data loss for the user if they are deleted."),(0,a.kt)("p",null,"In most operating systems the cache directory is a temporary directory. On iOS,\nthe cache directory corresponds to the application library's Caches directory.\nFiles in this directory are not backed up to online storage, and can potentially\nbe deleted by the operating system if the device's available storage space is\ntoo low. For more information, see\n",(0,a.kt)("a",{parentName:"p",href:"#controlling-file-backup-and-caching"},"Controlling file backup and caching"),"."),(0,a.kt)("h3",{id:"pointing-to-the-file-system-root"},"Pointing to the file system root"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"File.getRootDirectories()"),' method lists all root volumes, such as C: and\nmounted volumes, on a Windows computer. On Mac OS and Linux, this method always\nreturns the unique root directory for the machine (the "/" directory). The\n',(0,a.kt)("inlineCode",{parentName:"p"},"StorageVolumeInfo.getStorageVolumes()")," method provides more detailed\ninformation on mounted storage volumes (see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-storage-volumes"},"Working with storage volumes"),")."),(0,a.kt)("p",null,'Note: The root of the file system is not readable on Android. A File object\nreferencing the directory with the native path, "/", is returned, but the\nproperties of that object do not have accurate values. For example,\n',(0,a.kt)("inlineCode",{parentName:"p"},"spaceAvailable")," is always 0."),(0,a.kt)("h3",{id:"pointing-to-an-explicit-directory"},"Pointing to an explicit directory"),(0,a.kt)("p",null,"You can point the File object to an explicit directory by setting the\n",(0,a.kt)("inlineCode",{parentName:"p"},"nativePath")," property of the File object, as in the following example (on\nWindows):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = new File();\nfile.nativePath = "C:\\\\AIR Test";\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Important:")," Pointing to an explicit path this way can lead to code that does\nnot work across platforms. For example, the previous example only works on\nWindows. You can use the static properties of the File object, such as\n",(0,a.kt)("inlineCode",{parentName:"p"},"File.applicationStorageDirectory"),", to locate a directory that works\ncross-platform. Then use the ",(0,a.kt)("inlineCode",{parentName:"p"},"resolvePath()")," method (see the next section) to\nnavigate to a relative path."),(0,a.kt)("h3",{id:"navigating-to-relative-paths"},"Navigating to relative paths"),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"resolvePath()"),' method to obtain a path relative to another\ngiven path. For example, the following code sets a File object to point to an\n"AIR Test" subdirectory of the user\'s home directory:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = File.userDirectory;\nfile = file.resolvePath("AIR Test");\n')),(0,a.kt)("p",null,"You can also use the ",(0,a.kt)("inlineCode",{parentName:"p"},"url")," property of a File object to point it to a directory\nbased on a URL string, as in the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var urlStr:String = "file:///C:/AIR Test/";\nvar file:File = new File()\nfile.url = urlStr;\n')),(0,a.kt)("p",null,"For more information, see ",(0,a.kt)("a",{parentName:"p",href:"#modifying-file-paths"},"Modifying File paths"),"."),(0,a.kt)("h3",{id:"letting-the-user-browse-to-select-a-directory"},"Letting the user browse to select a directory"),(0,a.kt)("p",null,"The File class includes the ",(0,a.kt)("inlineCode",{parentName:"p"},"browseForDirectory()")," method, which presents a\nsystem dialog box in which the user can select a directory to assign to the\nobject. The ",(0,a.kt)("inlineCode",{parentName:"p"},"browseForDirectory()")," method is asynchronous. The File object\ndispatches a ",(0,a.kt)("inlineCode",{parentName:"p"},"select")," event if the user selects a directory and clicks the Open\nbutton, or it dispatches a ",(0,a.kt)("inlineCode",{parentName:"p"},"cancel")," event if the user clicks the Cancel button."),(0,a.kt)("p",null,"For example, the following code lets the user select a directory and outputs the\ndirectory path upon selection:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = new File();\nfile.addEventListener(Event.SELECT, dirSelected);\nfile.browseForDirectory("Select a directory");\nfunction dirSelected(e:Event):void {\n    trace(file.nativePath);\n}\n')),(0,a.kt)("p",null,"Note: On Android, the ",(0,a.kt)("inlineCode",{parentName:"p"},"browseForDirectory()")," method is not supported. Calling\nthis method has no effect; a cancel event is dispatched immediately. To allow\nusers to select a directory, use a custom, application-defined dialog, instead."),(0,a.kt)("h3",{id:"pointing-to-the-directory-from-which-the-application-was-invoked"},"Pointing to the directory from which the application was invoked"),(0,a.kt)("p",null,"You can get the directory location from which an application is invoked, by\nchecking the ",(0,a.kt)("inlineCode",{parentName:"p"},"currentDirectory")," property of the InvokeEvent object dispatched\nwhen the application is invoked. For details, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/client-system-interaction/air-application-invokation-and-termination#capturing-command-line-arguments"},"Capturing command line arguments"),"."),(0,a.kt)("h2",{id:"pointing-a-file-object-to-a-file"},"Pointing a File object to a file"),(0,a.kt)("p",null,"There are different ways to set the file to which a File object points."),(0,a.kt)("h3",{id:"pointing-to-an-explicit-file-path"},"Pointing to an explicit file path"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Important:")," Pointing to an explicit path can lead to code that does not work\nacross platforms. For example, the path C:/foo.txt only works on Windows. You\ncan use the static properties of the File object, such as\n",(0,a.kt)("inlineCode",{parentName:"p"},"File.applicationStorageDirectory"),", to locate a directory that works\ncross-platform. Then use the ",(0,a.kt)("inlineCode",{parentName:"p"},"resolvePath()")," method (see\n",(0,a.kt)("a",{parentName:"p",href:"#modifying-file-paths"},"Modifying File paths"),") to navigate to a relative path."),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"url")," property of a File object to point it to a file or\ndirectory based on a URL string, as in the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var urlStr:String = "file:///C:/AIR Test/test.txt";\nvar file:File = new File()\nfile.url = urlStr;\n')),(0,a.kt)("p",null,"You can also pass the URL to the ",(0,a.kt)("inlineCode",{parentName:"p"},"File()")," constructor function, as in the\nfollowing:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var urlStr:String = "file:///C:/AIR Test/test.txt";\nvar file:File = new File(urlStr);\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"url")," property always returns the URI-encoded version of the URL (for\nexample, blank spaces are replaced with ",(0,a.kt)("inlineCode",{parentName:"p"},'"%20'),"):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'file.url = "file:///c:/AIR Test";\ntrace(file.url); // file:///c:/AIR%20Test\n')),(0,a.kt)("p",null,"You can also use the ",(0,a.kt)("inlineCode",{parentName:"p"},"nativePath")," property of a File object to set an explicit\npath. For example, the following code, when run on a Windows computer, sets a\nFile object to the test.txt file in the AIR Test subdirectory of the C: drive:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = new File();\nfile.nativePath = "C:/AIR Test/test.txt";\n')),(0,a.kt)("p",null,"You can also pass this path to the ",(0,a.kt)("inlineCode",{parentName:"p"},"File()")," constructor function, as in the\nfollowing:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = new File("C:/AIR Test/test.txt");\n')),(0,a.kt)("p",null,"Use the forward slash (/) character as the path delimiter for the ",(0,a.kt)("inlineCode",{parentName:"p"},"nativePath"),"\nproperty. On Windows, you can also use the backslash (","\\"," character, but doing so\nleads to applications that do not work across platforms."),(0,a.kt)("p",null,"For more information, see ",(0,a.kt)("a",{parentName:"p",href:"#modifying-file-paths"},"Modifying File paths"),"."),(0,a.kt)("h3",{id:"enumerating-files-in-a-directory"},"Enumerating files in a directory"),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"getDirectoryListing()")," method of a File object to get an array\nof File objects pointing to files and subdirectories at the root level of a\ndirectory. For more information, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-directories#enumerating-directories"},"Enumerating directories"),"."),(0,a.kt)("h3",{id:"letting-the-user-browse-to-select-a-file"},"Letting the user browse to select a file"),(0,a.kt)("p",null,"The File class includes the following methods that present a system dialog box\nin which the user can select a file to assign to the object:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"browseForOpen()"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"browseForSave()"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"browseForOpenMultiple()")))),(0,a.kt)("p",null,"These methods are each asynchronous. The ",(0,a.kt)("inlineCode",{parentName:"p"},"browseForOpen()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"browseForSave()"),"\nmethods dispatch the select event when the user selects a file (or a target\npath, in the case of browseForSave()). With the ",(0,a.kt)("inlineCode",{parentName:"p"},"browseForOpen()")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"browseForSave()")," methods, upon selection the target File object points to the\nselected files. The ",(0,a.kt)("inlineCode",{parentName:"p"},"browseForOpenMultiple")," () method dispatches a\n",(0,a.kt)("inlineCode",{parentName:"p"},"selectMultiple")," event when the user selects files. The ",(0,a.kt)("inlineCode",{parentName:"p"},"selectMultiple")," event\nis of type FileListEvent, which has a ",(0,a.kt)("inlineCode",{parentName:"p"},"files")," property that is an array of File\nobjects (pointing to the selected files)."),(0,a.kt)("p",null,'For example, the following code presents the user with an "Open" dialog box in\nwhich the user can select a file:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var fileToOpen:File = File.documentsDirectory;\nselectTextFile(fileToOpen);\n\nfunction selectTextFile(root:File):void\n{\n    var txtFilter:FileFilter = new FileFilter("Text", "*.as;*.css;*.html;*.txt;*.xml");\n    root.browseForOpen("Open", [txtFilter]);\n    root.addEventListener(Event.SELECT, fileSelected);\n}\n\nfunction fileSelected(event:Event):void\n{\n    trace(fileToOpen.nativePath);\n}\n')),(0,a.kt)("p",null,"If the application has another browser dialog box open when you call a browse\nmethod, the runtime throws an Error exception."),(0,a.kt)("p",null,"Note: On Android, only image, video, and audio files can be selected with the\n",(0,a.kt)("inlineCode",{parentName:"p"},"browseForOpen()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"browseForOpenMultiple()")," methods. The browseForSave()\ndialog also displays only media files even though the user can enter an\narbitrary filename. For opening and saving non-media files, you should consider\nusing custom dialogs instead of these methods."),(0,a.kt)("h2",{id:"modifying-file-paths"},"Modifying File paths"),(0,a.kt)("p",null,"You can also modify the path of an existing File object by calling the\n",(0,a.kt)("inlineCode",{parentName:"p"},"resolvePath()")," method or by modifying the ",(0,a.kt)("inlineCode",{parentName:"p"},"nativePath")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"url")," property of the\nobject, as in the following examples (on Windows):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file1:File = File.documentsDirectory;\nfile1 = file1.resolvePath("AIR Test");\ntrace(file1.nativePath); // C:\\Documents and Settings\\userName\\My Documents\\AIR Test\nvar file2:File = File.documentsDirectory;\nfile2 = file2.resolvePath("..");\ntrace(file2.nativePath); // C:\\Documents and Settings\\userName\nvar file3:File = File.documentsDirectory;\nfile3.nativePath += "/subdirectory";\ntrace(file3.nativePath); // C:\\Documents and Settings\\userName\\My Documents\\subdirectory\nvar file4:File = new File();\nfile4.url = "file:///c:/AIR Test/test.txt";\ntrace(file4.nativePath); // C:\\AIR Test\\test.txt\n')),(0,a.kt)("p",null,"When using the ",(0,a.kt)("inlineCode",{parentName:"p"},"nativePath")," property, use the forward slash (/) character as the\ndirectory separator character. On Windows, you can use the backslash (","\\","\ncharacter as well, but you should not do so, as it leads to code that does not\nwork cross-platform."),(0,a.kt)("h2",{id:"supported-air-url-schemes"},"Supported AIR URL schemes"),(0,a.kt)("p",null,"In AIR, you can use any of the following URL schemes in defining the ",(0,a.kt)("inlineCode",{parentName:"p"},"url"),"\nproperty of a File object:"),(0,a.kt)("table",null,(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,(0,a.kt)("p",null,"URL scheme")),(0,a.kt)("th",null,(0,a.kt)("p",null,"Description")))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"file")),(0,a.kt)("td",null,(0,a.kt)("p",null,"Use to specify a path relative to the root of the file system. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",null,"file:///c:/AIR Test/test.txt")),(0,a.kt)("p",null,"The URL standard specifies that a file URL takes the form",(0,a.kt)("samp",null,"file://<host>/<path>"),". As a special case,",(0,a.kt)("samp",null,"<host>"),' can be the empty string, which is interpreted as "the machine from which the URL is being interpreted." For this reason, file URLs often have three slashes (///).'))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"app")),(0,a.kt)("td",null,(0,a.kt)("p",null,"Use to specify a path relative to the root directory of the installed application (the directory that contains the application.xml file for the installed application). For example, the following path points to an images subdirectory of the directory of the installed application:"),(0,a.kt)("pre",null,(0,a.kt)("code",null,"app:/images")))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("p",null,"app-storage")),(0,a.kt)("td",null,(0,a.kt)("p",null,"Use to specify a path relative to the application store directory. For each installed application, AIR defines a unique application store directory, which is a useful place to store data specific to that application. For example, the following path points to a prefs.xml file in a settings subdirectory of the application store directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",null,"app-storage:/settings/prefs.xml")))))),(0,a.kt)("h2",{id:"controlling-file-backup-and-caching"},"Controlling file backup and caching"),(0,a.kt)("p",null,"Certain operating systems, most notably iOS and Mac OS X, provide users the\nability to automatically back up application files to a remote storage. In\naddition, on iOS there are restrictions on whether files can be backed up and\nalso where files of different purposes can be stored."),(0,a.kt)("p",null,"The following summarize how to comply with Apple's guidelines for file backup\nand storage. For further information see the next sections."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"To specify that a file does not need to be backed up and (iOS only) can be\ndeleted by the operating system if device storage space runs low, save the\nfile in the cache directory ( ",(0,a.kt)("inlineCode",{parentName:"p"},"File.cacheDirectory"),"). This is the preferred\nstorage location on iOS and should be used for most files that can be\nregenerated or re-downloaded.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"To specify that a file does not need to be backed up, but should not be\ndeleted by the operating system, save the file in one of the application\nlibrary directories such as the application storage directory (\n",(0,a.kt)("inlineCode",{parentName:"p"},"File.applicationStorageDirectory"),") or the documents directory (\n",(0,a.kt)("inlineCode",{parentName:"p"},"File.documentsDirectory"),"). Set the File object's ",(0,a.kt)("inlineCode",{parentName:"p"},"preventBackup")," property to\n",(0,a.kt)("inlineCode",{parentName:"p"},"true"),". This is required by Apple for content that can be regenerated or\ndownloaded again, but which is required for proper functioning of your\napplication during offline use."))),(0,a.kt)("h4",{id:"specifying-files-for-backup"},"Specifying files for backup"),(0,a.kt)("p",null,"In order to save backup space and reduce network bandwidth use, Apple's\nguidelines for iOS and Mac applications specify that only files that contain\nuser-entered data or data that otherwise can't be regenerated or re-downloaded\nshould be designated for backup."),(0,a.kt)("p",null,"By default all files in the application library folders are backed up. On Mac OS\nX this is the application storage directory. On iOS, this includes the\napplication storage directory, the application directory, the desktop directory,\ndocuments directory, and user directory (because those directories are mapped to\napplication library folders on iOS). Consequently, any files in those\ndirectories are backed up to server storage by default."),(0,a.kt)("p",null,"If you are saving a file in one of those locations that can be re-created by\nyour application, you should flag the file so the operating system knows not to\nback it up. To indicate that a file should not be backed up, set the File\nobject's ",(0,a.kt)("inlineCode",{parentName:"p"},"preventBackup")," property to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("p",null,"Note that on iOS, for a file in any of the application library folders, even if\nthe file's ",(0,a.kt)("inlineCode",{parentName:"p"},"preventBackup")," property is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," the file is flagged as a\npersistent file that the operating system shouldn't delete."),(0,a.kt)("h4",{id:"controlling-file-caching-and-deletion"},"Controlling file caching and deletion"),(0,a.kt)("p",null,"Apple's guidelines for iOS applications specify that as much as possible,\ncontent that can be regenerated should be made available to the operating system\nto delete in case the device runs low on storage space."),(0,a.kt)("p",null,"On iOS, files in the application library folders (such as the application\nstorage directory or the documents directory) are flagged as permanent and are\nnot deleted by the operating system."),(0,a.kt)("p",null,"Save files that can be regenerated by the application and are safe to delete in\ncase of low storage space in the application cache directory. You access the\ncache directory using the ",(0,a.kt)("inlineCode",{parentName:"p"},"File.cacheDirectory")," static property."),(0,a.kt)("p",null,"On iOS the cache directory corresponds to the application's cache directory\n(\\<Application Home",">","/Library/Caches). On other operating systems, this\ndirectory is mapped to a comparable directory. For example, on Mac OS X it also\nmaps to the Caches directory in the application library. On Android the cache\ndirectory maps to the application's cache directory. On Windows, the cache\ndirectory maps to the operating system temp directory. On both Android and\nWindows, this is the same directory that is accessed by a call to the File\nclass's ",(0,a.kt)("inlineCode",{parentName:"p"},"createTempDirectory()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"createTempFile()")," methods."),(0,a.kt)("h2",{id:"finding-the-relative-path-between-two-files"},"Finding the relative path between two files"),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"getRelativePath()")," method to find the relative path between two\nfiles:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file1:File = File.documentsDirectory.resolvePath("AIR Test");\nvar file2:File = File.documentsDirectory\nfile2 = file2.resolvePath("AIR Test/bob/test.txt");\n\ntrace(file1.getRelativePath(file2)); // bob/test.txt\n')),(0,a.kt)("p",null,"The second parameter of the ",(0,a.kt)("inlineCode",{parentName:"p"},"getRelativePath()")," method, the ",(0,a.kt)("inlineCode",{parentName:"p"},"useDotDot"),"\nparameter, allows for ",(0,a.kt)("inlineCode",{parentName:"p"},"..")," syntax to be returned in results, to indicate parent\ndirectories:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file1:File = File.documentsDirectory;\nfile1 = file1.resolvePath("AIR Test");\nvar file2:File = File.documentsDirectory;\nfile2 = file2.resolvePath("AIR Test/bob/test.txt");\nvar file3:File = File.documentsDirectory;\nfile3 = file3.resolvePath("AIR Test/susan/test.txt");\n\ntrace(file2.getRelativePath(file1, true)); // ../..\ntrace(file3.getRelativePath(file2, true)); // ../../bob/test.txt\n')),(0,a.kt)("h2",{id:"obtaining-canonical-versions-of-file-names"},"Obtaining canonical versions of file names"),(0,a.kt)("p",null,"File and path names are not case sensitive on Windows and Mac OS. In the\nfollowing, two File objects point to the same file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'File.documentsDirectory.resolvePath("test.txt");\nFile.documentsDirectory.resolvePath("TeSt.TxT");\n')),(0,a.kt)("p",null,"However, documents and directory names do include capitalization. For example,\nthe following assumes that there is a folder named AIR Test in the documents\ndirectory, as in the following examples:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = File.documentsDirectory.resolvePath("AIR test");\ntrace(file.nativePath); // ... AIR test\nfile.canonicalize();\ntrace(file.nativePath); // ... AIR Test\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"canonicalize()")," method converts the ",(0,a.kt)("inlineCode",{parentName:"p"},"nativePath")," object to use the correct\ncapitalization for the file or directory name. On case sensitive file systems\n(such as Linux), when multiple files exists with names differing only in case,\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"canonicalize()")," method adjusts the path to match the first file found (in\nan order determined by the file system)."),(0,a.kt)("p",null,"You can also use the ",(0,a.kt)("inlineCode",{parentName:"p"},"canonicalize()"),' method to convert short file names ("8.3"\nnames) to long file names on Windows, as in the following examples:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var path:File = new File();\npath.nativePath = "C:\\\\AIR~1";\npath.canonicalize();\ntrace(path.nativePath); // C:\\AIR Test\n')),(0,a.kt)("h2",{id:"working-with-packages-and-symbolic-links"},"Working with packages and symbolic links"),(0,a.kt)("p",null,"Various operating systems support package files and symbolic link files:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Packages")," \u2014On Mac OS, directories can be designated as packages and show up\nin the Mac OS Finder as a single file rather than as a directory."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Symbolic links")," \u2014Mac OS, Linux, and Windows Vista support symbolic links.\nSymbolic links allow a file to point to another file or directory on disk.\nAlthough similar, symbolic links are not the same as aliases. An alias is always\nreported as a file (rather than a directory), and reading or writing to an alias\nor shortcut never affects the original file or directory that it points to. On\nthe other hand, a symbolic link behaves exactly like the file or directory it\npoints to. It can be reported as a file or a directory, and reading or writing\nto a symbolic link affects the file or directory that it points to, not the\nsymbolic link itself. Additionally, on Windows the ",(0,a.kt)("inlineCode",{parentName:"p"},"isSymbolicLink")," property for\na File object referencing a junction point (used in the NTFS file system) is set\nto ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("p",null,"The File class includes the ",(0,a.kt)("inlineCode",{parentName:"p"},"isPackage")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"isSymbolicLink")," properties for\nchecking if a File object references a package or symbolic link."),(0,a.kt)("p",null,"The following code iterates through the user's desktop directory, listing\nsubdirectories that are ",(0,a.kt)("em",{parentName:"p"},"not")," packages:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"var desktopNodes:Array = File.desktopDirectory.getDirectoryListing();\nfor (var i:uint = 0; i < desktopNodes.length; i++)\n{\n    if (desktopNodes[i].isDirectory && !desktopNodes[i].isPackage)\n    {\n        trace(desktopNodes[i].name);\n    }\n}\n")),(0,a.kt)("p",null,"The following code iterates through the user's desktop directory, listing files\nand directories that are ",(0,a.kt)("em",{parentName:"p"},"not")," symbolic links:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"var desktopNodes:Array = File.desktopDirectory.getDirectoryListing();\nfor (var i:uint = 0; i < desktopNodes.length; i++)\n{\n    if (!desktopNodes[i].isSymbolicLink)\n    {\n        trace(desktopNodes[i].name);\n    }\n}\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"canonicalize()")," method changes the path of a symbolic link to point to the\nfile or directory to which the link refers. The following code iterates through\nthe user's desktop directory, and reports the paths referenced by files that are\nsymbolic links:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"var desktopNodes:Array = File.desktopDirectory.getDirectoryListing();\nfor (var i:uint = 0; i < desktopNodes.length; i++)\n{\n    if (desktopNodes[i].isSymbolicLink)\n    {\n        var linkNode:File = desktopNodes[i] as File;\n        linkNode.canonicalize();\n        trace(linkNode.nativePath);\n    }\n}\n")),(0,a.kt)("h2",{id:"determining-space-available-on-a-volume"},"Determining space available on a volume"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"spaceAvailable")," property of a File object is the space available for use at\nthe File location, in bytes. For example, the following code checks the space\navailable in the application storage directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"trace(File.applicationStorageDirectory.spaceAvailable);\n")),(0,a.kt)("p",null,"If the File object references a directory, the ",(0,a.kt)("inlineCode",{parentName:"p"},"spaceAvailable")," property\nindicates the space in the directory that files can use. If the File object\nreferences a file, the ",(0,a.kt)("inlineCode",{parentName:"p"},"spaceAvailable")," property indicates the space into which\nthe file could grow. If the file location does not exist, the ",(0,a.kt)("inlineCode",{parentName:"p"},"spaceAvailable"),"\nproperty is set to 0. If the File object references a symbolic link, the\n",(0,a.kt)("inlineCode",{parentName:"p"},"spaceAvailable")," property is set to space available at the location the symbolic\nlink points to."),(0,a.kt)("p",null,"Typically the space available for a directory or file is the same as the space\navailable on the volume containing the directory or file. However, space\navailable can take into account quotas and per-directory limits."),(0,a.kt)("p",null,"Adding a file or directory to a volume generally requires more space than the\nactual size of the file or the size of the contents of the directory. For\nexample, the operating system may require more space to store index information.\nOr the disk sectors required may use additional space. Also, available space\nchanges dynamically. So, you cannot expect to allocate all of the reported space\nfor file storage. For information on writing to the file system, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/"},"Reading and writing files"),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"StorageVolumeInfo.getStorageVolumes()")," method provides more detailed\ninformation on mounted storage volumes (see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-storage-volumes"},"Working with storage volumes"),")."),(0,a.kt)("h2",{id:"opening-files-with-the-default-system-application"},"Opening files with the default system application"),(0,a.kt)("p",null,"In AIR 2, you can open a file using the application registered by the operating\nsystem to open it. For example, an AIR application can open a DOC file with the\napplication registered to open it. Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"openWithDefaultApplication()")," method\nof a File object to open the file. For example, the following code opens a file\nnamed test.doc on the user's desktop and opens it with the default application\nfor DOC files:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = File.deskopDirectory;\nfile = file.resolvePath("test.doc");\nfile.openWithDefaultApplication();\n')),(0,a.kt)("p",null,"Note: On Linux, the file's MIME type, not the filename extension, determines the\ndefault application for a file."),(0,a.kt)("p",null,"The following code lets the user navigate to an mp3 file and open it in the\ndefault application for playing mp3 files:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = File.documentsDirectory;\nvar mp3Filter:FileFilter = new FileFilter("MP3 Files", "*.mp3");\nfile.browseForOpen("Open", [mp3Filter]);\nfile.addEventListener(Event.SELECT, fileSelected);\n\nfunction fileSelected(e:Event):void\n{\n    file.openWithDefaultApplication();\n}\n')),(0,a.kt)("p",null,"You cannot use the ",(0,a.kt)("inlineCode",{parentName:"p"},"openWithDefaultApplication()")," method with files located in\nthe application directory."),(0,a.kt)("p",null,"AIR prevents you from using the ",(0,a.kt)("inlineCode",{parentName:"p"},"openWithDefaultApplication()")," method to open\ncertain files. On Windows, AIR prevents you from opening files that have certain\nfiletypes, such as EXE or BAT. On Mac OS and Linux, AIR prevents you from\nopening files that will launch in certain application. (These include Terminal\nand AppletLauncher on Mac OS; and csh, bash, or ruby on Linux.) Attempting to\nopen one of these files using the ",(0,a.kt)("inlineCode",{parentName:"p"},"openWithDefaultApplication()")," method results\nin an exception. For a complete list of prevented filetypes, see the language\nreference entry for the ",(0,a.kt)("inlineCode",{parentName:"p"},"File.openWithDefaultApplication()")," method."),(0,a.kt)("p",null,"Note: This limitation does not exist for an AIR application installed using a\nnative installer (an extended desktop application)."))}h.isMDXComponent=!0}}]);