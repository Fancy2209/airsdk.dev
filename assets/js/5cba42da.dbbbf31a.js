"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[94760],{3905:(e,n,a)=>{a.d(n,{Zo:()=>l,kt:()=>y});var t=a(67294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=t.createContext({}),d=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},l=function(e){var n=d(e.components);return t.createElement(c.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},h=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=d(a),h=o,y=u["".concat(c,".").concat(h)]||u[h]||p[h]||s;return a?t.createElement(y,r(r({ref:n},l),{},{components:a})):t.createElement(y,r({ref:n},l))}));function y(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=a.length,r=new Array(s);r[0]=h;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[u]="string"==typeof e?e:o,r[1]=i;for(var d=2;d<s;d++)r[d]=a[d];return t.createElement.apply(null,r)}return t.createElement.apply(null,a)}h.displayName="MDXCreateElement"},70305:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var t=a(87462),o=(a(67294),a(3905));const s={sidebar_position:4},r="Using synchronous and asynchronous database operations",i={unversionedId:"development/files-and-data/working-with-local-sql-databases-in-air/using-synchronous-and-asynchronous-database-operations/index",id:"development/files-and-data/working-with-local-sql-databases-in-air/using-synchronous-and-asynchronous-database-operations/index",title:"Using synchronous and asynchronous database operations",description:"Previous sections have described common database operations such as retrieving,",source:"@site/docs/development/files-and-data/working-with-local-sql-databases-in-air/using-synchronous-and-asynchronous-database-operations/index.md",sourceDirName:"development/files-and-data/working-with-local-sql-databases-in-air/using-synchronous-and-asynchronous-database-operations",slug:"/development/files-and-data/working-with-local-sql-databases-in-air/using-synchronous-and-asynchronous-database-operations/",permalink:"/docs/development/files-and-data/working-with-local-sql-databases-in-air/using-synchronous-and-asynchronous-database-operations/",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/files-and-data/working-with-local-sql-databases-in-air/using-synchronous-and-asynchronous-database-operations/index.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"mainSidebar",previous:{title:"Manipulating SQL database data",permalink:"/docs/development/files-and-data/working-with-local-sql-databases-in-air/manipulating-sql-database-data"},next:{title:"Using synchronous database operations",permalink:"/docs/development/files-and-data/working-with-local-sql-databases-in-air/using-synchronous-and-asynchronous-database-operations/using-synchronous-database-operations"}},c={},d=[],l={toc:d},u="wrapper";function p(e){let{components:n,...a}=e;return(0,o.kt)(u,(0,t.Z)({},l,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-synchronous-and-asynchronous-database-operations"},"Using synchronous and asynchronous database operations"),(0,o.kt)("p",null,"Previous sections have described common database operations such as retrieving,\ninserting, updating, and deleting data, as well as creating a database file and\ntables and other objects within a database. The examples have demonstrated how\nto perform these operations both asynchronously and synchronously."),(0,o.kt)("p",null,"As a reminder, in asynchronous execution mode, you instruct the database engine\nto perform an operation. The database engine then works in the background while\nthe application keeps running. When the operation finishes the database engine\ndispatches an event to alert you to that fact. The key benefit of asynchronous\nexecution is that the runtime performs the database operations in the background\nwhile the main application code continues executing. This is especially valuable\nwhen the operation takes a notable amount of time to run."),(0,o.kt)("p",null,"On the other hand, in synchronous execution mode operations don't run in the\nbackground. You tell the database engine to perform an operation. The code\npauses at that point while the database engine does its work. When the operation\ncompletes, execution continues with the next line of your code."),(0,o.kt)("p",null,"A single database connection can't execute some operations or statements\nsynchronously and others asynchronously. You specify whether a\n",(0,o.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/data/SQLConnection.html"},"SQLConnection"),"\noperates in synchronous or asynchronous when you open the connection to the\ndatabase. If you call ",(0,o.kt)("inlineCode",{parentName:"p"},"SQLConnection.open()")," the connection operates in\nsynchronous execution mode, and if you call ",(0,o.kt)("inlineCode",{parentName:"p"},"SQLConnection.openAsync()")," the\nconnection operates in asynchronous execution mode. Once a SQLConnection\ninstance is connected to a database using ",(0,o.kt)("inlineCode",{parentName:"p"},"open()")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"openAsync()"),", it is fixed\nto synchronous or asynchronous execution."),(0,o.kt)("p",null,"More Help topics"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-local-sql-databases-in-air/using-synchronous-and-asynchronous-database-operations/using-synchronous-database-operations"},"Using synchronous database operations")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-local-sql-databases-in-air/using-synchronous-and-asynchronous-database-operations/understanding-the-asynchronous-execution-model"},"Understanding the asynchronous execution model")))}p.isMDXComponent=!0}}]);