"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[57457],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,g=m["".concat(d,".").concat(u)]||m[u]||p[u]||i;return n?r.createElement(g,o(o({ref:t},l),{},{components:n})):r.createElement(g,o({ref:t},l))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c[m]="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},84801:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={sidebar_position:13},o="Delivering content",c={unversionedId:"development/rich-media-content/using-digital-rights-management/delivering-content",id:"development/rich-media-content/using-digital-rights-management/delivering-content",title:"Delivering content",description:"Adobe Access is agnostic to the delivery mechanism of the content as the Flash",source:"@site/docs/development/rich-media-content/using-digital-rights-management/delivering-content.md",sourceDirName:"development/rich-media-content/using-digital-rights-management",slug:"/development/rich-media-content/using-digital-rights-management/delivering-content",permalink:"/docs/development/rich-media-content/using-digital-rights-management/delivering-content",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/rich-media-content/using-digital-rights-management/delivering-content.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"mainSidebar",previous:{title:"License preview",permalink:"/docs/development/rich-media-content/using-digital-rights-management/license-preview"},next:{title:"Open Source Media Framework",permalink:"/docs/development/rich-media-content/using-digital-rights-management/open-source-media-framework"}},d={},s=[],l={toc:s},m="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"delivering-content"},"Delivering content"),(0,a.kt)("p",null,"Adobe Access is agnostic to the delivery mechanism of the content as the Flash\nPlayer abstracts out the networking layer and simply provides the protected\ncontent to the Adobe Access subsystem. Hence, content can be delivered through\nHTTP, HTTP Dynamic Streaming, RTMP, or RTMPE."),(0,a.kt)("p",null,"However, you may get some issues due to the necessity of the protected content's\nmetadata (usually in the form of a '.metadata' file) before Adobe Access can\nacquire a license to decrypt the content. Specifically, with the RTMP/RTMPE\nprotocol, only FLV and F4V data can be delivered to the client through the Flash\nMedia Server (FMS). Because of this, the client must retrieve the metadata blob\nby other ways. One option to solve this problem is to host the metadata on an\nHTTP web server, and implement the client video player to retrieve the\nappropriate metadata, depending on the content being played back."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'private function getMetadata():void {\n\n    extrapolated-path-to-metadata = "http://metadatas.mywebserver.com/" + videoname;\n    var urlRequest : URLRequest = new URLRequest(extrapolated-path-to-the-metadata + ".metadata");\n    var urlStream : URLStream = new URLStream();\n    urlStream.addEventListener(Event.COMPLETE, handleMetadata);\n    urlStream.addEventListener(IOErrorEvent.NETWORK_ERROR, handleIOError);\n    urlStream.addEventListener(IOErrorEvent.IO_ERROR, handleIOError);\n    urlStream.addEventListener(IOErrorEvent.VERIFY_ERROR, handleIOError);\n    try {\n        urlStream.load(urlRequest);\n    } catch(se:SecurityError) {\n        videoLog.text += se.toString() + "\\n";\n    } catch(e:Error) {\n        videoLog.text += e.toString() + "\\n";\n    }\n}\n')))}p.isMDXComponent=!0}}]);