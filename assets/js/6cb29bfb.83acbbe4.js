"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[58731],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var i=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),c=d(n),u=l,f=c["".concat(s,".").concat(u)]||c[u]||h[u]||o;return n?i.createElement(f,r(r({ref:t},p),{},{components:n})):i.createElement(f,r({ref:t},p))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,r=new Array(o);r[0]=u;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[c]="string"==typeof e?e:l,r[1]=a;for(var d=2;d<o;d++)r[d]=n[d];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},80689:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var i=n(87462),l=(n(67294),n(3905));const o={sidebar_position:5},r="Working with files",a={unversionedId:"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-files",id:"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-files",title:"Working with files",description:"Using the AIR file API, you can add basic file interaction capabilities to your",source:"@site/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-files.md",sourceDirName:"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api",slug:"/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-files",permalink:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-files",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-files.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"mainSidebar",previous:{title:"Working with directories",permalink:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-directories"},next:{title:"Working with storage volumes",permalink:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-storage-volumes"}},s={},d=[{value:"Getting file information",id:"getting-file-information",level:2},{value:"Copying and moving files",id:"copying-and-moving-files",level:2},{value:"Deleting a file",id:"deleting-a-file",level:2},{value:"Moving a file to the trash",id:"moving-a-file-to-the-trash",level:2},{value:"Creating a temporary file",id:"creating-a-temporary-file",level:2}],p={toc:d},c="wrapper";function h(e){let{components:t,...n}=e;return(0,l.kt)(c,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"working-with-files"},"Working with files"),(0,l.kt)("p",null,"Using the AIR file API, you can add basic file interaction capabilities to your\napplications. For example, you can read and write files, copy and delete files,\nand so on. Since your applications can access the local file system, refer to\n",(0,l.kt)("a",{parentName:"p",href:"/docs/development/security/air-security/"},"AIR security"),", if you haven't already\ndone so."),(0,l.kt)("p",null,"Note: You can associate a file type with an AIR application (so that\ndouble-clicking it opens the application). For details, see\n",(0,l.kt)("a",{parentName:"p",href:"/docs/development/client-system-interaction/working-with-air-runtime-and-operating-system-information#managing-file-associations"},"Managing file associations"),"."),(0,l.kt)("h2",{id:"getting-file-information"},"Getting file information"),(0,l.kt)("p",null,"The File class includes the following properties that provide information about\na file or directory to which a File object points:"),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,(0,l.kt)("p",null,"File property")),(0,l.kt)("th",null,(0,l.kt)("p",null,"Description")))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"creationDate")),(0,l.kt)("td",null,(0,l.kt)("p",null,"The creation date of the file on the local disk."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"creator")),(0,l.kt)("td",null,(0,l.kt)("p",null,"Obsolete\u2014use the ",(0,l.kt)("samp",null,"extension")," property. (This property reports the Macintosh creator type of the file, which is only used in Mac OS versions prior to Mac OS X.)"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"downloaded")),(0,l.kt)("td",null,(0,l.kt)("p",null,"(AIR 2 and later) Indicates whether the referenced file or directory was downloaded (from the internet) or not. property is only meaningful on operating systems in which files can be flagged as downloaded:"),(0,l.kt)("ul",{class:"incremental"},(0,l.kt)("li",null,(0,l.kt)("p",null,"Windows XP service pack 2 and later, and on Windows Vista")),(0,l.kt)("li",null,(0,l.kt)("p",null,"Mac OS 10.5 and later"))))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"exists")),(0,l.kt)("td",null,(0,l.kt)("p",null,"Whether the referenced file or directory exists."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"extension")),(0,l.kt)("td",null,(0,l.kt)("p",null,'The file extension, which is the part of the name following (and not including) the final dot ("."). If there is no dot in the filename, the extension is ',(0,l.kt)("samp",null,"null"),"."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"icon")),(0,l.kt)("td",null,(0,l.kt)("p",null,"An Icon object containing the icons defined for the file."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"isDirectory")),(0,l.kt)("td",null,(0,l.kt)("p",null,"Whether the File object reference is to a directory."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"modificationDate")),(0,l.kt)("td",null,(0,l.kt)("p",null,"The date that the file or directory on the local disk was last modified."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"name")),(0,l.kt)("td",null,(0,l.kt)("p",null,"The name of the file or directory (including the file extension, if there is one) on the local disk."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"nativePath")),(0,l.kt)("td",null,(0,l.kt)("p",null,"The full path in the host operating system representation. See ",(0,l.kt)("a",{href:"working-with-file-objects-in-air#paths-of-file-objects"},"Paths of File objects"),"."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"parent")),(0,l.kt)("td",null,(0,l.kt)("p",null,"The folder that contains the folder or file represented by the File object. This property is ",(0,l.kt)("samp",null,"null")," if the File object references a file or directory in the root of the file system."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"size")),(0,l.kt)("td",null,(0,l.kt)("p",null,"The size of the file on the local disk in bytes."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"type")),(0,l.kt)("td",null,(0,l.kt)("p",null,"Obsolete\u2014use the ",(0,l.kt)("samp",null,"extension")," property. (On the Macintosh, this property is the four-character file type, which is only used in Mac OS versions prior to Mac OS X.)"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"url")),(0,l.kt)("td",null,(0,l.kt)("p",null,"The URL for the file or directory. See ",(0,l.kt)("a",{href:"working-with-file-objects-in-air#paths-of-file-objects"},"Paths of File objects"),"."))))),(0,l.kt)("p",null,"For details on these properties, see the\n",(0,l.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/filesystem/File.html"},"File"),"\nclass listing in the\n",(0,l.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/index.html"},"ActionScript 3.0 Reference for the Adobe Flash Platform"),"."),(0,l.kt)("h2",{id:"copying-and-moving-files"},"Copying and moving files"),(0,l.kt)("p",null,"The File class includes two methods for copying files or directories: ",(0,l.kt)("inlineCode",{parentName:"p"},"copyTo()"),"\nand ",(0,l.kt)("inlineCode",{parentName:"p"},"copyToAsync()"),". The File class includes two methods for moving files or\ndirectories: ",(0,l.kt)("inlineCode",{parentName:"p"},"moveTo()")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"moveToAsync()"),". The ",(0,l.kt)("inlineCode",{parentName:"p"},"copyTo()")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"moveTo()"),"\nmethods work synchronously, and the ",(0,l.kt)("inlineCode",{parentName:"p"},"copyToAsync()")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"moveToAsync()")," methods\nwork asynchronously (see ",(0,l.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/air-file-basics"},"AIR file basics"),")."),(0,l.kt)("p",null,"To copy or move a file, you set up two File objects. One points to the file to\ncopy or move, and it is the object that calls the copy or move method; the other\npoints to the destination (result) path."),(0,l.kt)("p",null,"The following copies a test.txt file from the AIR Test subdirectory of the\nuser's documents directory to a file named copy.txt in the same directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'var original:File = File.documentsDirectory.resolvePath("AIR Test/test.txt");\nvar newFile:File = File.resolvePath("AIR Test/copy.txt");\noriginal.copyTo(newFile, true);\n')),(0,l.kt)("p",null,"In this example, the value of ",(0,l.kt)("inlineCode",{parentName:"p"},"overwrite")," parameter of the ",(0,l.kt)("inlineCode",{parentName:"p"},"copyTo()")," method\n(the second parameter) is set to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),". By setting ",(0,l.kt)("inlineCode",{parentName:"p"},"overwrite")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", an\nexisting target file is overwritten. This parameter is optional. If you set it\nto ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," (the default value), the operation dispatches an IOErrorEvent event\nif the target file exists (and the file is not copied)."),(0,l.kt)("p",null,'The "Async" versions of the copy and move methods work asynchronously. Use the\n',(0,l.kt)("inlineCode",{parentName:"p"},"addEventListener()")," method to monitor completion of the task or error\nconditions, as in the following code:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'var original = File.documentsDirectory;\noriginal = original.resolvePath("AIR Test/test.txt");\n\nvar destination:File = File.documentsDirectory;\ndestination =  destination.resolvePath("AIR Test 2/copy.txt");\n\noriginal.addEventListener(Event.COMPLETE, fileMoveCompleteHandler);\noriginal.addEventListener(IOErrorEvent.IO_ERROR, fileMoveIOErrorEventHandler);\noriginal.moveToAsync(destination);\n\nfunction fileMoveCompleteHandler(event:Event):void {\n    trace(event.target); // [object File]\n}\nfunction fileMoveIOErrorEventHandler(event:IOErrorEvent):void {\n    trace("I/O Error.");\n}\n')),(0,l.kt)("p",null,"The File class also includes the ",(0,l.kt)("inlineCode",{parentName:"p"},"File.moveToTrash()")," and\n",(0,l.kt)("inlineCode",{parentName:"p"},"File.moveToTrashAsync()")," methods, which move a file or directory to the system\ntrash."),(0,l.kt)("h2",{id:"deleting-a-file"},"Deleting a file"),(0,l.kt)("p",null,"The File class includes a ",(0,l.kt)("inlineCode",{parentName:"p"},"deleteFile()")," method and a ",(0,l.kt)("inlineCode",{parentName:"p"},"deleteFileAsync()"),"\nmethod. These methods delete files, the first working synchronously, the second\nworking asynchronously (see ",(0,l.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/air-file-basics"},"AIR file basics"),")."),(0,l.kt)("p",null,"For example, the following code synchronously deletes the test.txt file in the\nuser's documents directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'var file:File = File.documentsDirectory.resolvePath("test.txt");\nfile.deleteFile();\n')),(0,l.kt)("p",null,"The following code asynchronously deletes the test.txt file of the user's\ndocuments directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'var file:File = File.documentsDirectory.resolvePath("test.txt");\nfile.addEventListener(Event.COMPLETE, completeHandler)\nfile.deleteFileAsync();\n\nfunction completeHandler(event:Event):void {\n    trace("Deleted.")\n}\n')),(0,l.kt)("p",null,"Also included are the ",(0,l.kt)("inlineCode",{parentName:"p"},"moveToTrash()")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"moveToTrashAsync")," methods, which you\ncan use to move a file or directory to the System trash. For details, see\n",(0,l.kt)("a",{parentName:"p",href:"#moving-a-file-to-the-trash"},"Moving a file to the trash"),"."),(0,l.kt)("h2",{id:"moving-a-file-to-the-trash"},"Moving a file to the trash"),(0,l.kt)("p",null,"The File class includes a ",(0,l.kt)("inlineCode",{parentName:"p"},"moveToTrash()")," method and a ",(0,l.kt)("inlineCode",{parentName:"p"},"moveToTrashAsync()"),"\nmethod. These methods send a file or directory to the System trash, the first\nworking synchronously, the second working asynchronously (see\n",(0,l.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/air-file-basics"},"AIR file basics"),")."),(0,l.kt)("p",null,"For example, the following code synchronously moves the test.txt file in the\nuser's documents directory to the System trash:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'var file:File = File.documentsDirectory.resolvePath("test.txt");\nfile.moveToTrash();\n')),(0,l.kt)("p",null,"Note: On operating systems that do not support the concept of a recoverable\ntrash folder, the files are removed immediately."),(0,l.kt)("h2",{id:"creating-a-temporary-file"},"Creating a temporary file"),(0,l.kt)("p",null,"The File class includes a ",(0,l.kt)("inlineCode",{parentName:"p"},"createTempFile()")," method, which creates a file in the\ntemporary directory folder for the System, as in the following example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"var temp:File = File.createTempFile();\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"createTempFile()")," method automatically creates a unique temporary file\n(saving you the work of determining a new unique location)."),(0,l.kt)("p",null,"You can use a temporary file to temporarily store information used in a session\nof the application. Note that there is also a ",(0,l.kt)("inlineCode",{parentName:"p"},"createTempDirectory()")," method,\nfor creating a unique temporary directory in the System temporary directory."),(0,l.kt)("p",null,"You may want to delete the temporary file before closing the application, as it\nis ",(0,l.kt)("em",{parentName:"p"},"not")," automatically deleted on all devices."))}h.isMDXComponent=!0}}]);