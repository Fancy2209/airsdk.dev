"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[38407],{3905:(e,t,i)=>{i.d(t,{Zo:()=>h,kt:()=>c});var n=i(67294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var s=n.createContext({}),d=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},h=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),f=d(i),m=a,c=f["".concat(s,".").concat(m)]||f[m]||p[m]||r;return i?n.createElement(c,o(o({ref:t},h),{},{components:i})):n.createElement(c,o({ref:t},h))}));function c(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[f]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<r;d++)o[d]=i[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}m.displayName="MDXCreateElement"},9273:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var n=i(87462),a=(i(67294),i(3905));const r={sidebar_position:1},o="Workflow for reading and writing files",l={unversionedId:"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/workflow-for-reading-and-writing-files",id:"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/workflow-for-reading-and-writing-files",title:"Workflow for reading and writing files",description:"The workflow for reading and writing files is as follows.",source:"@site/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/workflow-for-reading-and-writing-files.md",sourceDirName:"development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files",slug:"/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/workflow-for-reading-and-writing-files",permalink:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/workflow-for-reading-and-writing-files",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/workflow-for-reading-and-writing-files.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"mainSidebar",previous:{title:"Reading and writing files",permalink:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/"},next:{title:"Working with FileStream objects",permalink:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/"}},s={},d=[{value:"Initialize a File object that points to the path.",id:"initialize-a-file-object-that-points-to-the-path",level:4},{value:"Initialize a FileStream object.",id:"initialize-a-filestream-object",level:4},{value:"Call the open() method or the openAsync() method of the FileStream object.",id:"call-the-open-method-or-the-openasync-method-of-the-filestream-object",level:4},{value:"If you opened the file asynchronously (using the openAsync() method), add and set up event listeners for the FileStream object.",id:"if-you-opened-the-file-asynchronously-using-the-openasync-method-add-and-set-up-event-listeners-for-the-filestream-object",level:4},{value:"Include code for reading and writing data, as needed.",id:"include-code-for-reading-and-writing-data-as-needed",level:4},{value:"Call the close() method of the FileStream object when you are done working with the file.",id:"call-the-close-method-of-the-filestream-object-when-you-are-done-working-with-the-file",level:4}],h={toc:d},f="wrapper";function p(e){let{components:t,...i}=e;return(0,a.kt)(f,(0,n.Z)({},h,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"workflow-for-reading-and-writing-files"},"Workflow for reading and writing files"),(0,a.kt)("p",null,"The workflow for reading and writing files is as follows."),(0,a.kt)("h4",{id:"initialize-a-file-object-that-points-to-the-path"},"Initialize a File object that points to the path."),(0,a.kt)("p",null,"The File object represents the path of the file that you want to work with (or a\nfile that you will later create)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var file:File = File.documentsDirectory;\nfile = file.resolvePath("AIR Test/testFile.txt");\n')),(0,a.kt)("p",null,"This example uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"File.documentsDirectory")," property and the ",(0,a.kt)("inlineCode",{parentName:"p"},"resolvePath()"),"\nmethod of a File object to initialize the File object. However, there are many\nother ways to point a File object to a file. For more information, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-file-objects-in-air#pointing-a-file-object-to-a-file"},"Pointing a File object to a file"),"."),(0,a.kt)("h4",{id:"initialize-a-filestream-object"},"Initialize a FileStream object."),(0,a.kt)("h4",{id:"call-the-open-method-or-the-openasync-method-of-the-filestream-object"},"Call the open() method or the openAsync() method of the FileStream object."),(0,a.kt)("p",null,"The method you call depends on whether you want to open the file for synchronous\nor asynchronous operations. Use the File object as the ",(0,a.kt)("inlineCode",{parentName:"p"},"file")," parameter of the\nopen method. For the ",(0,a.kt)("inlineCode",{parentName:"p"},"fileMode")," parameter, specify a constant from the FileMode\nclass that specifies the way in which you will use the file."),(0,a.kt)("p",null,"For example, the following code initializes a FileStream object that is used to\ncreate a file and overwrite any existing data:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"var fileStream:FileStream = new FileStream();\nfileStream.open(file, FileMode.WRITE);\n")),(0,a.kt)("p",null,"For more information, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/initializing-a-filestream-object-and-opening-and-closing-files"},"Initializing a FileStream object, and opening and closing files"),"\nand ",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/filestream-open-modes"},"FileStream open modes"),"."),(0,a.kt)("h4",{id:"if-you-opened-the-file-asynchronously-using-the-openasync-method-add-and-set-up-event-listeners-for-the-filestream-object"},"If you opened the file asynchronously (using the openAsync() method), add and set up event listeners for the FileStream object."),(0,a.kt)("p",null,"These event listener methods respond to events dispatched by the FileStream\nobject in various situations. These situations include when data is read in from\nthe file, when I/O errors are encountered, or when the complete amount of data\nto be written has been written."),(0,a.kt)("p",null,"For details, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/asynchronous-programming-and-the%20events-generated-by-a-filestream-object-opened-asynchronously"},"Asynchronous programming and the events generated by a FileStream object opened asynchronously"),"."),(0,a.kt)("h4",{id:"include-code-for-reading-and-writing-data-as-needed"},"Include code for reading and writing data, as needed."),(0,a.kt)("p",null,'There are many methods of the FileStream class related to reading and writing.\n(They each begin with "read" or "write".) The method you choose to use to read\nor write data depends on the format of the data in the target file.'),(0,a.kt)("p",null,"For example, if the data in the target file is UTF-encoded text, you may use the\n",(0,a.kt)("inlineCode",{parentName:"p"},"readUTFBytes()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"writeUTFBytes()")," methods. If you want to deal with the\ndata as byte arrays, you may use the ",(0,a.kt)("inlineCode",{parentName:"p"},"readByte()"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"readBytes()"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"writeByte()"),",\nand ",(0,a.kt)("inlineCode",{parentName:"p"},"writeBytes()")," methods. For details, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/data-formats-and-choosing-the-read-and-write-methods-to-use"},"Data formats, and choosing the read and write methods to use"),"."),(0,a.kt)("p",null,"If you opened the file asynchronously, then be sure that enough data is\navailable before calling a read method. For details, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/the-read-buffer-and-the-bytesavailable-property-of-a-filestream-object"},"The read buffer and the bytesAvailable property of a FileStream object"),"."),(0,a.kt)("p",null,"Before writing to a file, if you want to check the amount of disk space\navailable, you can check the spaceAvailable property of the File object. For\nmore information, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/working-with-file-objects-in-air#determining-space-available-on-a-volume"},"Determining space available on a volume"),"."),(0,a.kt)("h4",{id:"call-the-close-method-of-the-filestream-object-when-you-are-done-working-with-the-file"},"Call the close() method of the FileStream object when you are done working with the file."),(0,a.kt)("p",null,"Calling the close() method makes the file available to other applications."),(0,a.kt)("p",null,"For details, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/files-and-data/working-with-the-file-system/using-the-air-file-system-api/reading-and-writing-files/working-with-filestream-objects/initializing-a-filestream-object-and-opening-and-closing-files"},"Initializing a FileStream object, and opening and closing files"),"."),(0,a.kt)("p",null,"To see a sample application that uses the FileStream class to read and write\nfiles, see the following articles at the Adobe AIR Developer Center:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://web.archive.org/web/20090130011935/http://www.adobe.com/devnet/air/flash/quickstart/building_text_editor.html"},"Building a text-file editor"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://web.archive.org/web/20100817082125/http://www.adobe.com/devnet/air/flex/quickstart/building_text_editor.html"},"Building a text-file editor"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://web.archive.org/web/20170319130306/http://www.adobe.com/devnet/air/flex/quickstart/articles/xml_prefs.html"},"Reading and writing from an XML preferences file")))))}p.isMDXComponent=!0}}]);