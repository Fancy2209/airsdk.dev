"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[44244],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>y});var o=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=o.createContext({}),s=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return o.createElement(l.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(t),u=i,y=m["".concat(l,".").concat(u)]||m[u]||d[u]||r;return t?o.createElement(y,a(a({ref:n},p),{},{components:t})):o.createElement(y,a({ref:n},p))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=u;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[m]="string"==typeof e?e:i,a[1]=c;for(var s=2;s<r;s++)a[s]=t[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},18801:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var o=t(87462),i=(t(67294),t(3905));const r={sidebar_position:13},a="Setting LocalConnection permissions",c={unversionedId:"development/security/setting-localconnection-permissions",id:"development/security/setting-localconnection-permissions",title:"Setting LocalConnection permissions",description:"The LocalConnection class lets you send messages between one Flash Player or AIR",source:"@site/docs/development/security/setting-localconnection-permissions.md",sourceDirName:"development/security",slug:"/development/security/setting-localconnection-permissions",permalink:"/docs/development/security/setting-localconnection-permissions",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/security/setting-localconnection-permissions.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"mainSidebar",previous:{title:"Working with legacy content",permalink:"/docs/development/security/working-with-legacy-content"},next:{title:"Controlling outbound URL access",permalink:"/docs/development/security/controlling-outbound-url-access"}},l={},s=[],p={toc:s},m="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(m,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"setting-localconnection-permissions"},"Setting LocalConnection permissions"),(0,i.kt)("p",null,"The LocalConnection class lets you send messages between one Flash Player or AIR\napplication and another. LocalConnection objects can communicate only among\nFlash Player or AIR content running on the same client computer, but they can be\nrunning in different applications\u2014for example, a SWF file running in a browser,\na SWF file running in a projector, and an AIR application can all communicate\nuse the LocalConnection class."),(0,i.kt)("p",null,"For every LocalConnection communication, there is a sender and a listener. By\ndefault, Flash Player allows LocalConnection communication between code running\nin the same domain. For code running in different sandboxes, the listener must\nallow the sender permission by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"LocalConnection.allowDomain()")," method.\nThe string you pass as an argument to the ",(0,i.kt)("inlineCode",{parentName:"p"},"LocalConnection.allowDomain()")," method\ncan contain any of the following: exact domain names, IP addresses, and the ",(0,i.kt)("inlineCode",{parentName:"p"},"*"),"\nwildcard."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"allowDomain()")," method has changed from the form it had in ActionScript 1.0\nand 2.0. In those earlier versions, ",(0,i.kt)("inlineCode",{parentName:"p"},"allowDomain()")," was a callback method that\nyou implemented. In ActionScript 3.0, ",(0,i.kt)("inlineCode",{parentName:"p"},"allowDomain()")," is a built-in method of\nthe LocalConnection class that you call. With this change, ",(0,i.kt)("inlineCode",{parentName:"p"},"allowDomain()")," works\nin much the same way as ",(0,i.kt)("inlineCode",{parentName:"p"},"Security.allowDomain()"),"."),(0,i.kt)("p",null,"A SWF file can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"domain")," property of the LocalConnection class to\ndetermine its domain."))}d.isMDXComponent=!0}}]);