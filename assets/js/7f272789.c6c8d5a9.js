"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[63056],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),l=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(d.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(n),h=i,f=p["".concat(d,".").concat(h)]||p[h]||m[h]||o;return n?a.createElement(f,r(r({ref:t},c),{},{components:n})):a.createElement(f,r({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=h;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[p]="string"==typeof e?e:i,r[1]=s;for(var l=2;l<o;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},45926:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(87462),i=(n(67294),n(3905));const o={sidebar_position:1},r="Basics of video",s={unversionedId:"development/rich-media-content/working-with-video/basics-of-video",id:"development/rich-media-content/working-with-video/basics-of-video",title:"Basics of video",description:"One important capability of Adobe\xae Flash\xae Player and Adobe\xae AIR\u2122 is the ability",source:"@site/docs/development/rich-media-content/working-with-video/basics-of-video.md",sourceDirName:"development/rich-media-content/working-with-video",slug:"/development/rich-media-content/working-with-video/basics-of-video",permalink:"/docs/development/rich-media-content/working-with-video/basics-of-video",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/rich-media-content/working-with-video/basics-of-video.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"mainSidebar",previous:{title:"Working with video",permalink:"/docs/development/rich-media-content/working-with-video/"},next:{title:"Understanding video formats",permalink:"/docs/development/rich-media-content/working-with-video/understanding-video-formats"}},d={},l=[{value:"Important concepts and terms",id:"important-concepts-and-terms",level:4}],c={toc:l},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"basics-of-video"},"Basics of video"),(0,i.kt)("p",null,"One important capability of Adobe\xae Flash\xae Player and Adobe\xae AIR\u2122 is the ability\nto display and manipulate video information with ActionScript in the same way\nthat you can manipulate other visual content such as images, animation, text,\nand so on. When you create a Flash Video (FLV) file in Adobe Flash CS4\nProfessional, you have the option to select a skin that includes common playback\ncontrols. However, there is no reason you need to limit yourself to the options\navailable. Using ActionScript, you have fine-tuned control over loading,\ndisplaying, and playback of video\u2014meaning you could create your own video player\nskin, or use your video in any less traditional way that you want. Working with\nvideo in ActionScript involves working with a combination of several classes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/media/Video.html"},"Video class"),":\nThe classic video content box on the Stage is an instance of the Video class.\nThe Video class is a display object, so it can be manipulated using the same\ntechniques that can be applied to other display objects, such as positioning,\napplying transformations, applying filters and blending modes, and so forth.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"http://help.stage.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/media/StageVideo.html"},"StageVideo class"),":\nThe Video class typically uses software decoding and rendering. When GPU\nhardware acceleration is available on a device, your application can take best\nadvantage of hardware accelerated presentation by switching to the StageVideo\nclass. The StageVideo API includes a set of events that tell your code when to\nswitch between StageVideo and Video objects. Stage video imposes some minor\nrestrictions on video playback. If your application accepts those limitations,\nimplement the StageVideo API. See\n",(0,i.kt)("a",{parentName:"p",href:"/docs/development/rich-media-content/working-with-video/about-hardware-acceleration-using-stagevideo#guidelines-and-limitations"},"Guidelines and limitations"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/net/NetStream.html"},"NetStream class"),":\nWhen you're loading a video file to be controlled by ActionScript, a NetStream\ninstance represents the source of the video content\u2014in this case, a stream of\nvideo data. Using a NetStream instance also involves using a NetConnection\nobject, which is the connection to the video file\u2014like the tunnel that the\nvideo data is fed through.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/media/Camera.html"},"Camera class"),":\nWhen you're working with video data from a camera connected to the user's\ncomputer, a Camera instance represents the source of the video content\u2014the\nuser's camera and the video data it makes available. New in Flash Player 11.4\nand AIR 3.4, you can use a camera to feed StageVideo."))),(0,i.kt)("p",null,"When you're loading external video, you can load the file from a standard web\nserver for progressive download, or you can work with streaming video delivered\nby a specialized server such as Adobe's Flash\xae Media Server."),(0,i.kt)("h4",{id:"important-concepts-and-terms"},"Important concepts and terms"),(0,i.kt)("p",null,"Cue point",(0,i.kt)("br",{parentName:"p"}),"\n","A marker that can be placed at a specific moment in time in a video file, for\nexample to act like a bookmark for locating that point in time, or to provide\nadditional data that is associated with that moment in time."),(0,i.kt)("p",null,"Encoding",(0,i.kt)("br",{parentName:"p"}),"\n","The process of taking video data in one format and converting it to another\nvideo data format; for example, taking a high-resolution source video and\nconverting it to a format that's suitable for Internet delivery."),(0,i.kt)("p",null,"Frame",(0,i.kt)("br",{parentName:"p"}),"\n","A single segment of video information; each frame is like a still image\nrepresenting a snapshot of a moment in time. By playing frames in sequence at\nhigh speed, the illusion of motion is created."),(0,i.kt)("p",null,"Keyframe",(0,i.kt)("br",{parentName:"p"}),"\n","A video frame which contains the full information for the frame. Other frames\nthat follow a keyframe only contain information about how they differ from the\nkeyframe, rather than containing the full frame's worth of information."),(0,i.kt)("p",null,"Metadata",(0,i.kt)("br",{parentName:"p"}),"\n","Information about a video file that is embedded within the video file and\nretrieved when the video has loaded."),(0,i.kt)("p",null,"Progressive download",(0,i.kt)("br",{parentName:"p"}),"\n","When a video file is delivered from a standard web server, the video data is\nloaded using progressive download, meaning the video information loads in\nsequence. This has the benefit that the video can begin playing before the\nentire file is downloaded; however, it prevents you from jumping ahead to a part\nof the video that hasn't loaded."),(0,i.kt)("p",null,"Streaming",(0,i.kt)("br",{parentName:"p"}),"\n",'As an alternative to progressive download, a special video server can be used to\ndeliver video over the Internet using a technique known as streaming (sometimes\ncalled "true streaming"). With streaming, the viewer\'s computer never downloads\nthe entire video at one time. To speed up download times, at any moment the\ncomputer only needs a portion of the total video information. Because a special\nserver controls the delivery of the video content, any part of the video can be\naccessed at any time, rather than needing to wait for it to download before\naccessing it.'))}m.isMDXComponent=!0}}]);