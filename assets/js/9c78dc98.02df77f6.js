"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[53820],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),f=r,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},96012:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:1},i="Basics of copy-and-paste",s={unversionedId:"development/user-interaction/copy-and-paste/basics-of-copy-and-paste",id:"development/user-interaction/copy-and-paste/basics-of-copy-and-paste",title:"Basics of copy-and-paste",description:"The copy-and-paste API contains the following classes.",source:"@site/docs/development/user-interaction/copy-and-paste/basics-of-copy-and-paste.md",sourceDirName:"development/user-interaction/copy-and-paste",slug:"/development/user-interaction/copy-and-paste/basics-of-copy-and-paste",permalink:"/docs/development/user-interaction/copy-and-paste/basics-of-copy-and-paste",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/user-interaction/copy-and-paste/basics-of-copy-and-paste.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"mainSidebar",previous:{title:"Copy and paste",permalink:"/docs/development/user-interaction/copy-and-paste/"},next:{title:"Reading from and writing to the system clipboard",permalink:"/docs/development/user-interaction/copy-and-paste/reading-from-and-writing-to-the-system-clipboard"}},l={},p=[],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"basics-of-copy-and-paste"},"Basics of copy-and-paste"),(0,r.kt)("p",null,"The copy-and-paste API contains the following classes."),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,(0,r.kt)("p",null,"Package")),(0,r.kt)("th",null,(0,r.kt)("p",null,"Classes")))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,"flash.desktop")),(0,r.kt)("td",null,(0,r.kt)("div",null,(0,r.kt)("ul",{class:"incremental"},(0,r.kt)("li",null,(0,r.kt)("p",null,(0,r.kt)("a",{href:"https://airsdk.dev/reference/actionscript/3.0/flash/desktop/Clipboard.html"},"Clipboard"))),(0,r.kt)("li",null,(0,r.kt)("p",null,(0,r.kt)("a",{href:"https://airsdk.dev/reference/actionscript/3.0/flash/desktop/ClipboardFormats.html"},"ClipboardFormats"))),(0,r.kt)("li",null,(0,r.kt)("p",null,(0,r.kt)("a",{href:"https://airsdk.dev/reference/actionscript/3.0/flash/desktop/ClipboardTransferMode.html"},"ClipboardTransferMode"))))))))),(0,r.kt)("p",null,"The static ",(0,r.kt)("inlineCode",{parentName:"p"},"Clipboard.generalClipboard")," property represents the operating system\nclipboard. The Clipboard class provides methods for reading and writing data to\nclipboard objects."),(0,r.kt)("p",null,"The HTMLLoader class (in AIR) and the TextField class implement default behavior\nfor the normal copy and paste keyboard shortcuts. To implement copy and paste\nshortcut behavior for custom components, you can listen for these keystrokes\ndirectly. You can also use native menu commands along with key equivalents to\nrespond to the keystrokes indirectly."),(0,r.kt)("p",null,"Different representations of the same information can be made available in a\nsingle Clipboard object to increase the ability of other applications to\nunderstand and use the data. For example, an image might be included as image\ndata, a serialized Bitmap object, and as a file. Rendering of the data in a\nformat can be deferred so that the format is not actually created until the data\nin that format is read."))}u.isMDXComponent=!0}}]);