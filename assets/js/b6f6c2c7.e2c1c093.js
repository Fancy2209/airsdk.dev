"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[43388],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>u});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=r.createContext({}),p=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=p(t.components);return r.createElement(s.Provider,{value:e},t.children)},d="mdxType",h={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,s=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),d=p(n),m=a,u=d["".concat(s,".").concat(m)]||d[m]||h[m]||i;return n?r.createElement(u,o(o({ref:e},c),{},{components:n})):r.createElement(u,o({ref:e},c))}));function u(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[d]="string"==typeof t?t:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},40257:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={},o="Accessing the HTML history list",l={unversionedId:"development/html-content-in-air/scripting-the-air-html-container/accessing-the-html-history-list",id:"development/html-content-in-air/scripting-the-air-html-container/accessing-the-html-history-list",title:"Accessing the HTML history list",description:"As new pages are loaded in an HTMLLoader object, the runtime maintains a history",source:"@site/docs/development/html-content-in-air/scripting-the-air-html-container/accessing-the-html-history-list.md",sourceDirName:"development/html-content-in-air/scripting-the-air-html-container",slug:"/development/html-content-in-air/scripting-the-air-html-container/accessing-the-html-history-list",permalink:"/docs/development/html-content-in-air/scripting-the-air-html-container/accessing-the-html-history-list",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/html-content-in-air/scripting-the-air-html-container/accessing-the-html-history-list.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Scripting the AIR HTML Container",permalink:"/docs/development/html-content-in-air/scripting-the-air-html-container/"},next:{title:"Creating subclasses of the HTMLLoader class",permalink:"/docs/development/html-content-in-air/scripting-the-air-html-container/creating-subclasses-of-the-htmlloader-class"}},s={},p=[],c={toc:p},d="wrapper";function h(t){let{components:e,...n}=t;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"accessing-the-html-history-list"},"Accessing the HTML history list"),(0,a.kt)("p",null,"As new pages are loaded in an HTMLLoader object, the runtime maintains a history\nlist for the object. The history list corresponds to the ",(0,a.kt)("inlineCode",{parentName:"p"},"window.history")," object\nin the HTML page. The HTMLLoader class includes the following properties and\nmethods that let you work with the HTML history list:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Class member"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"historyLength")),(0,a.kt)("td",{parentName:"tr",align:null},"The overall length of the history list, including back and forward entries.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"historyPosition")),(0,a.kt)("td",{parentName:"tr",align:null},'The current position in the history list. History items before this position represent "back" navigation, and items after this position represent "forward" navigation.')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"getHistoryAt()")),(0,a.kt)("td",{parentName:"tr",align:null},"Returns the URLRequest object corresponding to the history entry at the specified position in the history list.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"historyBack()")),(0,a.kt)("td",{parentName:"tr",align:null},"Navigates back in the history list, if possible.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"historyForward()")),(0,a.kt)("td",{parentName:"tr",align:null},"Navigates forward in the history list, if possible.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"historyGo()")),(0,a.kt)("td",{parentName:"tr",align:null},"Navigates the indicated number of steps in the browser history. Navigates forward if positive, backward if negative. Navigating to zero reloads the page. Specifying a position beyond the end navigates to the end of the list.")))),(0,a.kt)("p",null,"Items in the history list are stored as objects of type\n",(0,a.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/html/HTMLHistoryItem.html"},"HTMLHistoryItem"),".\nThe HTMLHistoryItem class has the following properties:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"isPost")),(0,a.kt)("td",{parentName:"tr",align:null},"Set to ",(0,a.kt)("inlineCode",{parentName:"td"},"true")," if the HTML page includes POST data.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"originalUrl")),(0,a.kt)("td",{parentName:"tr",align:null},"The original URL of the HTML page, before any redirects.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"title")),(0,a.kt)("td",{parentName:"tr",align:null},"The title of the HTML page.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"url")),(0,a.kt)("td",{parentName:"tr",align:null},"The URL of the HTML page.")))))}h.isMDXComponent=!0}}]);