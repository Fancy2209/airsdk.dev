"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[57013],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=r,m=u["".concat(l,".").concat(h)]||u[h]||p[h]||i;return n?a.createElement(m,o(o({ref:t},d),{},{components:n})):a.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},56208:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_position:4},o="Using the DRMAuthenticateEvent class",s={unversionedId:"development/rich-media-content/using-digital-rights-management/using-the-drmauthenticateevent-class",id:"development/rich-media-content/using-digital-rights-management/using-the-drmauthenticateevent-class",title:"Using the DRMAuthenticateEvent class",description:"The DRMAuthenticateEvent object is dispatched when a NetStream object tries to",source:"@site/docs/development/rich-media-content/using-digital-rights-management/using-the-drmauthenticateevent-class.md",sourceDirName:"development/rich-media-content/using-digital-rights-management",slug:"/development/rich-media-content/using-digital-rights-management/using-the-drmauthenticateevent-class",permalink:"/docs/development/rich-media-content/using-digital-rights-management/using-the-drmauthenticateevent-class",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/rich-media-content/using-digital-rights-management/using-the-drmauthenticateevent-class.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"mainSidebar",previous:{title:"Using the DRMStatusEvent class",permalink:"/docs/development/rich-media-content/using-digital-rights-management/using-the-drmstatusevent-class"},next:{title:"Using the DRMErrorEvent class",permalink:"/docs/development/rich-media-content/using-digital-rights-management/using-the-drmerrorevent-class"}},l={},c=[{value:"DRMAuthenticateEvent properties",id:"drmauthenticateevent-properties",level:2},{value:"Creating a DRMAuthenticateEvent handler",id:"creating-a-drmauthenticateevent-handler",level:2},{value:"Creating an interface for retrieving user credentials",id:"creating-an-interface-for-retrieving-user-credentials",level:2}],d={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-the-drmauthenticateevent-class"},"Using the DRMAuthenticateEvent class"),(0,r.kt)("p",null,"The DRMAuthenticateEvent object is dispatched when a NetStream object tries to\nplay protected content that requires a user credential for authentication before\nplayback."),(0,r.kt)("p",null,"The DRMAuthenticateEvent handler is responsible for gathering the required\ncredentials (user name, password, and type) and passing the values to the\n",(0,r.kt)("inlineCode",{parentName:"p"},"NetStream.setDRMAuthenticationCredentials()")," method for validation. Each AIR\napplication must provide some mechanism for obtaining user credentials. For\nexample, the application could provide a user with a simple user interface to\nenter the user name and password values. Also, provide a mechanism for handling\nand limiting repeated authentication attempts."),(0,r.kt)("h2",{id:"drmauthenticateevent-properties"},"DRMAuthenticateEvent properties"),(0,r.kt)("p",null,"The DRMAuthenticateEvent class includes the following properties:"),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,(0,r.kt)("p",null,"Property")),(0,r.kt)("th",null,(0,r.kt)("p",null,"Description")))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,"authenticationType")),(0,r.kt)("td",null,(0,r.kt)("p",null,'Indicates whether the supplied credentials are for authenticating against Adobe Access ("drm") or a proxy server ("proxy"). For example, the "proxy" option allows the application to authenticate against a proxy server if necessary before the user can access the Internet. Unless anonymous authentication is used, after the proxy authentication, the user must still authenticate against Adobe Access to obtain the voucher and play the content. You can use setDRMAuthenticationcredentials() a second time, with "drm" option, to authenticate against Adobe Access.'))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,"header")),(0,r.kt)("td",null,(0,r.kt)("p",null,"The encrypted content file header provided by the server. It contains information about the context of the encrypted content."),(0,r.kt)("p",null,'This header string can be passed on to the Flash application to enable the application to construct a user name-password dialog box. The header string can be used as the dialog box\'s instructions. For example, the header can be "Please type in your user name and password".'))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,"netstream")),(0,r.kt)("td",null,(0,r.kt)("p",null,"The NetStream object that initiated this event."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,"passwordPrompt")),(0,r.kt)("td",null,(0,r.kt)("p",null,"A prompt for a password credential, provided by the server. The string can include instruction for the type of password required."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,"urlPrompt")),(0,r.kt)("td",null,(0,r.kt)("p",null,"A prompt for a URL string, provided by the server. The string can provide the location where the user name and password are sent."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,"usernamePrompt")),(0,r.kt)("td",null,(0,r.kt)("p",null,"A prompt for a user name credential, provided by the server. The string can include instruction for the type of user name required. For example, a content provider can require an e-mail address as the user name."))))),(0,r.kt)("p",null,"The previously mentioned strings are supplied by the FMRMS server only. Adobe\nAccess Server does not use these strings."),(0,r.kt)("h2",{id:"creating-a-drmauthenticateevent-handler"},"Creating a DRMAuthenticateEvent handler"),(0,r.kt)("p",null,"The following example creates an event handler that passes a set of hard-coded\nauthentication credentials to the NetStream object that originated the event.\n(The code for playing the video and making sure that a successful connection to\nthe video stream has been made is not included here.)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'var connection:NetConnection = new NetConnection();\nconnection.connect(null);\n\nvar videoStream:NetStream = new NetStream(connection);\n\nvideoStream.addEventListener(DRMAuthenticateEvent.DRM_AUTHENTICATE,\n                        drmAuthenticateEventHandler)\n\nprivate function drmAuthenticateEventHandler(event:DRMAuthenticateEvent):void\n{\n    videoStream.setDRMAuthenticationCredentials("administrator", "password", "drm");\n}\n')),(0,r.kt)("h2",{id:"creating-an-interface-for-retrieving-user-credentials"},"Creating an interface for retrieving user credentials"),(0,r.kt)("p",null,"In the case where protected content requires user authentication, the AIR\napplication must usually retrieve the user's authentication credentials via a\nuser interface."),(0,r.kt)("p",null,"The following is a Flex example of a simple user interface for retrieving user\ncredentials. It consists of a panel object containing two TextInput objects, one\nfor each of the user name and password credentials. The panel also contains a\nbutton that launches the ",(0,r.kt)("inlineCode",{parentName:"p"},"credentials()")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'<mx:Panel x="236.5" y="113" width="325" height="204" layout="absolute" title="Login">\n<mx:TextInput x="110" y="46" id="uName"/>\n<mx:TextInput x="110" y="76" id="pWord" displayAsPassword="true"/>\n<mx:Text x="35" y="48" text="Username:"/>\n<mx:Text x="35" y="78" text="Password:"/>\n<mx:Button x="120" y="115" label="Login" click="credentials()"/>\n</mx:Panel>\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"credentials()")," method is a user-defined method that passes the user name\nand password values to the ",(0,r.kt)("inlineCode",{parentName:"p"},"setDRMAuthenticationCredentials()")," method. Once the\nvalues are passed, the ",(0,r.kt)("inlineCode",{parentName:"p"},"credentials()")," method resets the values of the TextInput\nobjects."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'<mx:Script>\n<![CDATA[\n    public function credentials():void\n    {\n        videoStream.setDRMAuthenticationCredentials(uName, pWord, "drm");\n        uName.text = "";\n        pWord.text = "";\n    }\n]]>\n</mx:Script>\n')),(0,r.kt)("p",null,"One way to implement this type of simple interface is to include the panel as\npart of a new state. The new state originates from the base state when the\nDRMAuthenticateEvent object is thrown. The following example contains a\nVideoDisplay object with a source attribute that points to a protected FLV file.\nIn this case, the ",(0,r.kt)("inlineCode",{parentName:"p"},"credentials()")," method is modified so that it also returns the\napplication to the base state. This method does so after passing the user\ncredentials and resetting the TextInput object values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'<?xml version="1.0" encoding="utf-8"?>\n<mx:WindowedApplication xmlns:mx="https://www.adobe.com/2006/mxml"\n    layout="absolute"\n    width="800"\n    height="500"\n    title="DRM FLV Player"\n    creationComplete="initApp()">\n\n<mx:states>\n    <mx:State name="LOGIN">\n        <mx:AddChild position="lastChild">\n                <mx:Panel x="236.5" y="113" width="325" height="204" layout="absolute"\n                        title="Login">\n                <mx:TextInput x="110" y="46" id="uName"/>\n                <mx:TextInput x="110" y="76" id="pWord" displayAsPassword="true"/>\n                <mx:Text x="35" y="48" text="Username:"/>\n                <mx:Text x="35" y="78" text="Password:"/>\n                <mx:Button x="120" y="115" label="Login" click="credentials()"/>\n                <mx:Button x="193" y="115" label="Reset" click="uName.text=\'\';\n                        pWord.text=\'\';"/>\n            </mx:Panel>\n        </mx:AddChild>\n    </mx:State>\n</mx:states>\n\n<mx:Script>\n    <![CDATA[\n            import flash.events.DRMAuthenticateEvent;\n        private function initApp():void\n        {\n            videoStream.addEventListener(DRMAuthenticateEvent.DRM_AUTHENTICATE,\n                                    drmAuthenticateEventHandler);\n        }\n\n        public function credentials():void\n        {\n            videoStream.setDRMAuthenticationCredentials(uName, pWord, "drm");\n            uName.text = "";\n            pWord.text = "";\n            currentState=\'\';\n        }\n\n        private function drmAuthenticateEventHandler(event:DRMAuthenticateEvent):void\n        {\n            currentState=\'LOGIN\';\n        }\n    ]]>\n</mx:Script>\n\n<mx:VideoDisplay id="video" x="50" y="25" width="700" height="350"\n    autoPlay="true"\n    bufferTime="10.0"\n    source="http://www.example.com/flv/Video.flv" />\n</mx:WindowedApplication>\n')))}p.isMDXComponent=!0}}]);