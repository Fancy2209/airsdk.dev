"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[72594],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),l=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=l(n),h=r,u=c["".concat(s,".").concat(h)]||c[h]||m[h]||a;return n?i.createElement(u,o(o({ref:t},d),{},{components:n})):i.createElement(u,o({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=h;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[c]="string"==typeof e?e:r,o[1]=p;for(var l=2;l<a;l++)o[l]=n[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},69633:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var i=n(87462),r=(n(67294),n(3905));const a={sidebar_position:5},o="Advanced printing techniques",p={unversionedId:"development/client-system-interaction/printing/advanced-printing-techniques",id:"development/client-system-interaction/printing/advanced-printing-techniques",title:"Advanced printing techniques",description:"Starting with Adobe AIR 2, the PrintJob class has additional properties and",source:"@site/docs/development/client-system-interaction/printing/advanced-printing-techniques.md",sourceDirName:"development/client-system-interaction/printing",slug:"/development/client-system-interaction/printing/advanced-printing-techniques",permalink:"/docs/development/client-system-interaction/printing/advanced-printing-techniques",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/client-system-interaction/printing/advanced-printing-techniques.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"mainSidebar",previous:{title:"Setting size, scale, and orientation",permalink:"/docs/development/client-system-interaction/printing/setting-size-scale-and-orientation"},next:{title:"Printing example: Multiple-page printing",permalink:"/docs/development/client-system-interaction/printing/printing-example-multiple-page-printing"}},s={},l=[{value:"Print workflow changes",id:"print-workflow-changes",level:2},{value:"Page setup dialog",id:"page-setup-dialog",level:2},{value:"Changing print settings",id:"changing-print-settings",level:2}],d={toc:l},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"advanced-printing-techniques"},"Advanced printing techniques"),(0,r.kt)("p",null,"Starting with Adobe AIR 2, the PrintJob class has additional properties and\nmethods, and three additional classes are supported: PrintUIOptions, PaperSize,\nand PrintMethod. These changes allow additional printer workflows and give\nauthors greater control over the printing process. Changes include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Page setup dialogs: Both standard and custom page setup dialogs can be\ndisplayed. The user can set page ranges, paper size, orientation, and scaling\nbefore printing.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Print view: A viewing mode can be created which accurately shows paper size,\nmargins, and the position of content on the page.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Restricted printing: Authors can restrict printing options, such as the range\nof printable pages.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Quality options: Authors can adjust the print quality for a document and allow\nthe user to select resolution and color options.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Multiple print sessions: A single PrintJob instance can now be used for\nmultiple printing sessions. Applications can provide consistent settings each\ntime the page setup and print dialogs are displayed."))),(0,r.kt)("h2",{id:"print-workflow-changes"},"Print workflow changes"),(0,r.kt)("p",null,"The new print workflow consists of the following steps:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"new PrintJob()"),": Creates a PrintJob instance (or reuse an existing instance).\nMany new PrintJob properties and methods, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"selectPaperSize()"),", are\navailable before the print job starts or during printing.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"PrintJob.showPageSetupDialog()"),": (optional) Display the page setup dialog\nwithout starting a print job.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"PrintJob.start()")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"PrintJob.start2()"),": In addition to the ",(0,r.kt)("inlineCode",{parentName:"p"},"start()"),"\nmethod, the ",(0,r.kt)("inlineCode",{parentName:"p"},"start2()")," method is used to initiate the print spooling process.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"start2()")," method allows you to choose whether to display the Print dialog\nand customize the dialog if it is shown.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"PrintJob.addPage()"),": Add content to the print job. Unchanged from existing\nprocess.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"PrintJob.send()")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"PrintJob.terminate()"),": Send the pages to the selected\nprinter or terminate the print job without sending. Print jobs are terminated\nin response to an error. If a PrintJob instance is terminated, it can still be\nreused. Regardless of whether the print job is sent to the printer or\nterminated, the current print settings are retained when you reuse the\nPrintJob instance."))),(0,r.kt)("h2",{id:"page-setup-dialog"},"Page setup dialog"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"showPageSetupDialog()")," method displays the operating system's Page Setup\ndialog, if the current environment supports it. Always check the\n",(0,r.kt)("inlineCode",{parentName:"p"},"supportsPageSetupDialog")," property before calling this method. Here is a simple\nexample:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"import flash.printing.PrintJob;\n\nvar myPrintJob:PrintJob = new PrintJob();\n//check for static property supportsPageSetupDialog of PrintJob class\nif (PrintJob.supportsPageSetupDialog) {\n    myPrintJob.showPageSetupDialog();\n}\n")),(0,r.kt)("p",null,"The method can optionally be called with a\n",(0,r.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/printing/PrintUIOptions.html"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/printing/PrintUIOptions.html"},"PrintUIOptions class"),"\nproperty to control which options are displayed in the Page Setup dialog. The\nmin and max page numbers can be set. The following example limits printing to\nthe first three pages:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"import flash.printing.PrintJob;\n\nvar myPrintJob:PrintJob = new PrintJob();\nif (PrintJob.supportsPageSetupDialog) {\n    var uiOpt:PrintUIOptions = new PrintUIOptions();\n    uiOpt.minPage = 1;\n    uiOpt.maxPage = 3;\n    myPrintJob.showPageSetupDialog(uiOpt);\n}\n")),(0,r.kt)("h2",{id:"changing-print-settings"},"Changing print settings"),(0,r.kt)("p",null,"The settings for a PrintJob instance can be changed at any time after it is\nconstructed. This includes changing settings between ",(0,r.kt)("inlineCode",{parentName:"p"},"addPage()")," calls and after\na print job has been sent or terminated. Some settings, such as the ",(0,r.kt)("inlineCode",{parentName:"p"},"printer"),"\nproperty, apply to the entire print job, not individual pages. Those settings\nmust be set before a call to ",(0,r.kt)("inlineCode",{parentName:"p"},"start()")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"start2()"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"selectPaperSize()")," method can be called to set the default paper size in\nthe Page Setup and Print dialogs. It can also be called during a print job to\nset the paper size for a range of pages. It is called using constants defined in\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"PaperSize")," class, as in this example, which selects a number 10 envelope\nsize:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"import flash.printing.PrintJob;\nimport flash.printing.PaperSize;\n\nvar myPrintJob:PrintJob = new PrintJob();\nmyPrintJob.selectPaperSize(PaperSize.ENV_10);\n")),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"printer")," property to get or set the name of the printer for the current\nprint job. By default it is set to the name of the default printer. The\n",(0,r.kt)("inlineCode",{parentName:"p"},"printer")," property is ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," if no printers are available or the system does not\nsupport printing. To change the printer, first get the list of available\nprinters using the ",(0,r.kt)("inlineCode",{parentName:"p"},"printers")," property. That property is a Vector whose String\nelements are available printer names. Set the ",(0,r.kt)("inlineCode",{parentName:"p"},"printer")," property to one of those\nString values to make that printer the active one. The ",(0,r.kt)("inlineCode",{parentName:"p"},"printer")," property of an\nactive print job cannot be changed. Attempts to change it after a successful\ncall to ",(0,r.kt)("inlineCode",{parentName:"p"},"start()")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"start2()")," and before the job is sent or terminated fail.\nHere is an example of setting this property:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'import flash.printing.PrintJob;\n\nvar myPrintJob:PrintJob = new PrintJob();\nmyPrintJob.printer = "HP_LaserJet_1";\nmyPrintJob.start();\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"copies")," property gets the value for the number of copies set in the\noperating system's Print dialog. The ",(0,r.kt)("inlineCode",{parentName:"p"},"firstPage")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"lastPage")," properties get\nthe page range. The ",(0,r.kt)("inlineCode",{parentName:"p"},"orientation")," property gets the paper orientation setting.\nThese properties can be set to override the values from the Print dialog. The\nfollowing example sets these properties:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"import flash.printing.PrintJob;\nimport flash.printing.PrintJobOrientation;\n\nvar myPrintJob:PrintJob = new PrintJob();\nmyPrintJob.copies = 3;\nmyPrintJob.firstPage = 1;\nmyPrintJob.lastPage = 3;\nmyPrintJob.orientation = PrintJobOrientation.LANDSCAPE;\n")),(0,r.kt)("p",null,"The following read-only settings associated with ",(0,r.kt)("inlineCode",{parentName:"p"},"PrintJob")," provide helpful\ninformation on the current printer setup:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"paperArea"),": The rectangular bounds of the printer medium, in points.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"printableArea"),": The rectangular bounds of the printable area, in points.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"maxPixelsPerInch"),": The physical resolution of the current printer, in pixels\nper inch.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"isColor"),": The ability of the current printer to print color (returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"\nif the current printer can print color)."))),(0,r.kt)("p",null,"See\n",(0,r.kt)("a",{parentName:"p",href:"/docs/development/client-system-interaction/printing/printing-example-page-setup-and-print-options"},"Printing example: Page setup and print options"),"."))}m.isMDXComponent=!0}}]);