"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[29789],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>v});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var m=a.createContext({}),d=function(e){var n=a.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=d(e.components);return a.createElement(m.Provider,{value:n},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,m=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),s=d(t),c=i,v=s["".concat(m,".").concat(c)]||s[c]||p[c]||r;return t?a.createElement(v,o(o({ref:n},l),{},{components:t})):a.createElement(v,o({ref:n},l))}));function v(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=c;var u={};for(var m in n)hasOwnProperty.call(n,m)&&(u[m]=n[m]);u.originalType=e,u[s]="string"==typeof e?e:i,o[1]=u;for(var d=2;d<r;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},82435:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>u,toc:()=>d});var a=t(87462),i=(t(67294),t(3905));const r={sidebar_position:6},o="Native menu example: Window and application menu (AIR)",u={unversionedId:"development/user-interaction/working-with-menus/native-menu-example-window-and-application-menu-air",id:"development/user-interaction/working-with-menus/native-menu-example-window-and-application-menu-air",title:"Native menu example: Window and application menu (AIR)",description:"The following example creates the menu shown in",source:"@site/docs/development/user-interaction/working-with-menus/native-menu-example-window-and-application-menu-air.md",sourceDirName:"development/user-interaction/working-with-menus",slug:"/development/user-interaction/working-with-menus/native-menu-example-window-and-application-menu-air",permalink:"/docs/development/user-interaction/working-with-menus/native-menu-example-window-and-application-menu-air",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/user-interaction/working-with-menus/native-menu-example-window-and-application-menu-air.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"mainSidebar",previous:{title:"Handling menu events",permalink:"/docs/development/user-interaction/working-with-menus/handling-menu-events"},next:{title:"Taskbar icons in AIR",permalink:"/docs/development/user-interaction/taskbar-icons-in-air"}},m={},d=[],l={toc:d},s="wrapper";function p(e){let{components:n,...t}=e;return(0,i.kt)(s,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"native-menu-example-window-and-application-menu-air"},"Native menu example: Window and application menu (AIR)"),(0,i.kt)("p",null,"The following example creates the menu shown in\n",(0,i.kt)("a",{parentName:"p",href:"/docs/development/user-interaction/working-with-menus/menu-basics#native-menu-structure-air"},"Native menu structure (AIR)"),"."),(0,i.kt)("p",null,"The menu is designed to work both on Windows, for which only window menus are\nsupported, and on Mac OS X, for which only application menus are supported. To\nmake the distinction, the MenuExample class constructor checks the static\n",(0,i.kt)("inlineCode",{parentName:"p"},"supportsMenu")," properties of the NativeWindow and NativeApplication classes. If\n",(0,i.kt)("inlineCode",{parentName:"p"},"NativeWindow.supportsMenu")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", then the constructor creates a NativeMenu\nobject for the window and then creates and adds the File and Edit submenus. If\n",(0,i.kt)("inlineCode",{parentName:"p"},"NativeApplication.supportsMenu")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", then the constructor creates and\nadds the File and Edit menus to the existing menu provided by the Mac OS X\noperating system."),(0,i.kt)("p",null,"The example also illustrates menu event handling. The ",(0,i.kt)("inlineCode",{parentName:"p"},"select")," event is handled\nat the item level and also at the menu level. Each menu in the chain from the\nmenu containing the selected item to the root menu responds to the ",(0,i.kt)("inlineCode",{parentName:"p"},"select"),"\nevent. The ",(0,i.kt)("inlineCode",{parentName:"p"},"displaying"),' event is used with the "Open Recent" menu. Just before\nthe menu is opened, the items in the menu are refreshed from the recent\nDocuments array (which doesn\'t actually change in this example). Although not\nshown in this example, you can also listen for ',(0,i.kt)("inlineCode",{parentName:"p"},"displaying")," events on individual\nitems."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'package\n{\n    import flash.display.NativeMenu;\n    import flash.display.NativeMenuItem;\n    import flash.display.NativeWindow;\n    import flash.display.Sprite;\n    import flash.events.Event;\n    import flash.filesystem.File;\n    import flash.desktop.NativeApplication;\n\n    public class MenuExample extends Sprite\n    {\n        private var recentDocuments:Array =\n            new Array(new File("app-storage:/GreatGatsby.pdf"),\n                    new File("app-storage:/WarAndPeace.pdf"),\n                    new File("app-storage:/Iliad.pdf"));\n\n        public function MenuExample()\n        {\n            var fileMenu:NativeMenuItem;\n            var editMenu:NativeMenuItem;\n\n            if (NativeWindow.supportsMenu){\n                stage.nativeWindow.menu = new NativeMenu();\n                stage.nativeWindow.menu.addEventListener(Event.SELECT, selectCommandMenu);\n                fileMenu = stage.nativeWindow.menu.addItem(new NativeMenuItem("File"));\n                fileMenu.submenu = createFileMenu();\n                editMenu = stage.nativeWindow.menu.addItem(new NativeMenuItem("Edit"));\n                editMenu.submenu = createEditMenu();\n            }\n\n            if (NativeApplication.supportsMenu){\n                NativeApplication.nativeApplication.menu.addEventListener(Event.SELECT, selectCommandMenu);\n                fileMenu = NativeApplication.nativeApplication.menu.addItem(new NativeMenuItem("File"));\n                fileMenu.submenu = createFileMenu();\n                editMenu = NativeApplication.nativeApplication.menu.addItem(new NativeMenuItem("Edit"));\n                editMenu.submenu = createEditMenu();\n            }\n        }\n\n        public function createFileMenu():NativeMenu {\n            var fileMenu:NativeMenu = new NativeMenu();\n            fileMenu.addEventListener(Event.SELECT, selectCommandMenu);\n\n            var newCommand:NativeMenuItem = fileMenu.addItem(new NativeMenuItem("New"));\n            newCommand.addEventListener(Event.SELECT, selectCommand);\n            var saveCommand:NativeMenuItem = fileMenu.addItem(new NativeMenuItem("Save"));\n            saveCommand.addEventListener(Event.SELECT, selectCommand);\n            var openRecentMenu:NativeMenuItem =\n                    fileMenu.addItem(new NativeMenuItem("Open Recent"));\n            openRecentMenu.submenu = new NativeMenu();\n            openRecentMenu.submenu.addEventListener(Event.DISPLAYING,\n                                            updateRecentDocumentMenu);\n            openRecentMenu.submenu.addEventListener(Event.SELECT, selectCommandMenu);\n\n            return fileMenu;\n        }\n\n        public function createEditMenu():NativeMenu {\n            var editMenu:NativeMenu = new NativeMenu();\n            editMenu.addEventListener(Event.SELECT, selectCommandMenu);\n\n            var copyCommand:NativeMenuItem = editMenu.addItem(new NativeMenuItem("Copy"));\n            copyCommand.addEventListener(Event.SELECT, selectCommand);\n            copyCommand.keyEquivalent = "c";\n            var pasteCommand:NativeMenuItem =\n                    editMenu.addItem(new NativeMenuItem("Paste"));\n            pasteCommand.addEventListener(Event.SELECT, selectCommand);\n            pasteCommand.keyEquivalent = "v";\n            editMenu.addItem(new NativeMenuItem("", true));\n            var preferencesCommand:NativeMenuItem =\n                    editMenu.addItem(new NativeMenuItem("Preferences"));\n            preferencesCommand.addEventListener(Event.SELECT, selectCommand);\n\n            return editMenu;\n        }\n\n        private function updateRecentDocumentMenu(event:Event):void {\n            trace("Updating recent document menu.");\n            var docMenu:NativeMenu = NativeMenu(event.target);\n\n            for each (var item:NativeMenuItem in docMenu.items) {\n                docMenu.removeItem(item);\n            }\n\n            for each (var file:File in recentDocuments) {\n                var menuItem:NativeMenuItem =\n                        docMenu.addItem(new NativeMenuItem(file.name));\n                menuItem.data = file;\n                menuItem.addEventListener(Event.SELECT, selectRecentDocument);\n            }\n        }\n\n        private function selectRecentDocument(event:Event):void {\n            trace("Selected recent document: " + event.target.data.name);\n        }\n\n        private function selectCommand(event:Event):void {\n            trace("Selected command: " + event.target.label);\n        }\n\n        private function selectCommandMenu(event:Event):void {\n            if (event.currentTarget.parent != null) {\n                var menuItem:NativeMenuItem =\n                        findItemForMenu(NativeMenu(event.currentTarget));\n                if (menuItem != null) {\n                    trace("Select event for \\"" +\n                            event.target.label +\n                            "\\" command handled by menu: " +\n                            menuItem.label);\n                }\n            } else {\n                trace("Select event for \\"" +\n                        event.target.label +\n                        "\\" command handled by root menu.");\n            }\n        }\n\n        private function findItemForMenu(menu:NativeMenu):NativeMenuItem {\n            for each (var item:NativeMenuItem in menu.parent.items) {\n                if (item != null) {\n                    if (item.submenu == menu) {\n                        return item;\n                    }\n                }\n            }\n            return null;\n        }\n    }\n}\n')))}p.isMDXComponent=!0}}]);