"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[94019],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=n.createContext({}),s=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=s(a),d=l,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||r;return a?n.createElement(f,i(i({ref:t},p),{},{components:a})):n.createElement(f,i({ref:t},p))}));function f(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:l,i[1]=o;for(var s=2;s<r;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},15729:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var n=a(87462),l=(a(67294),a(3905));const r={sidebar_position:9},i="Example: Internationalizing a stock ticker application",o={unversionedId:"development/internationalizing-applications/internationalizing-applications/example-internationalizing-a-stock-ticker-application",id:"development/internationalizing-applications/internationalizing-applications/example-internationalizing-a-stock-ticker-application",title:"Example: Internationalizing a stock ticker application",description:"The Global Stock Ticker application retrieves and displays fictitious data about",source:"@site/docs/development/internationalizing-applications/internationalizing-applications/example-internationalizing-a-stock-ticker-application.md",sourceDirName:"development/internationalizing-applications/internationalizing-applications",slug:"/development/internationalizing-applications/internationalizing-applications/example-internationalizing-a-stock-ticker-application",permalink:"/docs/development/internationalizing-applications/internationalizing-applications/example-internationalizing-a-stock-ticker-application",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/internationalizing-applications/internationalizing-applications/example-internationalizing-a-stock-ticker-application.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"mainSidebar",previous:{title:"Case conversion",permalink:"/docs/development/internationalizing-applications/internationalizing-applications/case-conversion"},next:{title:"Localizing applications",permalink:"/docs/development/internationalizing-applications/localizing-applications"}},c={},s=[{value:"Understanding the user interface and sample data",id:"understanding-the-user-interface-and-sample-data",level:2},{value:"Setting the locale",id:"setting-the-locale",level:2},{value:"Formatting the data",id:"formatting-the-data",level:2}],p={toc:s},u="wrapper";function m(e){let{components:t,...a}=e;return(0,l.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"example-internationalizing-a-stock-ticker-application"},"Example: Internationalizing a stock ticker application"),(0,l.kt)("p",null,"The Global Stock Ticker application retrieves and displays fictitious data about\nstocks in three different stock markets: the United States, Japan, and Europe.\nIt formats the data according to the conventions of various locales."),(0,l.kt)("p",null,"This example illustrates the following features of the flash.globalization\npackage:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Locale-aware number formatting")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Locale-aware currency formatting")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Setting currency ISO code and currency symbols")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Locale-aware date formatting")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Retrieving and displaying appropriate month name abbreviations"))),(0,l.kt)("p",null,"To get the application files for this sample, see\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/joshtynjala/flash-platform-as3-dev-guide-examples/releases/tag/original"},(0,l.kt)("em",{parentName:"a"},"FlashPlatformAS3DevGuideExamples.zip")),".\nThe Global Stock Ticker application files can be found in the folder\nSamples/GlobalStockTicker. The application consists of the following files:"),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,(0,l.kt)("p",null,"File")),(0,l.kt)("th",null,(0,l.kt)("p",null,"Description")))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"GlobalStockTicker.mxml"),(0,l.kt)("p",null,"or"),(0,l.kt)("p",null,"GlobalStockTicker.fla")),(0,l.kt)("td",null,(0,l.kt)("p",null,"The user interface for the application for Flex (MXML) or Flash (FLA)."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"styles.css")),(0,l.kt)("td",null,(0,l.kt)("p",null,"Styles for the application user interface (Flex only)."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"com/example/programmingas3/stockticker/flex/FinGraph.mxml")),(0,l.kt)("td",null,(0,l.kt)("p",null,"An MXML component that displays a chart of simulated stock data, for Flex only."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"com/example/programmingas3/stockticker/flash/GlobalStockTicker.as")),(0,l.kt)("td",null,(0,l.kt)("p",null,"Document class containing the user interface logic for the application (Flash only)."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"comp/example/programmingas3/stockticker/flash/RightAlignedColumn.as")),(0,l.kt)("td",null,(0,l.kt)("p",null,"A custom cell renderer for the Flash DataGrid component (Flash only)."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"com/example/programmingas3/stockticker/FinancialGraph.as")),(0,l.kt)("td",null,(0,l.kt)("p",null,"An ActionScript class that draws a chart of simulated stock data."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"com/example/programmingas3/stockticker/Localizer.as")),(0,l.kt)("td",null,(0,l.kt)("p",null,"An ActionScript class that manages the locale and currency and handles the localized formatting of numbers, currency amounts, and dates."))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("p",null,"com/example/programmingas3/stockticker/StockDataModel.as")),(0,l.kt)("td",null,(0,l.kt)("p",null,"An ActionScript class that holds all the sample data for the Global Stock Ticker example."))))),(0,l.kt)("h2",{id:"understanding-the-user-interface-and-sample-data"},"Understanding the user interface and sample data"),(0,l.kt)("p",null,"The application's main user interface elements are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"a combo box for selecting a Locale")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"a combo box for selecting a Market")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"a DataGrid that displays data for six companies in each market")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"a chart that shows simulated historical data for the selected company's stock"))),(0,l.kt)("p",null,"The application stores all of its sample data about locales, markets, and\ncompany stocks in the StockDataModel class. A real application would retrieve\ndata from a server and then store it in a class like StockDataModel. In this\nexample, all the data is hard coded in the StockDataModel class."),(0,l.kt)("p",null,"Note: The data displayed in the financial chart doesn't necessarily match the\ndata shown in the DataGrid control. The chart is randomly redrawn each time a\ndifferent company is selected. It is for illustration purposes only."),(0,l.kt)("h2",{id:"setting-the-locale"},"Setting the locale"),(0,l.kt)("p",null,"After some initial setup work, the application calls the method\nLocalizer.setLocale() to create formatter objects for the default locale. The\nsetLocale() method is also called each time the user selects a new value from\nthe Locale combo box."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'public function setLocale(newLocale:String):void\n{\n    locale  = new LocaleID(newLocale);\n\n    nf = new NumberFormatter(locale.name);\n    traceError(nf.lastOperationStatus, "NumberFormatter", nf.actualLocaleIDName);\n\n    cf = new CurrencyFormatter(locale.name);\n    traceError(cf.lastOperationStatus, "CurrencyFormatter", cf.actualLocaleIDName);\n    symbolIsSafe = cf.formattingWithCurrencySymbolIsSafe(currentCurrency);\n    cf.setCurrency(currentCurrency, currentSymbol);\n    cf.fractionalDigits = currentFraction;\n\n    df = new DateTimeFormatter(locale.name, DateTimeStyle.LONG, DateTimeStyle.SHORT);\n    traceError(df.lastOperationStatus, "DateTimeFormatter", df.actualLocaleIDName);\n    monthNames = df.getMonthNames(DateTimeNameStyle.LONG_ABBREVIATION);\n}\n\npublic function traceError(status:String, serviceName:String, localeID:String) :void\n{\n    if(status != LastOperationStatus.NO_ERROR)\n    {\n        if(status == LastOperationStatus.USING_FALLBACK_WARNING)\n        {\n            trace("Warning - Fallback locale ID used by "\n                    + serviceName + ": " + localeID);\n        }\n        else if (status == LastOperationStatus.UNSUPPORTED_ERROR)\n        {\n            trace("Error in " + serviceName + ": " + status);\n            //abort application\n            throw(new Error("Fatal error", 0));\n        }\n        else\n        {\n            trace("Error in " + serviceName + ": " + status);\n        }\n    }\n    else\n    {\n        trace(serviceName + " created for locale ID: " + localeID);\n    }\n}\n')),(0,l.kt)("p",null,"First the setLocale() method creates a LocaleID object. This object makes it\neasier to get details about the actual locale later, if needed."),(0,l.kt)("p",null,"Next it creates new NumberFormatter, CurrencyFormatter, and DateTimeFormatter\nobjects for the locale. After creating each formatter object it calls the\ntraceError() method. This method displays error and warning messages in the\nconsole if there is a problem with the requested locale. (A real application\nshould react based on such errors rather than just tracing them)."),(0,l.kt)("p",null,"After creating the CurrencyFormatter object, the setLocale() method sets the\nformatter's currency ISO code, currency symbol, and fractionalDigits properties\nto previously determined values. (Those values are set each time the user\nselects a new market from the Markets combo box)."),(0,l.kt)("p",null,"After creating the DateTimeFormatter object, the setLocale() method also\nretrieves an array of localized month name abbreviations."),(0,l.kt)("h2",{id:"formatting-the-data"},"Formatting the data"),(0,l.kt)("p",null,"The formatted stock data is presented in a DataGrid control. The DataGrid\ncolumns each call a label function that formats the column value using the\nappropriate formatter object."),(0,l.kt)("p",null,"In the Flash version, for example, the following code sets up the DataGrid\ncolumns:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'var col1:DataGridColumn = new DataGridColumn("ticker");\ncol1.headerText = "Company";\ncol1.sortOptions = Array.NUMERIC;\ncol1.width = 200;\n\nvar col2:DataGridColumn = new DataGridColumn("volume");\ncol2.headerText = "Volume";\ncol2.width = 120;\ncol2.cellRenderer = RightAlignedCell;\ncol2.labelFunction = displayVolume;\n\nvar col3:DataGridColumn = new DataGridColumn("price");\ncol3.headerText = "Price";\ncol3.width = 70;\ncol3.cellRenderer = RightAlignedCell;\ncol3.labelFunction = displayPrice;\n\nvar col4:DataGridColumn = new DataGridColumn("change");\ncol4.headerText = "Change";\ncol4.width = 120;\ncol4.cellRenderer = RightAlignedCell;\ncol4.labelFunction = displayPercent;\n')),(0,l.kt)("p",null,"The Flex version of the example declares its DataGrid in MXML. It also defines\nsimilar label functions for each column."),(0,l.kt)("p",null,"The labelFunction properties refer to the following functions, which call\nformatting methods of the Localizer class:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"private function displayVolume(item:Object):String\n{\n    return localizer.formatNumber(item.volume, 0);\n}\n\nprivate function displayPercent(item:Object):String\n{\n   return localizer.formatPercent(item.change )  ;\n}\n\nprivate function displayPrice(item:Object):String\n{\n    return localizer.formatCurrency(item.price);\n}\n")),(0,l.kt)("p",null,"The Localizer methods then set up and call the appropriate formatters:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'public function formatNumber(value:Number, fractionalDigits:int = 2):String\n{\n    nf.fractionalDigits = fractionalDigits;\n    return nf.formatNumber(value);\n}\n\npublic function formatPercent(value:Number, fractionalDigits:int = 2):String\n{\n    // HACK WARNING: The position of the percent sign, and whether a space belongs\n    // between it and the number, are locale-sensitive decisions. For example,\n    // in Turkish the positive format is %12 and the negative format is -%12.\n    // Like most operating systems, flash.globalization classes do not currently\n    // provide an API for percentage formatting.\n    nf.fractionalDigits = fractionalDigits;\n    return nf.formatNumber(value) + "%";\n}\n\npublic function formatCurrency(value:Number):String\n{\n    return cf.format(value, symbolIsSafe);\n}\n\npublic function formatDate(dateValue:Date):String\n{\n    return df.format(dateValue);\n}\n')))}m.isMDXComponent=!0}}]);