"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[98055],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var o=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=o.createContext({}),d=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=d(e.components);return o.createElement(l.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},h=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(t),h=i,m=p["".concat(l,".").concat(h)]||p[h]||u[h]||a;return t?o.createElement(m,r(r({ref:n},c),{},{components:t})):o.createElement(m,r({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,r=new Array(a);r[0]=h;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:i,r[1]=s;for(var d=2;d<a;d++)r[d]=t[d];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}h.displayName="MDXCreateElement"},2932:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var o=t(87462),i=(t(67294),t(3905));const a={sidebar_position:8},r="Security considerations when loading and playing sounds",s={unversionedId:"development/rich-media-content/working-with-sound/security-considerations-when-loading-and-playing-sounds",id:"development/rich-media-content/working-with-sound/security-considerations-when-loading-and-playing-sounds",title:"Security considerations when loading and playing sounds",description:"Your application's ability to access sound data can be limited according to the",source:"@site/docs/development/rich-media-content/working-with-sound/security-considerations-when-loading-and-playing-sounds.md",sourceDirName:"development/rich-media-content/working-with-sound",slug:"/development/rich-media-content/working-with-sound/security-considerations-when-loading-and-playing-sounds",permalink:"/docs/development/rich-media-content/working-with-sound/security-considerations-when-loading-and-playing-sounds",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/rich-media-content/working-with-sound/security-considerations-when-loading-and-playing-sounds.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"mainSidebar",previous:{title:"Playing sounds",permalink:"/docs/development/rich-media-content/working-with-sound/playing-sounds"},next:{title:"Controlling sound volume and panning",permalink:"/docs/development/rich-media-content/working-with-sound/controlling-sound-volume-and-panning"}},l={},d=[],c={toc:d},p="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(p,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"security-considerations-when-loading-and-playing-sounds"},"Security considerations when loading and playing sounds"),(0,i.kt)("p",null,'Your application\'s ability to access sound data can be limited according to the\nFlash Player or AIR security model. Each sound is subject to the restrictions of\ntwo different security sandboxes, the sandbox for the content itself (the\n"content sandbox"), and the sandbox for the application or object that loads and\nplays the sound (the "owner sandbox"). For AIR application content in the\napplication security sandbox, all sounds, including those loaded from other\ndomains, are accessible to content in the application security sandbox. However,\ncontent in other security security sandboxes observe the same rules as content\nrunning in Flash Player. For more information about the Flash Player security\nmodel in general, and the definition of sandboxes, see\n',(0,i.kt)("a",{parentName:"p",href:"/docs/development/security/"},"Security"),"."),(0,i.kt)("p",null,"The content sandbox controls whether detailed sound data can be extracted from\nthe sound using the ",(0,i.kt)("inlineCode",{parentName:"p"},"id3")," property or the ",(0,i.kt)("inlineCode",{parentName:"p"},"SoundMixer.computeSpectrum()")," method.\nIt doesn't restrict the loading or playing of the sound file itself."),(0,i.kt)("p",null,"The domain of origin of the sound file defines the security limitations of the\ncontent sandbox. Generally, if a sound file is located in the same domain or\nfolder as the SWF file of the application or object that loads it, the\napplication or object will have full access to that sound file. If the sound\ncomes from a different domain than the application does, it can still be brought\nwithin the content sandbox by using a policy file."),(0,i.kt)("p",null,"Your application can pass a SoundLoaderContext object with a ",(0,i.kt)("inlineCode",{parentName:"p"},"checkPolicyFile"),"\nproperty as a parameter to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Sound.load()")," method. Setting the\n",(0,i.kt)("inlineCode",{parentName:"p"},"checkPolicyFile")," property to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," tells Flash Player or AIR to look for a\npolicy file on the server from which the sound is loaded. If a policy file\nexists, and it grants access to the domain of the loading SWF file, the SWF file\ncan load the sound file, access the ",(0,i.kt)("inlineCode",{parentName:"p"},"id3")," property of the Sound object, and call\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"SoundMixer.computeSpectrum()")," method for loaded sounds."),(0,i.kt)("p",null,"The owner sandbox controls local playback of the sounds. The application or\nobject that starts playing a sound defines the owner sandbox."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"SoundMixer.stopAll()")," method silences the sounds in all SoundChannel\nobjects that are currently playing, as long as they meet the following criteria:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The sounds were started by objects within the same owner sandbox.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The sounds are from a source with a policy file that grants access to the\ndomain of the application or object that calls the ",(0,i.kt)("inlineCode",{parentName:"p"},"SoundMixer.stopAll()"),"\nmethod."))),(0,i.kt)("p",null,"However, in an AIR application, content in the application security sandbox\n(content installed with the AIR application) are not restricted by these\nsecurity limitations."),(0,i.kt)("p",null,"To find out if the ",(0,i.kt)("inlineCode",{parentName:"p"},"SoundMixer.stopAll()")," method will indeed stop all playing\nsounds, your application can call the ",(0,i.kt)("inlineCode",{parentName:"p"},"SoundMixer.areSoundsInaccessible()"),"\nmethod. If that method returns a value of ",(0,i.kt)("inlineCode",{parentName:"p"},"true,")," some of the sounds being\nplayed are outside the control of the current owner sandbox and will not be\nstopped by the ",(0,i.kt)("inlineCode",{parentName:"p"},"SoundMixer.stopAll()")," method."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"SoundMixer.stopAll()")," method also stops the playhead from continuing for\nall sounds that were loaded from external files. However, sounds that are\nembedded in FLA files and attached to frames in the timeline using the Flash\nAuthoring tool might start playing again if the animation moves to a new frame."))}u.isMDXComponent=!0}}]);