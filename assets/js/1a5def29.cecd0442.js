"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[55745],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>m});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),p=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=p(e.components);return n.createElement(c.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},h=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(t),h=a,m=u["".concat(c,".").concat(h)]||u[h]||d[h]||s;return t?n.createElement(m,o(o({ref:r},l),{},{components:t})):n.createElement(m,o({ref:r},l))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=h;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},19705:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=t(87462),a=(t(67294),t(3905));const s={sidebar_position:1},o="Basics of regular expressions",i={unversionedId:"development/core-actionscript-classes/using-regular-expressions/basics-of-regular-expressions",id:"development/core-actionscript-classes/using-regular-expressions/basics-of-regular-expressions",title:"Basics of regular expressions",description:"A regular expression describes a pattern of characters. Regular expressions are",source:"@site/docs/development/core-actionscript-classes/using-regular-expressions/basics-of-regular-expressions.md",sourceDirName:"development/core-actionscript-classes/using-regular-expressions",slug:"/development/core-actionscript-classes/using-regular-expressions/basics-of-regular-expressions",permalink:"/docs/development/core-actionscript-classes/using-regular-expressions/basics-of-regular-expressions",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/core-actionscript-classes/using-regular-expressions/basics-of-regular-expressions.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"mainSidebar",previous:{title:"Using regular expressions",permalink:"/docs/development/core-actionscript-classes/using-regular-expressions/"},next:{title:"Regular expression syntax",permalink:"/docs/development/core-actionscript-classes/using-regular-expressions/regular-expression-syntax/"}},c={},p=[{value:"Important concepts and terms",id:"important-concepts-and-terms",level:4}],l={toc:p},u="wrapper";function d(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"basics-of-regular-expressions"},"Basics of regular expressions"),(0,a.kt)("p",null,"A regular expression describes a pattern of characters. Regular expressions are\ntypically used to verify that a text value conforms to a particular pattern\n(such as verifying that a user-entered phone number has the proper number of\ndigits) or to replace portions of a text value that matches a particular\npattern."),(0,a.kt)("p",null,'Regular expressions can be simple. For example, suppose you wanted to confirm\nthat a particular string matches "ABC," or wanted to replace every occurrence of\n"ABC" in a string with some other text. In that case, you could use the\nfollowing regular expression, which defines the pattern consisting of the\nletters A, B, and C in sequence:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/ABC/\n")),(0,a.kt)("p",null,"Note that the regular expression literal is delineated with the forward slash\n(",(0,a.kt)("inlineCode",{parentName:"p"},"/"),") character."),(0,a.kt)("p",null,"Regular expression patterns can also be complex, and sometimes cryptic in\nappearance, such as the following expression to match a valid e-mail address:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/([0-9a-zA-Z]+[-._+&])*[0-9a-zA-Z]+@([-0-9a-zA-Z]+[.])+[a-zA-Z]{2,6}/\n")),(0,a.kt)("p",null,"Most commonly you will use regular expressions to search for patterns in strings\nand to replace characters. In those cases, you will create a regular expression\nobject and use it as a parameter for one of several String class methods. The\nfollowing methods of the String class take regular expressions as parameters:\n",(0,a.kt)("inlineCode",{parentName:"p"},"match()"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"replace()"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"search()"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"split()"),". For more information on these\nmethods, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/core-actionscript-classes/working-with-strings/finding-substrings-and-patterns-in-strings"},"Finding patterns in strings and replacing substrings"),"."),(0,a.kt)("p",null,"The RegExp class includes the following methods: ",(0,a.kt)("inlineCode",{parentName:"p"},"test()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"exec()"),". For more\ninformation, see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/core-actionscript-classes/using-regular-expressions/methods-for-using-regular-expressions-with-strings"},"Methods for using regular expressions with strings"),"."),(0,a.kt)("h4",{id:"important-concepts-and-terms"},"Important concepts and terms"),(0,a.kt)("p",null,"The following reference list contains important terms that are relevant to this\nfeature:"),(0,a.kt)("p",null,"Escape character",(0,a.kt)("br",{parentName:"p"}),"\n","A character indicating that the character that follows should be treated as a\nmetacharacter rather than a literal character. In regular expression syntax, the\nbackslash character (","\\",") is the escape character, so a backslash followed by\nanother character is a special code rather than just the character itself."),(0,a.kt)("p",null,"Flag",(0,a.kt)("br",{parentName:"p"}),"\n","A character that specifies some option about how the regular expression pattern\nshould be used, such as whether to distinguish between uppercase and lowercase\ncharacters."),(0,a.kt)("p",null,"Metacharacter",(0,a.kt)("br",{parentName:"p"}),"\n","A character that has special meaning in a regular expression pattern, as opposed\nto literally representing that character in the pattern."),(0,a.kt)("p",null,"Quantifier",(0,a.kt)("br",{parentName:"p"}),"\n","A character (or several characters) indicating how many times a part of the\npattern should repeat. For example, a quantifier would be used to designate that\na United States postal code should contain five or nine numbers."),(0,a.kt)("p",null,"Regular expression",(0,a.kt)("br",{parentName:"p"}),"\n","A program statement defining a pattern of characters that can be used to confirm\nwhether other strings match that pattern or to replace portions of a string."))}d.isMDXComponent=!0}}]);