"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[23640],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=s(a),c=r,u=d["".concat(p,".").concat(c)]||d[c]||h[c]||i;return a?n.createElement(u,l(l({ref:t},m),{},{components:a})):n.createElement(u,l({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},129:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const i={},l="Geometry example: Applying a matrix transformation to a display object",o={unversionedId:"development/display/working-with-geometry/geometry-example-applying-a-matrix-transformation-to-a-display-object",id:"development/display/working-with-geometry/geometry-example-applying-a-matrix-transformation-to-a-display-object",title:"Geometry example: Applying a matrix transformation to a display object",description:"The DisplayObjectTransformer sample application shows a number of features of",source:"@site/docs/development/display/working-with-geometry/geometry-example-applying-a-matrix-transformation-to-a-display-object.md",sourceDirName:"development/display/working-with-geometry",slug:"/development/display/working-with-geometry/geometry-example-applying-a-matrix-transformation-to-a-display-object",permalink:"/docs/development/display/working-with-geometry/geometry-example-applying-a-matrix-transformation-to-a-display-object",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/display/working-with-geometry/geometry-example-applying-a-matrix-transformation-to-a-display-object.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Using Matrix objects",permalink:"/docs/development/display/working-with-geometry/using-matrix-objects"},next:{title:"Overview",permalink:"/docs/development/display/using-the-drawing-api/"}},p={},s=[{value:"Defining the MatrixTransformer class",id:"defining-the-matrixtransformer-class",level:2},{value:"The transform() method",id:"the-transform-method",level:4},{value:"The skew() method",id:"the-skew-method",level:4},{value:"The scale() method",id:"the-scale-method",level:4},{value:"The translate() method",id:"the-translate-method",level:4},{value:"The rotate() method",id:"the-rotate-method",level:4},{value:"Calling the MatrixTransformer.transform() method from the application",id:"calling-the-matrixtransformertransform-method-from-the-application",level:2}],m={toc:s},d="wrapper";function h(e){let{components:t,...i}=e;return(0,r.kt)(d,(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"geometry-example-applying-a-matrix-transformation-to-a-display-object"},"Geometry example: Applying a matrix transformation to a display object"),(0,r.kt)("p",null,"The DisplayObjectTransformer sample application shows a number of features of\nusing the Matrix class to transform a display object, including the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rotating the display object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Scaling the display object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Translating (repositioning) the display object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Skewing the display object"))),(0,r.kt)("p",null,"The application provides an interface for adjusting the parameters of the matrix\ntransformation, as follows:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(60279).Z,width:"360",height:"460"})),(0,r.kt)("p",null,"When the user clicks the Transform button, the application applies the\nappropriate transformation."),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(77806).Z,width:"470",height:"204"})),(0,r.kt)("p",null,"The original display object, and the display object rotated by -45\xb0 ",(0,r.kt)("em",{parentName:"p"},"and scaled\nby 50%")),(0,r.kt)("p",null,"To get the application files for this sample, see\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/joshtynjala/flash-platform-as3-dev-guide-examples/releases/tag/original"},(0,r.kt)("em",{parentName:"a"},"FlashPlatformAS3DevGuideExamples.zip")),".\nThe DisplayObjectTransformer application files can be found in the folder\nSamples/DisplayObjectTransformer. The application consists of the following\nfiles:"),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,(0,r.kt)("p",null,"File")),(0,r.kt)("th",null,(0,r.kt)("p",null,"Description")))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,"DisplayObjectTransformer.mxml"),(0,r.kt)("p",null,"or"),(0,r.kt)("p",null,"DisplayObjectTransformer.fla")),(0,r.kt)("td",null,(0,r.kt)("p",null,"The main application file in Flash (FLA) or Flex (MXML)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,"com/example/programmingas3/geometry/MatrixTransformer.as")),(0,r.kt)("td",null,(0,r.kt)("p",null,"A class that contains methods for applying matrix transformations."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,"img/")),(0,r.kt)("td",null,(0,r.kt)("p",null,"A directory containing sample image files used by the application."))))),(0,r.kt)("h2",{id:"defining-the-matrixtransformer-class"},"Defining the MatrixTransformer class"),(0,r.kt)("p",null,"The MatrixTransformer class includes static methods that apply geometric\ntransformations of Matrix objects."),(0,r.kt)("h4",{id:"the-transform-method"},"The transform() method"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"transform()")," method includes parameters for each of the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sourceMatrix")," \u2014The input matrix, which the method transforms")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"xScale")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"yScale")," \u2014The ",(0,r.kt)("em",{parentName:"p"},"x")," and ",(0,r.kt)("em",{parentName:"p"},"y")," scale factor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"dx")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"dy")," \u2014The ",(0,r.kt)("em",{parentName:"p"},"x")," and ",(0,r.kt)("em",{parentName:"p"},"y")," translation amounts, in pixels")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"rotation")," \u2014The rotation amount, in degrees")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"skew")," \u2014The skew factor, as a percentage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"skewType")," \u2014The direction in which the skew, either ",(0,r.kt)("inlineCode",{parentName:"p"},'"right"')," or ",(0,r.kt)("inlineCode",{parentName:"p"},'"left"')))),(0,r.kt)("p",null,"The return value is the resulting matrix."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"transform()")," method calls the following static methods of the class:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"skew()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"scale()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"translate()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"rotate()")))),(0,r.kt)("p",null,"Each returns the source matrix with the applied transformation."),(0,r.kt)("h4",{id:"the-skew-method"},"The skew() method"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"skew()")," method skews the matrix by adjusting the ",(0,r.kt)("inlineCode",{parentName:"p"},"b")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"c")," properties of\nthe matrix. An optional parameter, ",(0,r.kt)("inlineCode",{parentName:"p"},"unit"),", determines the units used to define\nthe skew angle, and if necessary, the method converts the ",(0,r.kt)("inlineCode",{parentName:"p"},"angle")," value to\nradians:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'if (unit == "degrees")\n{\n    angle = Math.PI * 2 * angle / 360;\n}\nif (unit == "gradients")\n{\n    angle = Math.PI * 2 * angle / 100;\n}\n')),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"skewMatrix")," Matrix object is created and adjusted to apply the skew\ntransformation. Initially, it is the identity matrix, as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"var skewMatrix:Matrix = new Matrix();\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"skewSide")," parameter determines the side to which the skew is applied. If it\nis set to ",(0,r.kt)("inlineCode",{parentName:"p"},'"right"'),", the following code sets the ",(0,r.kt)("inlineCode",{parentName:"p"},"b")," property of the matrix:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"skewMatrix.b = Math.tan(angle);\n")),(0,r.kt)("p",null,"Otherwise, the bottom side is skewed by adjusting the ",(0,r.kt)("inlineCode",{parentName:"p"},"c")," property of the\nMatrix, as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"skewMatrix.c = Math.tan(angle);\n")),(0,r.kt)("p",null,"The resulting skew is then applied to the existing matrix by concatenating the\ntwo matrixes, as the following example shows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sourceMatrix.concat(skewMatrix);\nreturn sourceMatrix;\n")),(0,r.kt)("h4",{id:"the-scale-method"},"The scale() method"),(0,r.kt)("p",null,"The following example shows the ",(0,r.kt)("inlineCode",{parentName:"p"},"scale()")," method adjusts the scale factor if it\nis provided as a percentage, first, and then uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"scale()")," method of the\nmatrix object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"if (percent)\n{\n    xScale = xScale / 100;\n    yScale = yScale / 100;\n}\nsourceMatrix.scale(xScale, yScale);\nreturn sourceMatrix;\n")),(0,r.kt)("h4",{id:"the-translate-method"},"The translate() method"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"translate()")," method simply applies the ",(0,r.kt)("inlineCode",{parentName:"p"},"dx")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"dy")," translation factors by\ncalling the ",(0,r.kt)("inlineCode",{parentName:"p"},"translate()")," method of the matrix object, as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sourceMatrix.translate(dx, dy);\nreturn sourceMatrix;\n")),(0,r.kt)("h4",{id:"the-rotate-method"},"The rotate() method"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"rotate()")," method converts the input rotation factor to radians (if it is\nprovided in degrees or gradients), and then calls the ",(0,r.kt)("inlineCode",{parentName:"p"},"rotate()")," method of the\nmatrix object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'if (unit == "degrees")\n{\n    angle = Math.PI * 2 * angle / 360;\n}\nif (unit == "gradients")\n{\n    angle = Math.PI * 2 * angle / 100;\n}\nsourceMatrix.rotate(angle);\nreturn sourceMatrix;\n')),(0,r.kt)("h2",{id:"calling-the-matrixtransformertransform-method-from-the-application"},"Calling the MatrixTransformer.transform() method from the application"),(0,r.kt)("p",null,"The application contains a user interface for getting the transformation\nparameters from the user. It then passes these values, along with the ",(0,r.kt)("inlineCode",{parentName:"p"},"matrix"),"\nproperty of the ",(0,r.kt)("inlineCode",{parentName:"p"},"transform")," property of the display object, to the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Matrix.transform()")," method, as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"tempMatrix = MatrixTransformer.transform(tempMatrix,\n    xScaleSlider.value,\n    yScaleSlider.value,\n    dxSlider.value,\n    dySlider.value,\n    rotationSlider.value,\n    skewSlider.value,\n    skewSide);\n")),(0,r.kt)("p",null,"The application then applies the return value to the ",(0,r.kt)("inlineCode",{parentName:"p"},"matrix")," property of the\n",(0,r.kt)("inlineCode",{parentName:"p"},"transform")," property of the display object, triggering the transformation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"img.content.transform.matrix = tempMatrix;\n")))}h.isMDXComponent=!0},60279:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ge_DisplayObjectTransformer-1-ec2ee16f10b47c8a1f456b45f6f7f620.png"},77806:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ge_DisplayObjectTransformer-2-107bcd4045f759bae23457c43240f93e.png"}}]);