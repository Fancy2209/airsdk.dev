"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[80399],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),c=p(n),u=r,m=c["".concat(l,".").concat(u)]||c[u]||g[u]||o;return n?a.createElement(m,i(i({ref:t},s),{},{components:n})):a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d[c]="string"==typeof e?e:r,i[1]=d;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},66274:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:5},i="Dragging data out of an HTML element",d={unversionedId:"development/user-interaction/drag-and-drop-in-air/dragging-data-out-of-an-html-element",id:"development/user-interaction/drag-and-drop-in-air/dragging-data-out-of-an-html-element",title:"Dragging data out of an HTML element",description:"The default behavior allows most content in an HTML page to be copied by",source:"@site/docs/development/user-interaction/drag-and-drop-in-air/dragging-data-out-of-an-html-element.md",sourceDirName:"development/user-interaction/drag-and-drop-in-air",slug:"/development/user-interaction/drag-and-drop-in-air/dragging-data-out-of-an-html-element",permalink:"/docs/development/user-interaction/drag-and-drop-in-air/dragging-data-out-of-an-html-element",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/user-interaction/drag-and-drop-in-air/dragging-data-out-of-an-html-element.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"mainSidebar",previous:{title:"Drag and drop in HTML",permalink:"/docs/development/user-interaction/drag-and-drop-in-air/drag-and-drop-in-html"},next:{title:"Dragging data into an HTML element",permalink:"/docs/development/user-interaction/drag-and-drop-in-air/dragging-data-into-an-html-element"}},l={},p=[{value:"Setting the dragged data",id:"setting-the-dragged-data",level:2}],s={toc:p},c="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dragging-data-out-of-an-html-element"},"Dragging data out of an HTML element"),(0,r.kt)("p",null,"The default behavior allows most content in an HTML page to be copied by\ndragging. You can control the content allowed to be dragged using CSS properties\n",(0,r.kt)("inlineCode",{parentName:"p"},"-webkit-user-select")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"-webkit-user-drag"),"."),(0,r.kt)("p",null,"Override the default drag-out behavior in the handler for the ",(0,r.kt)("inlineCode",{parentName:"p"},"dragstart")," event.\nCall the ",(0,r.kt)("inlineCode",{parentName:"p"},"setData()")," method of the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataTransfer")," property of the event object\nto put your own data into the drag gesture."),(0,r.kt)("p",null,"To indicate which drag effects a source object supports when you are not relying\non the default behavior, set the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataTransfer.effectAllowed")," property of the\nevent object dispatched for the ",(0,r.kt)("inlineCode",{parentName:"p"},"dragstart")," event. You can choose any\ncombination of effects. For example, if a source element supports both ",(0,r.kt)("em",{parentName:"p"},"copy"),"\nand ",(0,r.kt)("em",{parentName:"p"},"link")," effects, set the property to ",(0,r.kt)("inlineCode",{parentName:"p"},'"copyLink"'),"."),(0,r.kt)("h2",{id:"setting-the-dragged-data"},"Setting the dragged data"),(0,r.kt)("p",null,"Add the data for the drag gesture in the handler for the ",(0,r.kt)("inlineCode",{parentName:"p"},"dragstart")," event with\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"dataTransfer")," property. Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"dataTransfer.setData()")," method to put data\nonto the clipboard, passing in the MIME type and the data to transfer."),(0,r.kt)("p",null,"For example, if you had an image element in your application, with the id\n",(0,r.kt)("em",{parentName:"p"},"imageOfGeorge")," , you could use the following dragstart event handler. This\nexample adds representations of a picture of George in several data formats,\nwhich increases the likelihood that other applications can use the dragged data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'function dragStartHandler(event){\n    event.dataTransfer.effectAllowed = "copy";\n\n    var dragImage = document.getElementById("imageOfGeorge");\n    var dragFile = new air.File(dragImage.src);\n    event.dataTransfer.setData("text/plain","A picture of George");\n    event.dataTransfer.setData("image/x-vnd.adobe.air.bitmap", dragImage);\n    event.dataTransfer.setData("application/x-vnd.adobe.air.file-list",\n                                new Array(dragFile));\n}\n')),(0,r.kt)("p",null,"Note: When you call the ",(0,r.kt)("inlineCode",{parentName:"p"},"setData()")," method of ",(0,r.kt)("inlineCode",{parentName:"p"},"dataTransfer")," object, no data is\nadded by the default drag-and-drop behavior."))}g.isMDXComponent=!0}}]);