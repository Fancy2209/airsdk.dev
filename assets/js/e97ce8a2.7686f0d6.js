"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[87047],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>v});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),s=p(n),u=r,v=s["".concat(l,".").concat(u)]||s[u]||m[u]||i;return n?a.createElement(v,o(o({ref:t},d),{},{components:n})):a.createElement(v,o({ref:t},d))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[s]="string"==typeof e?e:r,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},79960:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={},o="Workflow for playing protected content",c={unversionedId:"development/rich-media-content/using-digital-rights-management/workflow-for-playing-protected-content",id:"development/rich-media-content/using-digital-rights-management/workflow-for-playing-protected-content",title:"Workflow for playing protected content",description:"1.  Create a MediaPlayer instance.",source:"@site/docs/development/rich-media-content/using-digital-rights-management/workflow-for-playing-protected-content.md",sourceDirName:"development/rich-media-content/using-digital-rights-management",slug:"/development/rich-media-content/using-digital-rights-management/workflow-for-playing-protected-content",permalink:"/docs/development/rich-media-content/using-digital-rights-management/workflow-for-playing-protected-content",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/rich-media-content/using-digital-rights-management/workflow-for-playing-protected-content.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Factory reset",permalink:"/docs/development/rich-media-content/using-digital-rights-management/factory-reset"},next:{title:"Adding PDF content in AIR",permalink:"/docs/development/rich-media-content/adding-pdf-content-in-air"}},l={},p=[],d={toc:p},s="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"workflow-for-playing-protected-content"},"Workflow for playing protected content"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"MediaPlayer")," instance."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"player = new MediaPlayer();\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Register ",(0,r.kt)("inlineCode",{parentName:"p"},"MediaPlayerCapabilityChangeEvent.HAS_DRM_CHANGE")," event to the\nplayer. This event will be dispatched if the content is DRM protected."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"player.addEventListener(MediaPlayerCapabilityChangeEvent.HAS_DRM_CHANGE, onDRMCapabilityChange);\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the event handler, obtain the ",(0,r.kt)("inlineCode",{parentName:"p"},"DRMTrait")," instance. ",(0,r.kt)("inlineCode",{parentName:"p"},"DRMTrait")," is the\ninterface through which you invoke DRM-related methods, such as\n",(0,r.kt)("inlineCode",{parentName:"p"},"authenticate()"),". When loading a DRM-protected content, OSMF performs the\nDRM validating actions and dispatches state events. Add a\n",(0,r.kt)("inlineCode",{parentName:"p"},"DRMEvent.DRM_STATE_CHANGE")," event handler to the ",(0,r.kt)("inlineCode",{parentName:"p"},"DRMTrait"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"private function onDRMCapabilityChange(event :MediaPlayerCapabilityChangeEvent):void\n    {\n        if (event.type == MediaPlayerCapabilityChangeEvent.HAS_DRM_CHANGE\n            && event.enabled)\n        {\n            drmTrait = player.media.getTrait(MediaTraitType.DRM) as DRMTrait;\n            drmTrait.addEventListener\n                (DRMEvent.DRM_STATE_CHANGE,                     onDRMStateChange);\n        }\n    }\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Handle the DRM events in the ",(0,r.kt)("inlineCode",{parentName:"p"},"onDRMStateChange()")," method."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'private function onDRMStateChange(event :DRMEvent) :void\n{\n    trace ( "DRMState: ",event.drmState);\n    switch(event.drmState)\n    {\n        case DRMState.AUTHENTICATION_NEEDED:\n            // Identity-based content\n            var authPopup :AuthWindow = AuthWindow.create(_parentWin);\n            authPopup.serverURL = event.serverURL;\n            authPopup.addEventListener("dismiss", function () :void {\n                trace ("Authentication dismissed");\n                if(_drmTrait != null)\n                {\n                    //Ignore authentication. Just\n                    //try to acquire a license.\n                    _drmTrait.authenticate(null, null);\n                }\n            });\n            authPopup.addEventListener("authenticate",\n                            function (event :AuthWindowEvent) :void {\n                if(_drmTrait != null)\n                {\n                    _drmTrait.authenticate(event.username, event.password);\n                }\n            });\n            authPopup.show();\n            break;\n        case DRMState.AUTHENTICATING:\n            //Display any authentication message.\n            trace("Authenticating...");\n            break;\n        case DRMState.AUTHENTICATION_COMPLETE:\n            // Start to retrieve voucher and playback.\n            // You can display the voucher information at this point.\n            if(event.token)\n            // You just received the authentication token.\n            {\n                trace("Authentication success. Token: \\n", event.token);\n            }\n            else\n            // You have got the voucher.\n            {\n                trace("DRM License:");\n                trace("Playback window period: ",\n                    !isNaN(event.period) ? event.period == 0 ?\n                    "<unlimited>" : event.period : "<none>");\n                trace("Playback window end date: ",\n                    event.endDate != null ? event.endDate : "<none>");\n                trace("Playback window start date: ",\n                    event.startDate != null ? event.startDate : "<none>");\n            }\n            break;\n        case DRMState.AUTHENTICATION_ERROR:\n            trace ("DRM Error:", event.mediaError.errorID +\n                "[" + DRMErrorEventRef.getDRMErrorMnemonic\n                (event.mediaError.errorID) + "]");\n            //Stop everything.\n            player.media = null;\n            break;\n        case DRMState.DRM_SYSTEM_UPDATING:\n            Logger.log("Downloading DRM module...");\n            break;\n        case DRMState.UNINITIALIZED:\n            break;\n    }\n}\n')))))}m.isMDXComponent=!0}}]);