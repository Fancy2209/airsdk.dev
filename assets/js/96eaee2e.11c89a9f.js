"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[82719],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=a,m=d["".concat(p,".").concat(h)]||d[h]||c[h]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},50957:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const i={sidebar_position:5},o="Gesture event handling",s={unversionedId:"development/user-interaction/touch-multitouch-and-gesture-input/gesture-event-handling",id:"development/user-interaction/touch-multitouch-and-gesture-input/gesture-event-handling",title:"Gesture event handling",description:"Handle gesture events in the same way as basic touch events. You can listen for",source:"@site/docs/development/user-interaction/touch-multitouch-and-gesture-input/gesture-event-handling.md",sourceDirName:"development/user-interaction/touch-multitouch-and-gesture-input",slug:"/development/user-interaction/touch-multitouch-and-gesture-input/gesture-event-handling",permalink:"/docs/development/user-interaction/touch-multitouch-and-gesture-input/gesture-event-handling",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/user-interaction/touch-multitouch-and-gesture-input/gesture-event-handling.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"mainSidebar",previous:{title:"Touch and drag",permalink:"/docs/development/user-interaction/touch-multitouch-and-gesture-input/touch-and-drag"},next:{title:"Troubleshooting",permalink:"/docs/development/user-interaction/touch-multitouch-and-gesture-input/troubleshooting"}},p={},l=[{value:"Gesture Event properties",id:"gesture-event-properties",level:2},{value:"Gesture phases",id:"gesture-phases",level:2},{value:"Gesture phase is &quot;all&quot; for simple gesture events",id:"gesture-phase-is-all-for-simple-gesture-events",level:3}],u={toc:l},d="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"gesture-event-handling"},"Gesture event handling"),(0,a.kt)("p",null,"Handle gesture events in the same way as basic touch events. You can listen for\na series of gesture events defined by the event type constants in the\n",(0,a.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/events/TransformGestureEvent.html"},"TransformGestureEvent"),"\nclass, the\n",(0,a.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/events/GestureEvent.html"},"GestureEvent"),"\nclass and the\n",(0,a.kt)("a",{parentName:"p",href:"https://airsdk.dev/reference/actionscript/3.0/flash/events/PressAndTapGestureEvent.html"},"PressAndTapGestureEvent"),"\nclass."),(0,a.kt)("p",null,"To handle a gesture touch event:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Set your application to handle gesture input by setting the\n",(0,a.kt)("inlineCode",{parentName:"p"},"flash.ui.Multitouch.inputMode")," property to ",(0,a.kt)("inlineCode",{parentName:"p"},"MultitouchInputMode.GESTURE"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Attach an event listener to an instance of a class that inherits properties\nfrom the InteractiveObject class, such as Sprite or TextField.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Specify the type of gesture event to handle.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Call an event handler function to do something in response to the event."))),(0,a.kt)("p",null,"For example, the following code displays a message when the square drawn on\n",(0,a.kt)("inlineCode",{parentName:"p"},"mySprite")," is swiped on a touch-enabled screen:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Multitouch.inputMode=MultitouchInputMode.GESTURE;\n\nvar mySprite:Sprite = new Sprite();\nvar myTextField:TextField = new TextField();\n\nmySprite.graphics.beginFill(0x336699);\nmySprite.graphics.drawRect(0,0,40,40);\naddChild(mySprite);\n\nmySprite.addEventListener(TransformGestureEvent.GESTURE_SWIPE, swipehandler);\n\nfunction swipehandler(evt:TransformGestureEvent): void {\n    myTextField.text = "I\'ve been swiped";\n    myTextField.y = 50;\n    addChild(myTextField);\n}\n')),(0,a.kt)("p",null,"Two-finger tap events are handled the same way, but use the GestureEvent class:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Multitouch.inputMode=MultitouchInputMode.GESTURE;\n\nvar mySprite:Sprite = new Sprite();\nvar myTextField:TextField = new TextField();\n\nmySprite.graphics.beginFill(0x336699);\nmySprite.graphics.drawRect(0,0,40,40);\naddChild(mySprite);\n\nmySprite.addEventListener(GestureEvent.GESTURE_TWO_FINGER_TAP, taphandler);\n\nfunction taphandler(evt:GestureEvent): void {\n    myTextField.text = "I\'ve been two-finger tapped";\n    myTextField.y = 50;\n    addChild(myTextField);\n}\n')),(0,a.kt)("p",null,"Press-and-tap events are also handled the same way, but use the\nPressAndTapGestureEvent class:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Multitouch.inputMode=MultitouchInputMode.GESTURE;\n\nvar mySprite:Sprite = new Sprite();\nvar myTextField:TextField = new TextField();\n\nmySprite.graphics.beginFill(0x336699);\nmySprite.graphics.drawRect(0,0,40,40);\naddChild(mySprite);\n\nmySprite.addEventListener(PressAndTapGestureEvent.ESTURE_PRESS_AND_TAP, taphandler);\n\nfunction taphandler(evt:PressAndTapGestureEvent): void {\n    myTextField.text = "I\'ve been press-and-tapped";\n    myTextField.y = 50;\n    addChild(myTextField);\n}\n')),(0,a.kt)("p",null,"Note: Not all GestureEvent, TransformGestureEvent, and PressAndTapGestureEvent\nevent types are supported in all runtime environments. For example, not all\ntouch-enabled devices are capable or detecting a multi-finger swipe. So, the\nInteractiveObject ",(0,a.kt)("inlineCode",{parentName:"p"},"gestureSwipe")," events are not supported on those devices. Try\ntesting for specific event support to ensure your application works, and see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/user-interaction/touch-multitouch-and-gesture-input/troubleshooting"},"Troubleshooting")," for more information."),(0,a.kt)("h2",{id:"gesture-event-properties"},"Gesture Event properties"),(0,a.kt)("p",null,"Gesture events have a smaller scope of event properties than basic touch events.\nYou access them the same way, through the event object in the event handler\nfunction."),(0,a.kt)("p",null,"For example, the following code rotates ",(0,a.kt)("inlineCode",{parentName:"p"},"mySprite")," as the user performs a\nrotation gesture on it. The text field shows the amount of rotation since the\nlast gesture (when testing this code, rotate it several times to see the values\nchange):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Multitouch.inputMode=MultitouchInputMode.GESTURE;\n\nvar mySprite:Sprite = new Sprite();\nvar mySpriteCon:Sprite = new Sprite();\nvar myTextField:TextField = new TextField();\nmyTextField.y = 50;\naddChild(myTextField);\n\nmySprite.graphics.beginFill(0x336699);\nmySprite.graphics.drawRect(-20,-20,40,40);\nmySpriteCon.addChild(mySprite);\nmySprite.x = 20;\nmySprite.y = 20;\naddChild(mySpriteCon);\n\nmySprite.addEventListener(TransformGestureEvent.GESTURE_ROTATE, rothandler);\n\nfunction rothandler(evt:TransformGestureEvent): void {\n    evt.target.parent.rotationZ += evt.target.rotation;\n    myTextField.text = evt.target.parent.rotation.toString();\n}\n")),(0,a.kt)("p",null,"Note: Not all TransformGestureEvent properties are supported in all runtime\nenvironments. For example, not all touch-enabled devices are capable or\ndetecting the rotation of a gesture on the screen. So, the\n",(0,a.kt)("inlineCode",{parentName:"p"},"TransformGestureEvent.rotation")," property is not supported on those devices. Try\ntesting for specific property support to ensure your application works, and see\n",(0,a.kt)("a",{parentName:"p",href:"/docs/development/user-interaction/touch-multitouch-and-gesture-input/troubleshooting"},"Troubleshooting")," for more information."),(0,a.kt)("h2",{id:"gesture-phases"},"Gesture phases"),(0,a.kt)("p",null,"Additionally, the gesture events can be tracked through phases, so you can track\nproperties as the gesture is taking place. For example, you can track\nx-coordinates as an object is moved with a swipe gesture. Use those values to\ndraw a line through all the points in its path after the swipe is complete. Or,\nvisually change a display object as it is dragged across a screen using a pan\ngesture. Change the object again once the pan gesture is complete."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Multitouch.inputMode = MultitouchInputMode.GESTURE;\nvar mySprite = new Sprite();\nmySprite.addEventListener(TransformGestureEvent.GESTURE_PAN , onPan);\nmySprite.graphics.beginFill(0x336699);\nmySprite.graphics.drawRect(0, 0, 40, 40);\nvar myTextField = new TextField();\nmyTextField.y = 200;\naddChild(mySprite);\naddChild(myTextField);\n\nfunction onPan(evt:TransformGestureEvent):void {\n    evt.target.localX++;\n\n    if (evt.phase==GesturePhase.BEGIN) {\n        myTextField.text = "Begin";\n        evt.target.scaleX *= 1.5;\n        evt.target.scaleY *= 1.5;\n    }\n    if (evt.phase==GesturePhase.UPDATE) {\n        myTextField.text = "Update";\n        evt.target.alpha = 0.5;\n    }\n    if (evt.phase==GesturePhase.END) {\n        myTextField.text = "End";\n        evt.target.width = 40;\n        evt.target.height = 40;\n        evt.target.alpha = 1;\n    }\n}\n')),(0,a.kt)("p",null,"Note: The frequency of the update phase depends on the runtime's environment.\nSome operating system and hardware combinations do not relay updates at all."),(0,a.kt)("h3",{id:"gesture-phase-is-all-for-simple-gesture-events"},'Gesture phase is "all" for simple gesture events'),(0,a.kt)("p",null,"Some gesture event objects do not track individual phases of the gesture event,\nand instead populate the event object's phase property with the value all. The\nsimple gestures swipe and two-finger tap do not track the event by multiple\nphases. The ",(0,a.kt)("inlineCode",{parentName:"p"},"phase")," property of the event object for an InteractiveObject\nlistening for the ",(0,a.kt)("inlineCode",{parentName:"p"},"gestureSwipe")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"gestureTwoFingerTap")," events is always ",(0,a.kt)("inlineCode",{parentName:"p"},"all"),"\nonce the event is dispatched:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Multitouch.inputMode = MultitouchInputMode.GESTURE;\nvar mySprite = new Sprite();\nmySprite.addEventListener(TransformGestureEvent.GESTURE_SWIPE, onSwipe);\nmySprite.addEventListener(GestureEvent.GESTURE_TWO_FINGER_TAP, onTwoTap);\nmySprite.graphics.beginFill(0x336699);\nmySprite.graphics.drawRect(0, 0, 40, 40);\nvar myTextField = new TextField();\nmyTextField.y = 200;\naddChild(mySprite);\naddChild(myTextField);\n\nfunction onSwipe(swipeEvt:TransformGestureEvent):void {\n    myTextField.text = swipeEvt.phase // Output is "all"\n}\nfunction onTwoTap(tapEvt:GestureEvent):void {\n    myTextField.text = tapEvt.phase // Output is "all"\n}\n')))}c.isMDXComponent=!0}}]);