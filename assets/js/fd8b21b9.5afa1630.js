"use strict";(self.webpackChunkairsdk_dev=self.webpackChunkairsdk_dev||[]).push([[84209],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),g=p(r),u=i,d=g["".concat(c,".").concat(u)]||g[u]||m[u]||a;return r?n.createElement(d,o(o({ref:t},l),{},{components:r})):n.createElement(d,o({ref:t},l))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[g]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},55448:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(87462),i=(r(67294),r(3905));const a={sidebar_position:5},o="Comparing strings",s={unversionedId:"development/core-actionscript-classes/working-with-strings/comparing-strings",id:"development/core-actionscript-classes/working-with-strings/comparing-strings",title:"Comparing strings",description:"You can use the following operators to compare strings: <, <=, !=, ==,",source:"@site/docs/development/core-actionscript-classes/working-with-strings/comparing-strings.md",sourceDirName:"development/core-actionscript-classes/working-with-strings",slug:"/development/core-actionscript-classes/working-with-strings/comparing-strings",permalink:"/docs/development/core-actionscript-classes/working-with-strings/comparing-strings",draft:!1,editUrl:"https://github.com/airsdk/airsdk.dev/edit/main/docs/development/core-actionscript-classes/working-with-strings/comparing-strings.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"mainSidebar",previous:{title:"Working with characters in strings",permalink:"/docs/development/core-actionscript-classes/working-with-strings/working-with-characters-in-strings"},next:{title:"Obtaining string representations of other objects",permalink:"/docs/development/core-actionscript-classes/working-with-strings/obtaining-string-representations-of-other-objects"}},c={},p=[],l={toc:p},g="wrapper";function m(e){let{components:t,...r}=e;return(0,i.kt)(g,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"comparing-strings"},"Comparing strings"),(0,i.kt)("p",null,"You can use the following operators to compare strings: ",(0,i.kt)("inlineCode",{parentName:"p"},"<"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"<="),", ",(0,i.kt)("inlineCode",{parentName:"p"},"!="),", ",(0,i.kt)("inlineCode",{parentName:"p"},"=="),",\n",(0,i.kt)("inlineCode",{parentName:"p"},"=>"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},">"),". These operators can be used with conditional statements, such as\n",(0,i.kt)("inlineCode",{parentName:"p"},"if")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"while"),", as the following example shows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var str1:String = "Apple";\nvar str2:String = "apple";\nif (str1 < str2)\n{\n    trace("A < a, B < b, C < c, ...");\n}\n')),(0,i.kt)("p",null,"When using these operators with strings, ActionScript considers the character\ncode value of each character in the string, comparing characters from left to\nright, as in the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'trace("A" < "B"); // true\ntrace("A" < "a"); // true\ntrace("Ab" < "az"); // true\ntrace("abc" < "abza"); // true\n')),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"==")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"!=")," operators to compare strings with each other and to\ncompare strings with other types of objects, as the following example shows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-actionscript"},'var str1:String = "1";\nvar str1b:String = "1";\nvar str2:String = "2";\ntrace(str1 == str1b); // true\ntrace(str1 == str2); // false\nvar total:uint = 1;\ntrace(str1 == total); // true\n')))}m.isMDXComponent=!0}}]);